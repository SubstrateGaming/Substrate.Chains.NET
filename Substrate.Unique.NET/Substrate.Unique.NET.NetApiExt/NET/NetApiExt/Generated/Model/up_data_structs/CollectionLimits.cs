//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.Unique.NET.NetApiExt.Generated.Model.up_data_structs
{
    
    
    /// <summary>
    /// >> 257 - Composite[up_data_structs.CollectionLimits]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class CollectionLimits : BaseType
    {
        
        /// <summary>
        /// >> account_token_ownership_limit
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> _accountTokenOwnershipLimit;
        
        /// <summary>
        /// >> sponsored_data_size
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> _sponsoredDataSize;
        
        /// <summary>
        /// >> sponsored_data_rate_limit
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Unique.NET.NetApiExt.Generated.Model.up_data_structs.EnumSponsoringRateLimit> _sponsoredDataRateLimit;
        
        /// <summary>
        /// >> token_limit
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> _tokenLimit;
        
        /// <summary>
        /// >> sponsor_transfer_timeout
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> _sponsorTransferTimeout;
        
        /// <summary>
        /// >> sponsor_approve_timeout
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> _sponsorApproveTimeout;
        
        /// <summary>
        /// >> owner_can_transfer
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool> _ownerCanTransfer;
        
        /// <summary>
        /// >> owner_can_destroy
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool> _ownerCanDestroy;
        
        /// <summary>
        /// >> transfers_enabled
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool> _transfersEnabled;
        
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> AccountTokenOwnershipLimit
        {
            get
            {
                return this._accountTokenOwnershipLimit;
            }
            set
            {
                this._accountTokenOwnershipLimit = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> SponsoredDataSize
        {
            get
            {
                return this._sponsoredDataSize;
            }
            set
            {
                this._sponsoredDataSize = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Unique.NET.NetApiExt.Generated.Model.up_data_structs.EnumSponsoringRateLimit> SponsoredDataRateLimit
        {
            get
            {
                return this._sponsoredDataRateLimit;
            }
            set
            {
                this._sponsoredDataRateLimit = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> TokenLimit
        {
            get
            {
                return this._tokenLimit;
            }
            set
            {
                this._tokenLimit = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> SponsorTransferTimeout
        {
            get
            {
                return this._sponsorTransferTimeout;
            }
            set
            {
                this._sponsorTransferTimeout = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> SponsorApproveTimeout
        {
            get
            {
                return this._sponsorApproveTimeout;
            }
            set
            {
                this._sponsorApproveTimeout = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool> OwnerCanTransfer
        {
            get
            {
                return this._ownerCanTransfer;
            }
            set
            {
                this._ownerCanTransfer = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool> OwnerCanDestroy
        {
            get
            {
                return this._ownerCanDestroy;
            }
            set
            {
                this._ownerCanDestroy = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool> TransfersEnabled
        {
            get
            {
                return this._transfersEnabled;
            }
            set
            {
                this._transfersEnabled = value;
            }
        }
        
        public override string TypeName()
        {
            return "CollectionLimits";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(AccountTokenOwnershipLimit.Encode());
            result.AddRange(SponsoredDataSize.Encode());
            result.AddRange(SponsoredDataRateLimit.Encode());
            result.AddRange(TokenLimit.Encode());
            result.AddRange(SponsorTransferTimeout.Encode());
            result.AddRange(SponsorApproveTimeout.Encode());
            result.AddRange(OwnerCanTransfer.Encode());
            result.AddRange(OwnerCanDestroy.Encode());
            result.AddRange(TransfersEnabled.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            AccountTokenOwnershipLimit = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            AccountTokenOwnershipLimit.Decode(byteArray, ref p);
            SponsoredDataSize = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            SponsoredDataSize.Decode(byteArray, ref p);
            SponsoredDataRateLimit = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Unique.NET.NetApiExt.Generated.Model.up_data_structs.EnumSponsoringRateLimit>();
            SponsoredDataRateLimit.Decode(byteArray, ref p);
            TokenLimit = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            TokenLimit.Decode(byteArray, ref p);
            SponsorTransferTimeout = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            SponsorTransferTimeout.Decode(byteArray, ref p);
            SponsorApproveTimeout = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            SponsorApproveTimeout.Decode(byteArray, ref p);
            OwnerCanTransfer = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool>();
            OwnerCanTransfer.Decode(byteArray, ref p);
            OwnerCanDestroy = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool>();
            OwnerCanDestroy.Decode(byteArray, ref p);
            TransfersEnabled = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.Bool>();
            TransfersEnabled.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
