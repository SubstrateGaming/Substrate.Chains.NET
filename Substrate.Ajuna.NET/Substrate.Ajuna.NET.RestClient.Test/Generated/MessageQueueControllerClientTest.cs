//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Ajuna.NET.RestClient.Test.Generated
{
   using System;
   using NUnit.Framework;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Ajuna.NET.RestClient.Mockup.Generated.Clients;
   using Substrate.Ajuna.NET.RestClient.Generated.Clients;
   using Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue;
   using Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core;
   
   public class MessageQueueControllerClientTest : ClientTestBase
   {
      private System.Net.Http.HttpClient _httpClient;
      [SetUp()]
      public void Setup()
      {
         _httpClient = CreateHttpClient();
      }
      public Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.BookState GetTestValue2()
      {
         Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.BookState result;
         result = new Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.BookState();
         result.Begin = this.GetTestValueU32();
         result.End = this.GetTestValueU32();
         result.Count = this.GetTestValueU32();
         result.ReadyNeighbours = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.Neighbours>();
         result.ReadyNeighbours.Create(this.GetTestValue3());
         result.MessageCount = this.GetTestValueU64();
         result.Size = this.GetTestValueU64();
         return result;
      }
      public Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.Neighbours GetTestValue3()
      {
         Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.Neighbours result;
         result = new Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.Neighbours();
         result.Prev = new Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin();
         result.Prev = this.GetTestValue4();
         result.Next = new Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin();
         result.Next = this.GetTestValue5();
         return result;
      }
      public Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin GetTestValue4()
      {
         Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin result;
         result = new Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin();
         // NOT IMPLEMENTED >> Initialize Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin
         return result;
      }
      public Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin GetTestValue5()
      {
         Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin result;
         result = new Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin();
         // NOT IMPLEMENTED >> Initialize Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin
         return result;
      }
      public Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin GetTestValue6()
      {
         Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin result;
         result = new Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin();
         // NOT IMPLEMENTED >> Initialize Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin
         return result;
      }
      [Test()]
      public async System.Threading.Tasks.Task TestBookStateFor()
      {
         // Construct new Mockup client to test with.
         MessageQueueControllerMockupClient mockupClient = new MessageQueueControllerMockupClient(_httpClient);

         // Construct new subscription client to test with.
         var subscriptionClient = CreateSubscriptionClient();

         // Construct new RPC client to test with.
         MessageQueueControllerClient rpcClient = new MessageQueueControllerClient(_httpClient, subscriptionClient);
         Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.BookState mockupValue = this.GetTestValue2();
         Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin mockupKey = this.GetTestValue6();

         Assert.IsTrue(await rpcClient.SubscribeBookStateFor(mockupKey));

         // Save the previously generated mockup value in RPC service storage.
         bool mockupSetResult = await mockupClient.SetBookStateFor(mockupValue, mockupKey);

         // Test that the expected mockup value was handled successfully from RPC service.
         Assert.IsTrue(mockupSetResult);
         var cts = new System.Threading.CancellationTokenSource(TimeSpan.FromSeconds(1));
         Assert.IsTrue(await subscriptionClient.ReceiveNextAsync(cts.Token));

         Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.BookState rpcResult = await rpcClient.GetBookStateFor(mockupKey);

         // Test that the expected mockup value matches the actual result from RPC service.
         Assert.AreEqual(mockupValue.Encode(), rpcResult.Encode());
      }
      public Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin GetTestValue8()
      {
         Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin result;
         result = new Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin();
         // NOT IMPLEMENTED >> Initialize Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin
         return result;
      }
      [Test()]
      public async System.Threading.Tasks.Task TestServiceHead()
      {
         // Construct new Mockup client to test with.
         MessageQueueControllerMockupClient mockupClient = new MessageQueueControllerMockupClient(_httpClient);

         // Construct new subscription client to test with.
         var subscriptionClient = CreateSubscriptionClient();

         // Construct new RPC client to test with.
         MessageQueueControllerClient rpcClient = new MessageQueueControllerClient(_httpClient, subscriptionClient);
         Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin mockupValue = this.GetTestValue8();


         Assert.IsTrue(await rpcClient.SubscribeServiceHead());

         // Save the previously generated mockup value in RPC service storage.
         bool mockupSetResult = await mockupClient.SetServiceHead(mockupValue);

         // Test that the expected mockup value was handled successfully from RPC service.
         Assert.IsTrue(mockupSetResult);
         var cts = new System.Threading.CancellationTokenSource(TimeSpan.FromSeconds(1));
         Assert.IsTrue(await subscriptionClient.ReceiveNextAsync(cts.Token));

         Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin rpcResult = await rpcClient.GetServiceHead();

         // Test that the expected mockup value matches the actual result from RPC service.
         Assert.AreEqual(mockupValue.Encode(), rpcResult.Encode());
      }
      public Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.Page GetTestValue10()
      {
         Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.Page result;
         result = new Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.Page();
         result.Remaining = this.GetTestValueU32();
         result.RemainingSize = this.GetTestValueU32();
         result.FirstIndex = this.GetTestValueU32();
         result.First = this.GetTestValueU32();
         result.Last = this.GetTestValueU32();
         result.Heap = new Substrate.Ajuna.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT41();
         result.Heap = this.GetTestValue11();
         return result;
      }
      public Substrate.Ajuna.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT41 GetTestValue11()
      {
         Substrate.Ajuna.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT41 result;
         result = new Substrate.Ajuna.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT41();
         result.Value = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>();
         result.Value.Create(new Substrate.NetApi.Model.Types.Primitive.U8[] {
                  this.GetTestValueU8()});
         return result;
      }
      public Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin, Substrate.NetApi.Model.Types.Primitive.U32> GetTestValue12()
      {
         Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin, Substrate.NetApi.Model.Types.Primitive.U32> result;
         result = new Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin, Substrate.NetApi.Model.Types.Primitive.U32>();
         result.Create(this.GetTestValue13(), this.GetTestValueU32());
         return result;
      }
      public Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin GetTestValue13()
      {
         Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin result;
         result = new Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin();
         // NOT IMPLEMENTED >> Initialize Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin
         return result;
      }
      [Test()]
      public async System.Threading.Tasks.Task TestPages()
      {
         // Construct new Mockup client to test with.
         MessageQueueControllerMockupClient mockupClient = new MessageQueueControllerMockupClient(_httpClient);

         // Construct new subscription client to test with.
         var subscriptionClient = CreateSubscriptionClient();

         // Construct new RPC client to test with.
         MessageQueueControllerClient rpcClient = new MessageQueueControllerClient(_httpClient, subscriptionClient);
         Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.Page mockupValue = this.GetTestValue10();
         Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Ajuna.NET.NetApiExt.Generated.Model.cumulus_primitives_core.EnumAggregateMessageOrigin, Substrate.NetApi.Model.Types.Primitive.U32> mockupKey = this.GetTestValue12();

         Assert.IsTrue(await rpcClient.SubscribePages(mockupKey));

         // Save the previously generated mockup value in RPC service storage.
         bool mockupSetResult = await mockupClient.SetPages(mockupValue, mockupKey);

         // Test that the expected mockup value was handled successfully from RPC service.
         Assert.IsTrue(mockupSetResult);
         var cts = new System.Threading.CancellationTokenSource(TimeSpan.FromSeconds(1));
         Assert.IsTrue(await subscriptionClient.ReceiveNextAsync(cts.Token));

         Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_message_queue.Page rpcResult = await rpcClient.GetPages(mockupKey);

         // Test that the expected mockup value matches the actual result from RPC service.
         Assert.AreEqual(mockupValue.Encode(), rpcResult.Encode());
      }
   }
}
