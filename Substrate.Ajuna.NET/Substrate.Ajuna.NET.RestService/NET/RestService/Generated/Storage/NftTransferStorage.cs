//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Ajuna.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// INftTransferStorage interface definition.
    /// </summary>
    public interface INftTransferStorage : IStorage
    {
        
        /// <summary>
        /// >> NftStatuses
        /// </summary>
        Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_ajuna_nft_transfer.pallet.EnumNftStatus GetNftStatuses(string key);
    }
    
    /// <summary>
    /// NftTransferStorage class definition.
    /// </summary>
    public sealed class NftTransferStorage : INftTransferStorage
    {
        
        /// <summary>
        /// _nftStatusesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_ajuna_nft_transfer.pallet.EnumNftStatus> _nftStatusesTypedStorage;
        
        /// <summary>
        /// NftTransferStorage constructor.
        /// </summary>
        public NftTransferStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.NftStatusesTypedStorage = new TypedMapStorage<Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_ajuna_nft_transfer.pallet.EnumNftStatus>("NftTransfer.NftStatuses", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _nftStatusesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_ajuna_nft_transfer.pallet.EnumNftStatus> NftStatusesTypedStorage
        {
            get
            {
                return _nftStatusesTypedStorage;
            }
            set
            {
                _nftStatusesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await NftStatusesTypedStorage.InitializeAsync("NftTransfer", "NftStatuses");
        }
        
        /// <summary>
        /// Implements any storage change for NftTransfer.NftStatuses
        /// </summary>
        [StorageChange("NftTransfer", "NftStatuses")]
        public void OnUpdateNftStatuses(string key, string data)
        {
            NftStatusesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> NftStatuses
        /// </summary>
        public Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_ajuna_nft_transfer.pallet.EnumNftStatus GetNftStatuses(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (NftStatusesTypedStorage.Dictionary.TryGetValue(key, out Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_ajuna_nft_transfer.pallet.EnumNftStatus result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
