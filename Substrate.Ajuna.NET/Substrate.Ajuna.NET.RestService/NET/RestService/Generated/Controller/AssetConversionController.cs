//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.Ajuna.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Ajuna.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// AssetConversionController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class AssetConversionController : ControllerBase
    {
        
        private IAssetConversionStorage _assetConversionStorage;
        
        /// <summary>
        /// AssetConversionController constructor.
        /// </summary>
        public AssetConversionController(IAssetConversionStorage assetConversionStorage)
        {
            _assetConversionStorage = assetConversionStorage;
        }
        
        /// <summary>
        /// >> Pools
        ///  Map from `PoolAssetId` to `PoolInfo`. This establishes whether a pool has been officially
        ///  created rather than people sending tokens directly to a pool's public account.
        /// </summary>
        [HttpGet("Pools")]
        [ProducesResponseType(typeof(Substrate.Ajuna.NET.NetApiExt.Generated.Model.pallet_asset_conversion.types.PoolInfo), 200)]
        [StorageKeyBuilder(typeof(Substrate.Ajuna.NET.NetApiExt.Generated.Storage.AssetConversionStorage), "PoolsParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Ajuna.NET.NetApiExt.Generated.Model.frame_support.traits.tokens.fungible.union_of.EnumNativeOrWithId, Substrate.Ajuna.NET.NetApiExt.Generated.Model.frame_support.traits.tokens.fungible.union_of.EnumNativeOrWithId>))]
        public IActionResult GetPools(string key)
        {
            return this.Ok(_assetConversionStorage.GetPools(key));
        }
        
        /// <summary>
        /// >> NextPoolAssetId
        ///  Stores the `PoolAssetId` that is going to be used for the next lp token.
        ///  This gets incremented whenever a new lp pool is created.
        /// </summary>
        [HttpGet("NextPoolAssetId")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.Ajuna.NET.NetApiExt.Generated.Storage.AssetConversionStorage), "NextPoolAssetIdParams")]
        public IActionResult GetNextPoolAssetId()
        {
            return this.Ok(_assetConversionStorage.GetNextPoolAssetId());
        }
    }
}
