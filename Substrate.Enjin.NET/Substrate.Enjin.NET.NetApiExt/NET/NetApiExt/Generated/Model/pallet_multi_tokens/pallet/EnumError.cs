//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_multi_tokens.pallet
{
    
    
    /// <summary>
    /// >> Error
    /// 
    ///			Custom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)
    ///			of this pallet.
    ///			
    /// </summary>
    public enum Error
    {
        
        /// <summary>
        /// >> CollectionNotFound
        /// Collection was not found
        /// </summary>
        CollectionNotFound = 0,
        
        /// <summary>
        /// >> CollectionAccountNotFound
        /// CollectionAccount was not found
        /// </summary>
        CollectionAccountNotFound = 1,
        
        /// <summary>
        /// >> TokenNotFound
        /// Token was not found
        /// </summary>
        TokenNotFound = 2,
        
        /// <summary>
        /// >> TokenAccountNotFound
        /// TokenAccount was not found
        /// </summary>
        TokenAccountNotFound = 3,
        
        /// <summary>
        /// >> NoPermission
        /// Caller is not allowed to execute this extrinsic
        /// </summary>
        NoPermission = 4,
        
        /// <summary>
        /// >> BalanceLow
        /// Not enough balance to perform the operation.
        /// </summary>
        BalanceLow = 5,
        
        /// <summary>
        /// >> Frozen
        /// The operation failed due to an item being frozen
        /// </summary>
        Frozen = 6,
        
        /// <summary>
        /// >> HasNeverFreezeState
        /// The token has a never freeze state. The state cannot be changed and the token cannot be
        /// frozen.
        /// </summary>
        HasNeverFreezeState = 7,
        
        /// <summary>
        /// >> PermanentlyFrozen
        /// The token is permanently frozen
        /// </summary>
        PermanentlyFrozen = 8,
        
        /// <summary>
        /// >> InvalidFreezeState
        /// The freeze state is not valid
        /// </summary>
        InvalidFreezeState = 9,
        
        /// <summary>
        /// >> AmountZero
        /// An amount of zero was used when it's not allowed
        /// </summary>
        AmountZero = 10,
        
        /// <summary>
        /// >> InvalidAttributeKey
        /// Attribute key invalid
        /// </summary>
        InvalidAttributeKey = 11,
        
        /// <summary>
        /// >> MaxTokenCountExceeded
        /// Tried to mint more tokens than allowed
        /// </summary>
        MaxTokenCountExceeded = 12,
        
        /// <summary>
        /// >> TokenMintCapExceeded
        /// The cap for the token was exceeded during mint
        /// </summary>
        TokenMintCapExceeded = 13,
        
        /// <summary>
        /// >> TokenAlreadyExists
        /// Tried to create Token that already exists
        /// </summary>
        TokenAlreadyExists = 14,
        
        /// <summary>
        /// >> DestroyForbiddenByAttributeCount
        /// The collection or token cannot be destroyed because it has attributes
        /// </summary>
        DestroyForbiddenByAttributeCount = 15,
        
        /// <summary>
        /// >> DestroyForbiddenByRemainingTokens
        /// Destroy is not allowed on collections that have tokens. Destroy all tokens before
        /// calling [`destroy_collection`](Pallet::destroy_collection). Keep in mind that the
        /// [`Tokens`] storage can remain even if all of [`Token`](ep_multi_tokens::Token)'s units
        /// were burned. A token can only be destroyed by setting
        /// [`remove_token_storage`](OnBurnInput::remove_token_storage) to true in
        /// [`burn`](Pallet::burn).
        /// </summary>
        DestroyForbiddenByRemainingTokens = 16,
        
        /// <summary>
        /// >> DestroyForbiddenByCollectionEvent
        /// The `OnCollectionEvent` trait has forbidden burning of the collection
        /// </summary>
        DestroyForbiddenByCollectionEvent = 17,
        
        /// <summary>
        /// >> DepositReserveFailed
        /// Unable to reserve the amount to create a new collection/token
        /// </summary>
        DepositReserveFailed = 18,
        
        /// <summary>
        /// >> DepositUnreserveFailed
        /// Unable to unreserve the amount to burn an existing collection/token
        /// </summary>
        DepositUnreserveFailed = 19,
        
        /// <summary>
        /// >> InvalidUnitPrice
        /// The unit price cannot be zero, cannot decrease, and `unit_price * total_supply` must
        /// be greater than `TokenAccountDeposit`
        /// </summary>
        InvalidUnitPrice = 20,
        
        /// <summary>
        /// >> BalanceBelowMinimumRequirement
        /// The balance is below the minimum required balance
        /// </summary>
        BalanceBelowMinimumRequirement = 21,
        
        /// <summary>
        /// >> MintFailedRequirements
        /// The minting did not meet the requirements set by the mint policy
        /// </summary>
        MintFailedRequirements = 22,
        
        /// <summary>
        /// >> IdleOperationQueueFull
        /// The idle operation queue is full and cannot accept new operations
        /// </summary>
        IdleOperationQueueFull = 23,
        
        /// <summary>
        /// >> ReservesLow
        /// Reserved balance is not enough to perform the operation
        /// </summary>
        ReservesLow = 24,
        
        /// <summary>
        /// >> TooManyReserves
        /// Max named reserves for an account are exceeded
        /// </summary>
        TooManyReserves = 25,
        
        /// <summary>
        /// >> TooManyLocks
        /// Max named locks for an account are exceeded
        /// </summary>
        TooManyLocks = 26,
        
        /// <summary>
        /// >> LiquidityRestrictions
        /// The balance is locked or restricted
        /// </summary>
        LiquidityRestrictions = 27,
        
        /// <summary>
        /// >> PercentageOutOfBounds
        /// Royalty percentage is above or below allowed bounds
        /// </summary>
        PercentageOutOfBounds = 28,
        
        /// <summary>
        /// >> CurrencyIncompatibleWithCollectionRoyalty
        /// Token cannot act as both a currency and a royalty
        /// </summary>
        CurrencyIncompatibleWithCollectionRoyalty = 29,
        
        /// <summary>
        /// >> MaxApprovalsExceeded
        /// The max number of approvals for this account was exceeded
        /// </summary>
        MaxApprovalsExceeded = 30,
        
        /// <summary>
        /// >> AlreadyExpired
        /// Tried to set an expiration that has already passed
        /// </summary>
        AlreadyExpired = 31,
        
        /// <summary>
        /// >> CollectionAlreadyApproved
        /// The collection is already approved for all, so it is useless to approve for a single
        /// token
        /// </summary>
        CollectionAlreadyApproved = 32,
        
        /// <summary>
        /// >> InsufficientAllowance
        /// Not enough allowance to perform the operation
        /// </summary>
        InsufficientAllowance = 33,
        
        /// <summary>
        /// >> WrongCurrentApprovedAmount
        /// The passed `current_amount` does not match the actual current amount of the approval
        /// </summary>
        WrongCurrentApprovedAmount = 34,
        
        /// <summary>
        /// >> CannotApproveSelf
        /// An account cannot approve itself as an operator
        /// </summary>
        CannotApproveSelf = 35,
        
        /// <summary>
        /// >> CannotTransferToSelf
        /// An account cannot transfer tokens to itself
        /// </summary>
        CannotTransferToSelf = 36,
        
        /// <summary>
        /// >> TransferParamCreationFailed
        /// Transfer params could not be created
        /// </summary>
        TransferParamCreationFailed = 37,
        
        /// <summary>
        /// >> OperationNotAllowedForNativeToken
        /// This operation is not allowed for the native token
        /// </summary>
        OperationNotAllowedForNativeToken = 38,
        
        /// <summary>
        /// >> InvalidExplicitRoyaltyCurrencies
        /// One or more of the explicit royalty currencies are invalid
        /// </summary>
        InvalidExplicitRoyaltyCurrencies = 39,
        
        /// <summary>
        /// >> InvalidAttributeCount
        /// Provided attribute count doesnt match the count is storage
        /// </summary>
        InvalidAttributeCount = 40,
        
        /// <summary>
        /// >> ConflictingLocation
        /// Conflicting MultiLocation for an AssetId
        /// </summary>
        ConflictingLocation = 41,
        
        /// <summary>
        /// >> CollectionIdAlreadyInUse
        /// Collection ID is already in use
        /// </summary>
        CollectionIdAlreadyInUse = 42,
        
        /// <summary>
        /// >> FreezeStateRequired
        /// Freeze state is required when freezing a token
        /// </summary>
        FreezeStateRequired = 43,
        
        /// <summary>
        /// >> PremintExceeded
        /// The preminted amount would be exceeded by the mint operation
        /// </summary>
        PremintExceeded = 44,
        
        /// <summary>
        /// >> TokenMetadataCreationFailed
        /// Token metadata could not be created from mint params
        /// </summary>
        TokenMetadataCreationFailed = 45,
        
        /// <summary>
        /// >> NoClaimAvailable
        /// There is nothing to claim
        /// </summary>
        NoClaimAvailable = 46,
        
        /// <summary>
        /// >> InvalidEthereumSignature
        /// The ethereum signature is invalid
        /// </summary>
        InvalidEthereumSignature = 47,
        
        /// <summary>
        /// >> InvalidEthereumAddress
        /// The ethereum address does not match the signature
        /// </summary>
        InvalidEthereumAddress = 48,
        
        /// <summary>
        /// >> TokenIdReservedForClaim
        /// The token id cannot be minted because it's reserved for claiming
        /// </summary>
        TokenIdReservedForClaim = 49,
        
        /// <summary>
        /// >> CollectionCountExceeded
        /// The number of collections has exceeded the bound
        /// </summary>
        CollectionCountExceeded = 50,
        
        /// <summary>
        /// >> WrongCount
        /// The passed count does not reflect the amount in storage
        /// </summary>
        WrongCount = 51,
        
        /// <summary>
        /// >> InvalidMintParams
        /// Mint params are invalid
        /// </summary>
        InvalidMintParams = 52,
    }
    
    /// <summary>
    /// >> 911 - Variant[pallet_multi_tokens.pallet.Error]
    /// 
    ///			Custom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)
    ///			of this pallet.
    ///			
    /// </summary>
    public sealed class EnumError : BaseEnum<Error>
    {
    }
}
