//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_stake_exchange.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// The pallet's extrinsics.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> create_offer
        /// Place a new offer with the given parameters
        /// 
        /// # Errors
        /// - [`Error::CallerNotOfferCreator`] if the caller account does not match offer account.
        /// - [`Error::ZeroOffer`] if offer amount is zero.
        /// - [`Error::ZeroRate`] if rate amount is zero.
        /// - [`Error::Overflow`] if arithmetic overflow occurs
        /// </summary>
        create_offer = 0,
        
        /// <summary>
        /// >> cancel_offer
        /// Cancel an existing offer with `offer_id`
        /// 
        /// # Errors
        /// - [`Error::CallerNotOfferCreator`] if the caller account does not match offer account.
        /// - [`Error::OfferNotFound`] if the `offer_id` does not exist
        /// </summary>
        cancel_offer = 1,
        
        /// <summary>
        /// >> configure_liquidity_account
        /// Set the liquidity config for the caller account
        /// </summary>
        configure_liquidity_account = 2,
        
        /// <summary>
        /// >> withdraw_liquidity
        /// Withdraw liquidity from a current active offer
        /// 
        /// # Errors
        /// - [`Error::CallerNotOfferCreator`] if the caller account does not match offer account.
        /// - [`Error::OfferNotFound`] if the offerId does not exist
        /// </summary>
        withdraw_liquidity = 3,
        
        /// <summary>
        /// >> add_liquidity
        /// Add liquidity to a current active offer
        /// 
        /// # Errors
        /// - [`Error::CallerNotOfferCreator`] if the caller account does not match bidding account.
        /// - [`Error::OfferNotFound`] if the offerId does not exist
        /// </summary>
        add_liquidity = 4,
        
        /// <summary>
        /// >> buy
        /// Buy from a current active offer, returning the native currency by exchanging the staked
        /// tokens
        /// 
        /// # Errors
        /// - [`Error::CallerNotOfferCreator`] if the caller account does not match bidding account.
        /// - [`Error::TokenRestriction`] if the tokenId is restricted by the LP
        /// - [`Error::NotEnoughLiquidity`] if the offer cannot cover the amount requested
        /// - [`Error::TransferParamCreationFailed`] if the multitokens transfer failed
        /// </summary>
        buy = 5,
    }
    
    /// <summary>
    /// >> 413 - Variant[pallet_stake_exchange.pallet.Call]
    /// The pallet's extrinsics.
    /// </summary>
    public sealed class EnumCall : BaseEnumExt<Call, Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_stake_exchange.types.CreateOffer, Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Model.Types.Primitive.U128>, Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_stake_exchange.types.LiquidityAccountConfig, BaseTuple<Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Model.Types.Primitive.U128>, Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Model.Types.Primitive.U128>>, BaseTuple<Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Model.Types.Primitive.U128>, Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Model.Types.Primitive.U128>>, BaseTuple<Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Model.Types.Primitive.U128>, Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Model.Types.Primitive.U128>, Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Model.Types.Primitive.U128>>>
    {
    }
}
