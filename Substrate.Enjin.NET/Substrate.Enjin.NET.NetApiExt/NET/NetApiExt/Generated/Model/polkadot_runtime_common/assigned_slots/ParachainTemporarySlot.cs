//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_common.assigned_slots
{
    
    
    /// <summary>
    /// >> 895 - Composite[polkadot_runtime_common.assigned_slots.ParachainTemporarySlot]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class ParachainTemporarySlot : BaseType
    {
        
        /// <summary>
        /// >> manager
        /// </summary>
        public Substrate.Enjin.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 Manager { get; set; }
        /// <summary>
        /// >> period_begin
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 PeriodBegin { get; set; }
        /// <summary>
        /// >> period_count
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 PeriodCount { get; set; }
        /// <summary>
        /// >> last_lease
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> LastLease { get; set; }
        /// <summary>
        /// >> lease_count
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 LeaseCount { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "ParachainTemporarySlot";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Manager.Encode());
            result.AddRange(PeriodBegin.Encode());
            result.AddRange(PeriodCount.Encode());
            result.AddRange(LastLease.Encode());
            result.AddRange(LeaseCount.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Manager = new Substrate.Enjin.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32();
            Manager.Decode(byteArray, ref p);
            PeriodBegin = new Substrate.NetApi.Model.Types.Primitive.U32();
            PeriodBegin.Decode(byteArray, ref p);
            PeriodCount = new Substrate.NetApi.Model.Types.Primitive.U32();
            PeriodCount.Decode(byteArray, ref p);
            LastLease = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            LastLease.Decode(byteArray, ref p);
            LeaseCount = new Substrate.NetApi.Model.Types.Primitive.U32();
            LeaseCount.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
