//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.hrmp.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains one variant per dispatchable that can be called by an extrinsic.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> hrmp_init_open_channel
        /// Initiate opening a channel from a parachain to a given recipient with given channel
        /// parameters.
        /// 
        /// - `proposed_max_capacity` - specifies how many messages can be in the channel at once.
        /// - `proposed_max_message_size` - specifies the maximum size of the messages.
        /// 
        /// These numbers are a subject to the relay-chain configuration limits.
        /// 
        /// The channel can be opened only after the recipient confirms it and only on a session
        /// change.
        /// </summary>
        hrmp_init_open_channel = 0,
        
        /// <summary>
        /// >> hrmp_accept_open_channel
        /// Accept a pending open channel request from the given sender.
        /// 
        /// The channel will be opened only on the next session boundary.
        /// </summary>
        hrmp_accept_open_channel = 1,
        
        /// <summary>
        /// >> hrmp_close_channel
        /// Initiate unilateral closing of a channel. The origin must be either the sender or the
        /// recipient in the channel being closed.
        /// 
        /// The closure can only happen on a session change.
        /// </summary>
        hrmp_close_channel = 2,
        
        /// <summary>
        /// >> force_clean_hrmp
        /// This extrinsic triggers the cleanup of all the HRMP storage items that
        /// a para may have. Normally this happens once per session, but this allows
        /// you to trigger the cleanup immediately for a specific parachain.
        /// 
        /// Origin must be Root.
        /// 
        /// Number of inbound and outbound channels for `para` must be provided as witness data of weighing.
        /// </summary>
        force_clean_hrmp = 3,
        
        /// <summary>
        /// >> force_process_hrmp_open
        /// Force process HRMP open channel requests.
        /// 
        /// If there are pending HRMP open channel requests, you can use this
        /// function process all of those requests immediately.
        /// 
        /// Total number of opening channels must be provided as witness data of weighing.
        /// </summary>
        force_process_hrmp_open = 4,
        
        /// <summary>
        /// >> force_process_hrmp_close
        /// Force process HRMP close channel requests.
        /// 
        /// If there are pending HRMP close channel requests, you can use this
        /// function process all of those requests immediately.
        /// 
        /// Total number of closing channels must be provided as witness data of weighing.
        /// </summary>
        force_process_hrmp_close = 5,
        
        /// <summary>
        /// >> hrmp_cancel_open_request
        /// This cancels a pending open channel request. It can be canceled by either of the sender
        /// or the recipient for that request. The origin must be either of those.
        /// 
        /// The cancellation happens immediately. It is not possible to cancel the request if it is
        /// already accepted.
        /// 
        /// Total number of open requests (i.e. `HrmpOpenChannelRequestsList`) must be provided as
        /// witness data.
        /// </summary>
        hrmp_cancel_open_request = 6,
        
        /// <summary>
        /// >> force_open_hrmp_channel
        /// Open a channel from a `sender` to a `recipient` `ParaId` using the Root origin. Although
        /// opened by Root, the `max_capacity` and `max_message_size` are still subject to the Relay
        /// Chain's configured limits.
        /// 
        /// Expected use is when one of the `ParaId`s involved in the channel is governed by the
        /// Relay Chain, e.g. a common good parachain.
        /// </summary>
        force_open_hrmp_channel = 7,
    }
    
    /// <summary>
    /// >> 465 - Variant[polkadot_runtime_parachains.hrmp.pallet.Call]
    /// Contains one variant per dispatchable that can be called by an extrinsic.
    /// </summary>
    public sealed class EnumCall : BaseEnumExt<Call, BaseTuple<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>, Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HrmpChannelId, BaseTuple<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32, BaseTuple<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HrmpChannelId, Substrate.NetApi.Model.Types.Primitive.U32>, BaseTuple<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>>
    {
    }
}
