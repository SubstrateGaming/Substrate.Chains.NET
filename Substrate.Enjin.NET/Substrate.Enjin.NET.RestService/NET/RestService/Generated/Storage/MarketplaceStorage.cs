//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Enjin.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IMarketplaceStorage interface definition.
    /// </summary>
    public interface IMarketplaceStorage : IStorage
    {
        
        /// <summary>
        /// >> Info
        ///  Stores information about the marketplace
        /// </summary>
        Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_marketplace.types.MarketPlaceInfo GetInfo();
        
        /// <summary>
        /// >> Listings
        ///  Listings by ID
        /// </summary>
        Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_marketplace.features.listing.Listing GetListings(string key);
    }
    
    /// <summary>
    /// MarketplaceStorage class definition.
    /// </summary>
    public sealed class MarketplaceStorage : IMarketplaceStorage
    {
        
        /// <summary>
        /// _infoTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_marketplace.types.MarketPlaceInfo> _infoTypedStorage;
        
        /// <summary>
        /// _listingsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_marketplace.features.listing.Listing> _listingsTypedStorage;
        
        /// <summary>
        /// MarketplaceStorage constructor.
        /// </summary>
        public MarketplaceStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.InfoTypedStorage = new TypedStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_marketplace.types.MarketPlaceInfo>("Marketplace.Info", storageDataProvider, storageChangeDelegates);
            this.ListingsTypedStorage = new TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_marketplace.features.listing.Listing>("Marketplace.Listings", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _infoTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_marketplace.types.MarketPlaceInfo> InfoTypedStorage
        {
            get
            {
                return _infoTypedStorage;
            }
            set
            {
                _infoTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _listingsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_marketplace.features.listing.Listing> ListingsTypedStorage
        {
            get
            {
                return _listingsTypedStorage;
            }
            set
            {
                _listingsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await InfoTypedStorage.InitializeAsync("Marketplace", "Info");
            await ListingsTypedStorage.InitializeAsync("Marketplace", "Listings");
        }
        
        /// <summary>
        /// Implements any storage change for Marketplace.Info
        /// </summary>
        [StorageChange("Marketplace", "Info")]
        public void OnUpdateInfo(string data)
        {
            InfoTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Info
        ///  Stores information about the marketplace
        /// </summary>
        public Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_marketplace.types.MarketPlaceInfo GetInfo()
        {
            return InfoTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Marketplace.Listings
        /// </summary>
        [StorageChange("Marketplace", "Listings")]
        public void OnUpdateListings(string key, string data)
        {
            ListingsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Listings
        ///  Listings by ID
        /// </summary>
        public Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_marketplace.features.listing.Listing GetListings(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ListingsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_marketplace.features.listing.Listing result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
