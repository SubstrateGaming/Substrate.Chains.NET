//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Enjin.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IHrmpStorage interface definition.
    /// </summary>
    public interface IHrmpStorage : IStorage
    {
        
        /// <summary>
        /// >> HrmpOpenChannelRequests
        ///  The set of pending HRMP open channel requests.
        /// 
        ///  The set is accompanied by a list for iteration.
        /// 
        ///  Invariant:
        ///  - There are no channels that exists in list but not in the set and vice versa.
        /// </summary>
        Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.hrmp.HrmpOpenChannelRequest GetHrmpOpenChannelRequests(string key);
        
        /// <summary>
        /// >> HrmpOpenChannelRequestsList
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HrmpChannelId> GetHrmpOpenChannelRequestsList();
        
        /// <summary>
        /// >> HrmpOpenChannelRequestCount
        ///  This mapping tracks how many open channel requests are initiated by a given sender para.
        ///  Invariant: `HrmpOpenChannelRequests` should contain the same number of items that has
        ///  `(X, _)` as the number of `HrmpOpenChannelRequestCount` for `X`.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetHrmpOpenChannelRequestCount(string key);
        
        /// <summary>
        /// >> HrmpAcceptedChannelRequestCount
        ///  This mapping tracks how many open channel requests were accepted by a given recipient para.
        ///  Invariant: `HrmpOpenChannelRequests` should contain the same number of items `(_, X)` with
        ///  `confirmed` set to true, as the number of `HrmpAcceptedChannelRequestCount` for `X`.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetHrmpAcceptedChannelRequestCount(string key);
        
        /// <summary>
        /// >> HrmpCloseChannelRequests
        ///  A set of pending HRMP close channel requests that are going to be closed during the session
        ///  change. Used for checking if a given channel is registered for closure.
        /// 
        ///  The set is accompanied by a list for iteration.
        /// 
        ///  Invariant:
        ///  - There are no channels that exists in list but not in the set and vice versa.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseTuple GetHrmpCloseChannelRequests(string key);
        
        /// <summary>
        /// >> HrmpCloseChannelRequestsList
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HrmpChannelId> GetHrmpCloseChannelRequestsList();
        
        /// <summary>
        /// >> HrmpWatermarks
        ///  The HRMP watermark associated with each para.
        ///  Invariant:
        ///  - each para `P` used here as a key should satisfy `Paras::is_valid_para(P)` within a session.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetHrmpWatermarks(string key);
        
        /// <summary>
        /// >> HrmpChannels
        ///  HRMP channel data associated with each para.
        ///  Invariant:
        ///  - each participant in the channel should satisfy `Paras::is_valid_para(P)` within a session.
        /// </summary>
        Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.hrmp.HrmpChannel GetHrmpChannels(string key);
        
        /// <summary>
        /// >> HrmpIngressChannelsIndex
        ///  Ingress/egress indexes allow to find all the senders and receivers given the opposite side.
        ///  I.e.
        /// 
        ///  (a) ingress index allows to find all the senders for a given recipient.
        ///  (b) egress index allows to find all the recipients for a given sender.
        /// 
        ///  Invariants:
        ///  - for each ingress index entry for `P` each item `I` in the index should present in
        ///    `HrmpChannels` as `(I, P)`.
        ///  - for each egress index entry for `P` each item `E` in the index should present in
        ///    `HrmpChannels` as `(P, E)`.
        ///  - there should be no other dangling channels in `HrmpChannels`.
        ///  - the vectors are sorted.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id> GetHrmpIngressChannelsIndex(string key);
        
        /// <summary>
        /// >> HrmpEgressChannelsIndex
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id> GetHrmpEgressChannelsIndex(string key);
        
        /// <summary>
        /// >> HrmpChannelContents
        ///  Storage for the messages for each channel.
        ///  Invariant: cannot be non-empty if the corresponding channel in `HrmpChannels` is `None`.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_core_primitives.InboundHrmpMessage> GetHrmpChannelContents(string key);
        
        /// <summary>
        /// >> HrmpChannelDigests
        ///  Maintains a mapping that can be used to answer the question: What paras sent a message at
        ///  the given block number for a given receiver. Invariants:
        ///  - The inner `Vec<ParaId>` is never empty.
        ///  - The inner `Vec<ParaId>` cannot store two same `ParaId`.
        ///  - The outer vector is sorted ascending by block number and cannot store two items with the
        ///    same block number.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>>> GetHrmpChannelDigests(string key);
    }
    
    /// <summary>
    /// HrmpStorage class definition.
    /// </summary>
    public sealed class HrmpStorage : IHrmpStorage
    {
        
        /// <summary>
        /// _hrmpOpenChannelRequestsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.hrmp.HrmpOpenChannelRequest> _hrmpOpenChannelRequestsTypedStorage;
        
        /// <summary>
        /// _hrmpOpenChannelRequestsListTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HrmpChannelId>> _hrmpOpenChannelRequestsListTypedStorage;
        
        /// <summary>
        /// _hrmpOpenChannelRequestCountTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> _hrmpOpenChannelRequestCountTypedStorage;
        
        /// <summary>
        /// _hrmpAcceptedChannelRequestCountTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> _hrmpAcceptedChannelRequestCountTypedStorage;
        
        /// <summary>
        /// _hrmpCloseChannelRequestsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple> _hrmpCloseChannelRequestsTypedStorage;
        
        /// <summary>
        /// _hrmpCloseChannelRequestsListTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HrmpChannelId>> _hrmpCloseChannelRequestsListTypedStorage;
        
        /// <summary>
        /// _hrmpWatermarksTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> _hrmpWatermarksTypedStorage;
        
        /// <summary>
        /// _hrmpChannelsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.hrmp.HrmpChannel> _hrmpChannelsTypedStorage;
        
        /// <summary>
        /// _hrmpIngressChannelsIndexTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>> _hrmpIngressChannelsIndexTypedStorage;
        
        /// <summary>
        /// _hrmpEgressChannelsIndexTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>> _hrmpEgressChannelsIndexTypedStorage;
        
        /// <summary>
        /// _hrmpChannelContentsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_core_primitives.InboundHrmpMessage>> _hrmpChannelContentsTypedStorage;
        
        /// <summary>
        /// _hrmpChannelDigestsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>>>> _hrmpChannelDigestsTypedStorage;
        
        /// <summary>
        /// HrmpStorage constructor.
        /// </summary>
        public HrmpStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.HrmpOpenChannelRequestsTypedStorage = new TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.hrmp.HrmpOpenChannelRequest>("Hrmp.HrmpOpenChannelRequests", storageDataProvider, storageChangeDelegates);
            this.HrmpOpenChannelRequestsListTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HrmpChannelId>>("Hrmp.HrmpOpenChannelRequestsList", storageDataProvider, storageChangeDelegates);
            this.HrmpOpenChannelRequestCountTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Hrmp.HrmpOpenChannelRequestCount", storageDataProvider, storageChangeDelegates);
            this.HrmpAcceptedChannelRequestCountTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Hrmp.HrmpAcceptedChannelRequestCount", storageDataProvider, storageChangeDelegates);
            this.HrmpCloseChannelRequestsTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple>("Hrmp.HrmpCloseChannelRequests", storageDataProvider, storageChangeDelegates);
            this.HrmpCloseChannelRequestsListTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HrmpChannelId>>("Hrmp.HrmpCloseChannelRequestsList", storageDataProvider, storageChangeDelegates);
            this.HrmpWatermarksTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Hrmp.HrmpWatermarks", storageDataProvider, storageChangeDelegates);
            this.HrmpChannelsTypedStorage = new TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.hrmp.HrmpChannel>("Hrmp.HrmpChannels", storageDataProvider, storageChangeDelegates);
            this.HrmpIngressChannelsIndexTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>>("Hrmp.HrmpIngressChannelsIndex", storageDataProvider, storageChangeDelegates);
            this.HrmpEgressChannelsIndexTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>>("Hrmp.HrmpEgressChannelsIndex", storageDataProvider, storageChangeDelegates);
            this.HrmpChannelContentsTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_core_primitives.InboundHrmpMessage>>("Hrmp.HrmpChannelContents", storageDataProvider, storageChangeDelegates);
            this.HrmpChannelDigestsTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>>>>("Hrmp.HrmpChannelDigests", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _hrmpOpenChannelRequestsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.hrmp.HrmpOpenChannelRequest> HrmpOpenChannelRequestsTypedStorage
        {
            get
            {
                return _hrmpOpenChannelRequestsTypedStorage;
            }
            set
            {
                _hrmpOpenChannelRequestsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _hrmpOpenChannelRequestsListTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HrmpChannelId>> HrmpOpenChannelRequestsListTypedStorage
        {
            get
            {
                return _hrmpOpenChannelRequestsListTypedStorage;
            }
            set
            {
                _hrmpOpenChannelRequestsListTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _hrmpOpenChannelRequestCountTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> HrmpOpenChannelRequestCountTypedStorage
        {
            get
            {
                return _hrmpOpenChannelRequestCountTypedStorage;
            }
            set
            {
                _hrmpOpenChannelRequestCountTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _hrmpAcceptedChannelRequestCountTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> HrmpAcceptedChannelRequestCountTypedStorage
        {
            get
            {
                return _hrmpAcceptedChannelRequestCountTypedStorage;
            }
            set
            {
                _hrmpAcceptedChannelRequestCountTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _hrmpCloseChannelRequestsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple> HrmpCloseChannelRequestsTypedStorage
        {
            get
            {
                return _hrmpCloseChannelRequestsTypedStorage;
            }
            set
            {
                _hrmpCloseChannelRequestsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _hrmpCloseChannelRequestsListTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HrmpChannelId>> HrmpCloseChannelRequestsListTypedStorage
        {
            get
            {
                return _hrmpCloseChannelRequestsListTypedStorage;
            }
            set
            {
                _hrmpCloseChannelRequestsListTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _hrmpWatermarksTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> HrmpWatermarksTypedStorage
        {
            get
            {
                return _hrmpWatermarksTypedStorage;
            }
            set
            {
                _hrmpWatermarksTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _hrmpChannelsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.hrmp.HrmpChannel> HrmpChannelsTypedStorage
        {
            get
            {
                return _hrmpChannelsTypedStorage;
            }
            set
            {
                _hrmpChannelsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _hrmpIngressChannelsIndexTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>> HrmpIngressChannelsIndexTypedStorage
        {
            get
            {
                return _hrmpIngressChannelsIndexTypedStorage;
            }
            set
            {
                _hrmpIngressChannelsIndexTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _hrmpEgressChannelsIndexTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>> HrmpEgressChannelsIndexTypedStorage
        {
            get
            {
                return _hrmpEgressChannelsIndexTypedStorage;
            }
            set
            {
                _hrmpEgressChannelsIndexTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _hrmpChannelContentsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_core_primitives.InboundHrmpMessage>> HrmpChannelContentsTypedStorage
        {
            get
            {
                return _hrmpChannelContentsTypedStorage;
            }
            set
            {
                _hrmpChannelContentsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _hrmpChannelDigestsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>>>> HrmpChannelDigestsTypedStorage
        {
            get
            {
                return _hrmpChannelDigestsTypedStorage;
            }
            set
            {
                _hrmpChannelDigestsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await HrmpOpenChannelRequestsTypedStorage.InitializeAsync("Hrmp", "HrmpOpenChannelRequests");
            await HrmpOpenChannelRequestsListTypedStorage.InitializeAsync("Hrmp", "HrmpOpenChannelRequestsList");
            await HrmpOpenChannelRequestCountTypedStorage.InitializeAsync("Hrmp", "HrmpOpenChannelRequestCount");
            await HrmpAcceptedChannelRequestCountTypedStorage.InitializeAsync("Hrmp", "HrmpAcceptedChannelRequestCount");
            await HrmpCloseChannelRequestsTypedStorage.InitializeAsync("Hrmp", "HrmpCloseChannelRequests");
            await HrmpCloseChannelRequestsListTypedStorage.InitializeAsync("Hrmp", "HrmpCloseChannelRequestsList");
            await HrmpWatermarksTypedStorage.InitializeAsync("Hrmp", "HrmpWatermarks");
            await HrmpChannelsTypedStorage.InitializeAsync("Hrmp", "HrmpChannels");
            await HrmpIngressChannelsIndexTypedStorage.InitializeAsync("Hrmp", "HrmpIngressChannelsIndex");
            await HrmpEgressChannelsIndexTypedStorage.InitializeAsync("Hrmp", "HrmpEgressChannelsIndex");
            await HrmpChannelContentsTypedStorage.InitializeAsync("Hrmp", "HrmpChannelContents");
            await HrmpChannelDigestsTypedStorage.InitializeAsync("Hrmp", "HrmpChannelDigests");
        }
        
        /// <summary>
        /// Implements any storage change for Hrmp.HrmpOpenChannelRequests
        /// </summary>
        [StorageChange("Hrmp", "HrmpOpenChannelRequests")]
        public void OnUpdateHrmpOpenChannelRequests(string key, string data)
        {
            HrmpOpenChannelRequestsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> HrmpOpenChannelRequests
        ///  The set of pending HRMP open channel requests.
        /// 
        ///  The set is accompanied by a list for iteration.
        /// 
        ///  Invariant:
        ///  - There are no channels that exists in list but not in the set and vice versa.
        /// </summary>
        public Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.hrmp.HrmpOpenChannelRequest GetHrmpOpenChannelRequests(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (HrmpOpenChannelRequestsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.hrmp.HrmpOpenChannelRequest result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Hrmp.HrmpOpenChannelRequestsList
        /// </summary>
        [StorageChange("Hrmp", "HrmpOpenChannelRequestsList")]
        public void OnUpdateHrmpOpenChannelRequestsList(string data)
        {
            HrmpOpenChannelRequestsListTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> HrmpOpenChannelRequestsList
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HrmpChannelId> GetHrmpOpenChannelRequestsList()
        {
            return HrmpOpenChannelRequestsListTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Hrmp.HrmpOpenChannelRequestCount
        /// </summary>
        [StorageChange("Hrmp", "HrmpOpenChannelRequestCount")]
        public void OnUpdateHrmpOpenChannelRequestCount(string key, string data)
        {
            HrmpOpenChannelRequestCountTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> HrmpOpenChannelRequestCount
        ///  This mapping tracks how many open channel requests are initiated by a given sender para.
        ///  Invariant: `HrmpOpenChannelRequests` should contain the same number of items that has
        ///  `(X, _)` as the number of `HrmpOpenChannelRequestCount` for `X`.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetHrmpOpenChannelRequestCount(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (HrmpOpenChannelRequestCountTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Hrmp.HrmpAcceptedChannelRequestCount
        /// </summary>
        [StorageChange("Hrmp", "HrmpAcceptedChannelRequestCount")]
        public void OnUpdateHrmpAcceptedChannelRequestCount(string key, string data)
        {
            HrmpAcceptedChannelRequestCountTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> HrmpAcceptedChannelRequestCount
        ///  This mapping tracks how many open channel requests were accepted by a given recipient para.
        ///  Invariant: `HrmpOpenChannelRequests` should contain the same number of items `(_, X)` with
        ///  `confirmed` set to true, as the number of `HrmpAcceptedChannelRequestCount` for `X`.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetHrmpAcceptedChannelRequestCount(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (HrmpAcceptedChannelRequestCountTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Hrmp.HrmpCloseChannelRequests
        /// </summary>
        [StorageChange("Hrmp", "HrmpCloseChannelRequests")]
        public void OnUpdateHrmpCloseChannelRequests(string key, string data)
        {
            HrmpCloseChannelRequestsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> HrmpCloseChannelRequests
        ///  A set of pending HRMP close channel requests that are going to be closed during the session
        ///  change. Used for checking if a given channel is registered for closure.
        /// 
        ///  The set is accompanied by a list for iteration.
        /// 
        ///  Invariant:
        ///  - There are no channels that exists in list but not in the set and vice versa.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseTuple GetHrmpCloseChannelRequests(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (HrmpCloseChannelRequestsTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseTuple result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Hrmp.HrmpCloseChannelRequestsList
        /// </summary>
        [StorageChange("Hrmp", "HrmpCloseChannelRequestsList")]
        public void OnUpdateHrmpCloseChannelRequestsList(string data)
        {
            HrmpCloseChannelRequestsListTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> HrmpCloseChannelRequestsList
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HrmpChannelId> GetHrmpCloseChannelRequestsList()
        {
            return HrmpCloseChannelRequestsListTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Hrmp.HrmpWatermarks
        /// </summary>
        [StorageChange("Hrmp", "HrmpWatermarks")]
        public void OnUpdateHrmpWatermarks(string key, string data)
        {
            HrmpWatermarksTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> HrmpWatermarks
        ///  The HRMP watermark associated with each para.
        ///  Invariant:
        ///  - each para `P` used here as a key should satisfy `Paras::is_valid_para(P)` within a session.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetHrmpWatermarks(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (HrmpWatermarksTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Hrmp.HrmpChannels
        /// </summary>
        [StorageChange("Hrmp", "HrmpChannels")]
        public void OnUpdateHrmpChannels(string key, string data)
        {
            HrmpChannelsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> HrmpChannels
        ///  HRMP channel data associated with each para.
        ///  Invariant:
        ///  - each participant in the channel should satisfy `Paras::is_valid_para(P)` within a session.
        /// </summary>
        public Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.hrmp.HrmpChannel GetHrmpChannels(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (HrmpChannelsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.hrmp.HrmpChannel result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Hrmp.HrmpIngressChannelsIndex
        /// </summary>
        [StorageChange("Hrmp", "HrmpIngressChannelsIndex")]
        public void OnUpdateHrmpIngressChannelsIndex(string key, string data)
        {
            HrmpIngressChannelsIndexTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> HrmpIngressChannelsIndex
        ///  Ingress/egress indexes allow to find all the senders and receivers given the opposite side.
        ///  I.e.
        /// 
        ///  (a) ingress index allows to find all the senders for a given recipient.
        ///  (b) egress index allows to find all the recipients for a given sender.
        /// 
        ///  Invariants:
        ///  - for each ingress index entry for `P` each item `I` in the index should present in
        ///    `HrmpChannels` as `(I, P)`.
        ///  - for each egress index entry for `P` each item `E` in the index should present in
        ///    `HrmpChannels` as `(P, E)`.
        ///  - there should be no other dangling channels in `HrmpChannels`.
        ///  - the vectors are sorted.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id> GetHrmpIngressChannelsIndex(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (HrmpIngressChannelsIndexTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Hrmp.HrmpEgressChannelsIndex
        /// </summary>
        [StorageChange("Hrmp", "HrmpEgressChannelsIndex")]
        public void OnUpdateHrmpEgressChannelsIndex(string key, string data)
        {
            HrmpEgressChannelsIndexTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> HrmpEgressChannelsIndex
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id> GetHrmpEgressChannelsIndex(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (HrmpEgressChannelsIndexTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Hrmp.HrmpChannelContents
        /// </summary>
        [StorageChange("Hrmp", "HrmpChannelContents")]
        public void OnUpdateHrmpChannelContents(string key, string data)
        {
            HrmpChannelContentsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> HrmpChannelContents
        ///  Storage for the messages for each channel.
        ///  Invariant: cannot be non-empty if the corresponding channel in `HrmpChannels` is `None`.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_core_primitives.InboundHrmpMessage> GetHrmpChannelContents(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (HrmpChannelContentsTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_core_primitives.InboundHrmpMessage> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Hrmp.HrmpChannelDigests
        /// </summary>
        [StorageChange("Hrmp", "HrmpChannelDigests")]
        public void OnUpdateHrmpChannelDigests(string key, string data)
        {
            HrmpChannelDigestsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> HrmpChannelDigests
        ///  Maintains a mapping that can be used to answer the question: What paras sent a message at
        ///  the given block number for a given receiver. Invariants:
        ///  - The inner `Vec<ParaId>` is never empty.
        ///  - The inner `Vec<ParaId>` cannot store two same `ParaId`.
        ///  - The outer vector is sorted ascending by block number and cannot store two items with the
        ///    same block number.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>>> GetHrmpChannelDigests(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (HrmpChannelDigestsTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Enjin.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>>> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
