//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Enjin.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IFuelTanksStorage interface definition.
    /// </summary>
    public interface IFuelTanksStorage : IStorage
    {
        
        /// <summary>
        /// >> Tanks
        ///  Mapping of Fuel Tanks accounts to their data
        /// </summary>
        Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_fuel_tanks.types.FuelTank GetTanks(string key);
        
        /// <summary>
        /// >> Accounts
        ///  Mapping of Fuel Tanks and their user Accounts to account data
        /// </summary>
        Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_fuel_tanks.types.UserAccount GetAccounts(string key);
    }
    
    /// <summary>
    /// FuelTanksStorage class definition.
    /// </summary>
    public sealed class FuelTanksStorage : IFuelTanksStorage
    {
        
        /// <summary>
        /// _tanksTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_fuel_tanks.types.FuelTank> _tanksTypedStorage;
        
        /// <summary>
        /// _accountsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_fuel_tanks.types.UserAccount> _accountsTypedStorage;
        
        /// <summary>
        /// FuelTanksStorage constructor.
        /// </summary>
        public FuelTanksStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.TanksTypedStorage = new TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_fuel_tanks.types.FuelTank>("FuelTanks.Tanks", storageDataProvider, storageChangeDelegates);
            this.AccountsTypedStorage = new TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_fuel_tanks.types.UserAccount>("FuelTanks.Accounts", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _tanksTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_fuel_tanks.types.FuelTank> TanksTypedStorage
        {
            get
            {
                return _tanksTypedStorage;
            }
            set
            {
                _tanksTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _accountsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_fuel_tanks.types.UserAccount> AccountsTypedStorage
        {
            get
            {
                return _accountsTypedStorage;
            }
            set
            {
                _accountsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await TanksTypedStorage.InitializeAsync("FuelTanks", "Tanks");
            await AccountsTypedStorage.InitializeAsync("FuelTanks", "Accounts");
        }
        
        /// <summary>
        /// Implements any storage change for FuelTanks.Tanks
        /// </summary>
        [StorageChange("FuelTanks", "Tanks")]
        public void OnUpdateTanks(string key, string data)
        {
            TanksTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Tanks
        ///  Mapping of Fuel Tanks accounts to their data
        /// </summary>
        public Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_fuel_tanks.types.FuelTank GetTanks(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (TanksTypedStorage.Dictionary.TryGetValue(key, out Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_fuel_tanks.types.FuelTank result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for FuelTanks.Accounts
        /// </summary>
        [StorageChange("FuelTanks", "Accounts")]
        public void OnUpdateAccounts(string key, string data)
        {
            AccountsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Accounts
        ///  Mapping of Fuel Tanks and their user Accounts to account data
        /// </summary>
        public Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_fuel_tanks.types.UserAccount GetAccounts(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AccountsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_fuel_tanks.types.UserAccount result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
