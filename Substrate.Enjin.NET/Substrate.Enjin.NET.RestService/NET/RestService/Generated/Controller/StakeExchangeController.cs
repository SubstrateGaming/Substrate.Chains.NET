//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.Enjin.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Enjin.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// StakeExchangeController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class StakeExchangeController : ControllerBase
    {
        
        private IStakeExchangeStorage _stakeExchangeStorage;
        
        /// <summary>
        /// StakeExchangeController constructor.
        /// </summary>
        public StakeExchangeController(IStakeExchangeStorage stakeExchangeStorage)
        {
            _stakeExchangeStorage = stakeExchangeStorage;
        }
        
        /// <summary>
        /// >> LiquidityConfigs
        ///  Mapping of LP accounts to their configuration
        /// </summary>
        [HttpGet("LiquidityConfigs")]
        [ProducesResponseType(typeof(Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_stake_exchange.types.LiquidityAccountConfig), 200)]
        [StorageKeyBuilder(typeof(Substrate.Enjin.NET.NetApiExt.Generated.Storage.StakeExchangeStorage), "LiquidityConfigsParams", typeof(Substrate.Enjin.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32))]
        public IActionResult GetLiquidityConfigs(string key)
        {
            return this.Ok(_stakeExchangeStorage.GetLiquidityConfigs(key));
        }
        
        /// <summary>
        /// >> Offers
        ///  Mapping of LPAccountId to their active offer
        /// </summary>
        [HttpGet("Offers")]
        [ProducesResponseType(typeof(Substrate.Enjin.NET.NetApiExt.Generated.Model.pallet_stake_exchange.types.Offer), 200)]
        [StorageKeyBuilder(typeof(Substrate.Enjin.NET.NetApiExt.Generated.Storage.StakeExchangeStorage), "OffersParams", typeof(Substrate.NetApi.Model.Types.Primitive.U128))]
        public IActionResult GetOffers(string key)
        {
            return this.Ok(_stakeExchangeStorage.GetOffers(key));
        }
        
        /// <summary>
        /// >> NextOfferId
        ///  Value to use for Next offer Id
        /// </summary>
        [HttpGet("NextOfferId")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.Enjin.NET.NetApiExt.Generated.Storage.StakeExchangeStorage), "NextOfferIdParams")]
        public IActionResult GetNextOfferId()
        {
            return this.Ok(_stakeExchangeStorage.GetNextOfferId());
        }
    }
}
