//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.Enjin.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Enjin.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// BeefyController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class BeefyController : ControllerBase
    {
        
        private IBeefyStorage _beefyStorage;
        
        /// <summary>
        /// BeefyController constructor.
        /// </summary>
        public BeefyController(IBeefyStorage beefyStorage)
        {
            _beefyStorage = beefyStorage;
        }
        
        /// <summary>
        /// >> Authorities
        ///  The current authorities set
        /// </summary>
        [HttpGet("Authorities")]
        [ProducesResponseType(typeof(Substrate.Enjin.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT48), 200)]
        [StorageKeyBuilder(typeof(Substrate.Enjin.NET.NetApiExt.Generated.Storage.BeefyStorage), "AuthoritiesParams")]
        public IActionResult GetAuthorities()
        {
            return this.Ok(_beefyStorage.GetAuthorities());
        }
        
        /// <summary>
        /// >> ValidatorSetId
        ///  The current validator set id
        /// </summary>
        [HttpGet("ValidatorSetId")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U64), 200)]
        [StorageKeyBuilder(typeof(Substrate.Enjin.NET.NetApiExt.Generated.Storage.BeefyStorage), "ValidatorSetIdParams")]
        public IActionResult GetValidatorSetId()
        {
            return this.Ok(_beefyStorage.GetValidatorSetId());
        }
        
        /// <summary>
        /// >> NextAuthorities
        ///  Authorities set scheduled to be used with the next session
        /// </summary>
        [HttpGet("NextAuthorities")]
        [ProducesResponseType(typeof(Substrate.Enjin.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT48), 200)]
        [StorageKeyBuilder(typeof(Substrate.Enjin.NET.NetApiExt.Generated.Storage.BeefyStorage), "NextAuthoritiesParams")]
        public IActionResult GetNextAuthorities()
        {
            return this.Ok(_beefyStorage.GetNextAuthorities());
        }
        
        /// <summary>
        /// >> SetIdSession
        ///  A mapping from BEEFY set ID to the index of the *most recent* session for which its
        ///  members were responsible.
        /// 
        ///  This is only used for validating equivocation proofs. An equivocation proof must
        ///  contains a key-ownership proof for a given session, therefore we need a way to tie
        ///  together sessions and BEEFY set ids, i.e. we need to validate that a validator
        ///  was the owner of a given key on a given session, and what the active set ID was
        ///  during that session.
        /// 
        ///  TWOX-NOTE: `ValidatorSetId` is not under user control.
        /// </summary>
        [HttpGet("SetIdSession")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.Enjin.NET.NetApiExt.Generated.Storage.BeefyStorage), "SetIdSessionParams", typeof(Substrate.NetApi.Model.Types.Primitive.U64))]
        public IActionResult GetSetIdSession(string key)
        {
            return this.Ok(_beefyStorage.GetSetIdSession(key));
        }
        
        /// <summary>
        /// >> GenesisBlock
        ///  Block number where BEEFY consensus is enabled/started.
        ///  By changing this (through governance or sudo), BEEFY consensus is effectively
        ///  restarted from the new block number.
        /// </summary>
        [HttpGet("GenesisBlock")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>), 200)]
        [StorageKeyBuilder(typeof(Substrate.Enjin.NET.NetApiExt.Generated.Storage.BeefyStorage), "GenesisBlockParams")]
        public IActionResult GetGenesisBlock()
        {
            return this.Ok(_beefyStorage.GetGenesisBlock());
        }
    }
}
