//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Kusama.NET.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Kusama.NET.NetApiExt.Generated.Model.sp_core.bounded.bounded_vec;
   using Substrate.Kusama.NET.NetApiExt.Generated.Model.pallet_nis.pallet;
   using Substrate.Kusama.NET.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class NisControllerMockupClient : MockupBaseClient, INisControllerMockupClient
   {
      private HttpClient _httpClient;
      public NisControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetQueueTotals(BoundedVecT34 value)
      {
         return await SendMockupRequestAsync(_httpClient, "Nis/QueueTotals", value.Encode(), Substrate.Kusama.NET.NetApiExt.Generated.Storage.NisStorage.QueueTotalsParams());
      }
      public async Task<bool> SetQueues(BoundedVecT35 value, Substrate.NetApi.Model.Types.Primitive.U32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Nis/Queues", value.Encode(), Substrate.Kusama.NET.NetApiExt.Generated.Storage.NisStorage.QueuesParams(key));
      }
      public async Task<bool> SetSummary(SummaryRecord value)
      {
         return await SendMockupRequestAsync(_httpClient, "Nis/Summary", value.Encode(), Substrate.Kusama.NET.NetApiExt.Generated.Storage.NisStorage.SummaryParams());
      }
      public async Task<bool> SetReceipts(ReceiptRecord value, Substrate.NetApi.Model.Types.Primitive.U32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Nis/Receipts", value.Encode(), Substrate.Kusama.NET.NetApiExt.Generated.Storage.NisStorage.ReceiptsParams(key));
      }
   }
}
