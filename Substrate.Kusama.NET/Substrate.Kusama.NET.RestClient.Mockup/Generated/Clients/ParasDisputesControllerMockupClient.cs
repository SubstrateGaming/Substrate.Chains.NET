//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Kusama.NET.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_primitives.v2;
   using Substrate.Kusama.NET.NetApiExt.Generated.Types.Base;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.Kusama.NET.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class ParasDisputesControllerMockupClient : MockupBaseClient, IParasDisputesControllerMockupClient
   {
      private HttpClient _httpClient;
      public ParasDisputesControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetLastPrunedSession(U32 value)
      {
         return await SendMockupRequestAsync(_httpClient, "ParasDisputes/LastPrunedSession", value.Encode(), Substrate.Kusama.NET.NetApiExt.Generated.Storage.ParasDisputesStorage.LastPrunedSessionParams());
      }
      public async Task<bool> SetDisputes(DisputeState value, BaseTuple<U32, Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_core_primitives.CandidateHash> key)
      {
         return await SendMockupRequestAsync(_httpClient, "ParasDisputes/Disputes", value.Encode(), Substrate.Kusama.NET.NetApiExt.Generated.Storage.ParasDisputesStorage.DisputesParams(key));
      }
      public async Task<bool> SetBackersOnDisputes(BTreeSet value, BaseTuple<U32, Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_core_primitives.CandidateHash> key)
      {
         return await SendMockupRequestAsync(_httpClient, "ParasDisputes/BackersOnDisputes", value.Encode(), Substrate.Kusama.NET.NetApiExt.Generated.Storage.ParasDisputesStorage.BackersOnDisputesParams(key));
      }
      public async Task<bool> SetIncluded(U32 value, BaseTuple<U32, Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_core_primitives.CandidateHash> key)
      {
         return await SendMockupRequestAsync(_httpClient, "ParasDisputes/Included", value.Encode(), Substrate.Kusama.NET.NetApiExt.Generated.Storage.ParasDisputesStorage.IncludedParams(key));
      }
      public async Task<bool> SetFrozen(BaseOpt<U32> value)
      {
         return await SendMockupRequestAsync(_httpClient, "ParasDisputes/Frozen", value.Encode(), Substrate.Kusama.NET.NetApiExt.Generated.Storage.ParasDisputesStorage.FrozenParams());
      }
   }
}
