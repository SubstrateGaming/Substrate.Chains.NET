//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Kusama.NET.NetApiExt.Generated.Storage
{
    
    
    /// <summary>
    /// >> OnDemandAssignmentProviderStorage
    /// </summary>
    public sealed class OnDemandAssignmentProviderStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> OnDemandAssignmentProviderStorage Constructor
        /// </summary>
        public OnDemandAssignmentProviderStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("OnDemandAssignmentProvider", "ParaIdAffinity"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_parachain_primitives.primitives.Id), typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.assigner_on_demand.types.CoreAffinityCount)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("OnDemandAssignmentProvider", "QueueStatus"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.assigner_on_demand.types.QueueStatusType)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("OnDemandAssignmentProvider", "FreeEntries"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.Kusama.NET.NetApiExt.Generated.Types.Base.BinaryHeapT2)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("OnDemandAssignmentProvider", "AffinityEntries"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_primitives.v7.CoreIndex), typeof(Substrate.Kusama.NET.NetApiExt.Generated.Types.Base.BinaryHeapT2)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("OnDemandAssignmentProvider", "Revenue"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT44)));
        }
        
        /// <summary>
        /// >> ParaIdAffinityParams
        ///  Maps a `ParaId` to `CoreIndex` and keeps track of how many assignments the scheduler has in
        ///  it's lookahead. Keeping track of this affinity prevents parallel execution of the same
        ///  `ParaId` on two or more `CoreIndex`es.
        /// </summary>
        public static string ParaIdAffinityParams(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_parachain_primitives.primitives.Id key)
        {
            return RequestGenerator.GetStorage("OnDemandAssignmentProvider", "ParaIdAffinity", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> ParaIdAffinityDefault
        /// Default value as hex string
        /// </summary>
        public static string ParaIdAffinityDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> ParaIdAffinity
        ///  Maps a `ParaId` to `CoreIndex` and keeps track of how many assignments the scheduler has in
        ///  it's lookahead. Keeping track of this affinity prevents parallel execution of the same
        ///  `ParaId` on two or more `CoreIndex`es.
        /// </summary>
        public async Task<Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.assigner_on_demand.types.CoreAffinityCount> ParaIdAffinity(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_parachain_primitives.primitives.Id key, string blockhash, CancellationToken token)
        {
            string parameters = OnDemandAssignmentProviderStorage.ParaIdAffinityParams(key);
            var result = await _client.GetStorageAsync<Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.assigner_on_demand.types.CoreAffinityCount>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> QueueStatusParams
        ///  Overall status of queue (both free + affinity entries)
        /// </summary>
        public static string QueueStatusParams()
        {
            return RequestGenerator.GetStorage("OnDemandAssignmentProvider", "QueueStatus", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> QueueStatusDefault
        /// Default value as hex string
        /// </summary>
        public static string QueueStatusDefault()
        {
            return "0x000064A7B3B6E00D0000000000000000000000000000000000";
        }
        
        /// <summary>
        /// >> QueueStatus
        ///  Overall status of queue (both free + affinity entries)
        /// </summary>
        public async Task<Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.assigner_on_demand.types.QueueStatusType> QueueStatus(string blockhash, CancellationToken token)
        {
            string parameters = OnDemandAssignmentProviderStorage.QueueStatusParams();
            var result = await _client.GetStorageAsync<Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.assigner_on_demand.types.QueueStatusType>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> FreeEntriesParams
        ///  Priority queue for all orders which don't yet (or not any more) have any core affinity.
        /// </summary>
        public static string FreeEntriesParams()
        {
            return RequestGenerator.GetStorage("OnDemandAssignmentProvider", "FreeEntries", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> FreeEntriesDefault
        /// Default value as hex string
        /// </summary>
        public static string FreeEntriesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> FreeEntries
        ///  Priority queue for all orders which don't yet (or not any more) have any core affinity.
        /// </summary>
        public async Task<Substrate.Kusama.NET.NetApiExt.Generated.Types.Base.BinaryHeapT2> FreeEntries(string blockhash, CancellationToken token)
        {
            string parameters = OnDemandAssignmentProviderStorage.FreeEntriesParams();
            var result = await _client.GetStorageAsync<Substrate.Kusama.NET.NetApiExt.Generated.Types.Base.BinaryHeapT2>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> AffinityEntriesParams
        ///  Queue entries that are currently bound to a particular core due to core affinity.
        /// </summary>
        public static string AffinityEntriesParams(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_primitives.v7.CoreIndex key)
        {
            return RequestGenerator.GetStorage("OnDemandAssignmentProvider", "AffinityEntries", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> AffinityEntriesDefault
        /// Default value as hex string
        /// </summary>
        public static string AffinityEntriesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> AffinityEntries
        ///  Queue entries that are currently bound to a particular core due to core affinity.
        /// </summary>
        public async Task<Substrate.Kusama.NET.NetApiExt.Generated.Types.Base.BinaryHeapT2> AffinityEntries(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_primitives.v7.CoreIndex key, string blockhash, CancellationToken token)
        {
            string parameters = OnDemandAssignmentProviderStorage.AffinityEntriesParams(key);
            var result = await _client.GetStorageAsync<Substrate.Kusama.NET.NetApiExt.Generated.Types.Base.BinaryHeapT2>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> RevenueParams
        ///  Keeps track of accumulated revenue from on demand order sales.
        /// </summary>
        public static string RevenueParams()
        {
            return RequestGenerator.GetStorage("OnDemandAssignmentProvider", "Revenue", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> RevenueDefault
        /// Default value as hex string
        /// </summary>
        public static string RevenueDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Revenue
        ///  Keeps track of accumulated revenue from on demand order sales.
        /// </summary>
        public async Task<Substrate.Kusama.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT44> Revenue(string blockhash, CancellationToken token)
        {
            string parameters = OnDemandAssignmentProviderStorage.RevenueParams();
            var result = await _client.GetStorageAsync<Substrate.Kusama.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT44>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> OnDemandAssignmentProviderCalls
    /// </summary>
    public sealed class OnDemandAssignmentProviderCalls
    {
        
        /// <summary>
        /// >> place_order_allow_death
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method PlaceOrderAllowDeath(Substrate.NetApi.Model.Types.Primitive.U128 max_amount, Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_parachain_primitives.primitives.Id para_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(max_amount.Encode());
            byteArray.AddRange(para_id.Encode());
            return new Method(64, "OnDemandAssignmentProvider", 0, "place_order_allow_death", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> place_order_keep_alive
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method PlaceOrderKeepAlive(Substrate.NetApi.Model.Types.Primitive.U128 max_amount, Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_parachain_primitives.primitives.Id para_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(max_amount.Encode());
            byteArray.AddRange(para_id.Encode());
            return new Method(64, "OnDemandAssignmentProvider", 1, "place_order_keep_alive", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> OnDemandAssignmentProviderConstants
    /// </summary>
    public sealed class OnDemandAssignmentProviderConstants
    {
        
        /// <summary>
        /// >> TrafficDefaultValue
        ///  The default value for the spot traffic multiplier.
        /// </summary>
        public Substrate.Kusama.NET.NetApiExt.Generated.Model.sp_arithmetic.fixed_point.FixedU128 TrafficDefaultValue()
        {
            var result = new Substrate.Kusama.NET.NetApiExt.Generated.Model.sp_arithmetic.fixed_point.FixedU128();
            result.Create("0x000064A7B3B6E00D0000000000000000");
            return result;
        }
        
        /// <summary>
        /// >> MaxHistoricalRevenue
        ///  The maximum number of blocks some historical revenue
        ///  information stored for.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxHistoricalRevenue()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0xA0000000");
            return result;
        }
        
        /// <summary>
        /// >> PalletId
        ///  Identifier for the internal revenue balance.
        /// </summary>
        public Substrate.Kusama.NET.NetApiExt.Generated.Model.frame_support.PalletId PalletId()
        {
            var result = new Substrate.Kusama.NET.NetApiExt.Generated.Model.frame_support.PalletId();
            result.Create("0x70792F6F6E646D64");
            return result;
        }
    }
    
    /// <summary>
    /// >> OnDemandAssignmentProviderErrors
    /// </summary>
    public enum OnDemandAssignmentProviderErrors
    {
        
        /// <summary>
        /// >> QueueFull
        /// The order queue is full, `place_order` will not continue.
        /// </summary>
        QueueFull,
        
        /// <summary>
        /// >> SpotPriceHigherThanMaxAmount
        /// The current spot price is higher than the max amount specified in the `place_order`
        /// call, making it invalid.
        /// </summary>
        SpotPriceHigherThanMaxAmount,
    }
}
