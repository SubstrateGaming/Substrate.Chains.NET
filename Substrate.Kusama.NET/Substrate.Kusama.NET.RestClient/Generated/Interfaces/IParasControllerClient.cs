//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Kusama.NET.RestClient.Generated.Interfaces
{
   using System;
   using System.Threading.Tasks;
   using Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_parachain_primitives.primitives;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_primitives.v7;
   
   public interface IParasControllerClient
   {
      Task<PvfCheckActiveVoteState> GetPvfActiveVoteMap(ValidationCodeHash key);
      Task<bool> SubscribePvfActiveVoteMap(ValidationCodeHash key);
      Task<BaseVec<ValidationCodeHash>> GetPvfActiveVoteList();
      Task<bool> SubscribePvfActiveVoteList();
      Task<BaseVec<Id>> GetParachains();
      Task<bool> SubscribeParachains();
      Task<EnumParaLifecycle> GetParaLifecycles(Id key);
      Task<bool> SubscribeParaLifecycles(Id key);
      Task<HeadData> GetHeads(Id key);
      Task<bool> SubscribeHeads(Id key);
      Task<U32> GetMostRecentContext(Id key);
      Task<bool> SubscribeMostRecentContext(Id key);
      Task<ValidationCodeHash> GetCurrentCodeHash(Id key);
      Task<bool> SubscribeCurrentCodeHash(Id key);
      Task<ValidationCodeHash> GetPastCodeHash(BaseTuple<Id, U32> key);
      Task<bool> SubscribePastCodeHash(BaseTuple<Id, U32> key);
      Task<ParaPastCodeMeta> GetPastCodeMeta(Id key);
      Task<bool> SubscribePastCodeMeta(Id key);
      Task<BaseVec<BaseTuple<Id, U32>>> GetPastCodePruning();
      Task<bool> SubscribePastCodePruning();
      Task<U32> GetFutureCodeUpgrades(Id key);
      Task<bool> SubscribeFutureCodeUpgrades(Id key);
      Task<BaseVec<BaseTuple<Id, U32>>> GetFutureCodeUpgradesAt();
      Task<bool> SubscribeFutureCodeUpgradesAt();
      Task<ValidationCodeHash> GetFutureCodeHash(Id key);
      Task<bool> SubscribeFutureCodeHash(Id key);
      Task<EnumUpgradeGoAhead> GetUpgradeGoAheadSignal(Id key);
      Task<bool> SubscribeUpgradeGoAheadSignal(Id key);
      Task<EnumUpgradeRestriction> GetUpgradeRestrictionSignal(Id key);
      Task<bool> SubscribeUpgradeRestrictionSignal(Id key);
      Task<BaseVec<BaseTuple<Id, U32>>> GetUpgradeCooldowns();
      Task<bool> SubscribeUpgradeCooldowns();
      Task<BaseVec<BaseTuple<Id, U32>>> GetUpcomingUpgrades();
      Task<bool> SubscribeUpcomingUpgrades();
      Task<BaseVec<Id>> GetActionsQueue(U32 key);
      Task<bool> SubscribeActionsQueue(U32 key);
      Task<ParaGenesisArgs> GetUpcomingParasGenesis(Id key);
      Task<bool> SubscribeUpcomingParasGenesis(Id key);
      Task<U32> GetCodeByHashRefs(ValidationCodeHash key);
      Task<bool> SubscribeCodeByHashRefs(ValidationCodeHash key);
      Task<ValidationCode> GetCodeByHash(ValidationCodeHash key);
      Task<bool> SubscribeCodeByHash(ValidationCodeHash key);
   }
}
