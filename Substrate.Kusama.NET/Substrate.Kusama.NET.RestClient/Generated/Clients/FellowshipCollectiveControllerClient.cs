//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Kusama.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.Kusama.NET.NetApiExt.Generated.Model.pallet_ranked_collective;
   using Substrate.Kusama.NET.NetApiExt.Generated.Model.sp_core.crypto;
   using Substrate.Kusama.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec;
   using Substrate.Kusama.NET.RestClient.Generated.Interfaces;
   
   public sealed class FellowshipCollectiveControllerClient : BaseClient, IFellowshipCollectiveControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public FellowshipCollectiveControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<U32> GetMemberCount(U16 key)
      {
         return await SendRequestAsync<U32>(_httpClient, "fellowshipcollective/membercount", Substrate.Kusama.NET.NetApiExt.Generated.Storage.FellowshipCollectiveStorage.MemberCountParams(key));
      }
      public async Task<bool> SubscribeMemberCount(U16 key)
      {
         return await _subscriptionClient.SubscribeAsync("FellowshipCollective.MemberCount", Substrate.Kusama.NET.NetApiExt.Generated.Storage.FellowshipCollectiveStorage.MemberCountParams(key));
      }
      public async Task<MemberRecord> GetMembers(AccountId32 key)
      {
         return await SendRequestAsync<MemberRecord>(_httpClient, "fellowshipcollective/members", Substrate.Kusama.NET.NetApiExt.Generated.Storage.FellowshipCollectiveStorage.MembersParams(key));
      }
      public async Task<bool> SubscribeMembers(AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("FellowshipCollective.Members", Substrate.Kusama.NET.NetApiExt.Generated.Storage.FellowshipCollectiveStorage.MembersParams(key));
      }
      public async Task<U32> GetIdToIndex(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, AccountId32> key)
      {
         return await SendRequestAsync<U32>(_httpClient, "fellowshipcollective/idtoindex", Substrate.Kusama.NET.NetApiExt.Generated.Storage.FellowshipCollectiveStorage.IdToIndexParams(key));
      }
      public async Task<bool> SubscribeIdToIndex(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, AccountId32> key)
      {
         return await _subscriptionClient.SubscribeAsync("FellowshipCollective.IdToIndex", Substrate.Kusama.NET.NetApiExt.Generated.Storage.FellowshipCollectiveStorage.IdToIndexParams(key));
      }
      public async Task<AccountId32> GetIndexToId(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await SendRequestAsync<AccountId32>(_httpClient, "fellowshipcollective/indextoid", Substrate.Kusama.NET.NetApiExt.Generated.Storage.FellowshipCollectiveStorage.IndexToIdParams(key));
      }
      public async Task<bool> SubscribeIndexToId(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("FellowshipCollective.IndexToId", Substrate.Kusama.NET.NetApiExt.Generated.Storage.FellowshipCollectiveStorage.IndexToIdParams(key));
      }
      public async Task<EnumVoteRecord> GetVoting(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, AccountId32> key)
      {
         return await SendRequestAsync<EnumVoteRecord>(_httpClient, "fellowshipcollective/voting", Substrate.Kusama.NET.NetApiExt.Generated.Storage.FellowshipCollectiveStorage.VotingParams(key));
      }
      public async Task<bool> SubscribeVoting(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, AccountId32> key)
      {
         return await _subscriptionClient.SubscribeAsync("FellowshipCollective.Voting", Substrate.Kusama.NET.NetApiExt.Generated.Storage.FellowshipCollectiveStorage.VotingParams(key));
      }
      public async Task<BoundedVecT22> GetVotingCleanup(U32 key)
      {
         return await SendRequestAsync<BoundedVecT22>(_httpClient, "fellowshipcollective/votingcleanup", Substrate.Kusama.NET.NetApiExt.Generated.Storage.FellowshipCollectiveStorage.VotingCleanupParams(key));
      }
      public async Task<bool> SubscribeVotingCleanup(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("FellowshipCollective.VotingCleanup", Substrate.Kusama.NET.NetApiExt.Generated.Storage.FellowshipCollectiveStorage.VotingCleanupParams(key));
      }
   }
}
