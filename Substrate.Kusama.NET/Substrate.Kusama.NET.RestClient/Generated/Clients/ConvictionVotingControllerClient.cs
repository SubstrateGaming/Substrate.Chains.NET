//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Kusama.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Kusama.NET.NetApiExt.Generated.Model.pallet_conviction_voting.vote;
   using Substrate.Kusama.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec;
   using Substrate.Kusama.NET.RestClient.Generated.Interfaces;
   
   public sealed class ConvictionVotingControllerClient : BaseClient, IConvictionVotingControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public ConvictionVotingControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<EnumVoting> GetVotingFor(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Kusama.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U16> key)
      {
         return await SendRequestAsync<EnumVoting>(_httpClient, "convictionvoting/votingfor", Substrate.Kusama.NET.NetApiExt.Generated.Storage.ConvictionVotingStorage.VotingForParams(key));
      }
      public async Task<bool> SubscribeVotingFor(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Kusama.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U16> key)
      {
         return await _subscriptionClient.SubscribeAsync("ConvictionVoting.VotingFor", Substrate.Kusama.NET.NetApiExt.Generated.Storage.ConvictionVotingStorage.VotingForParams(key));
      }
      public async Task<BoundedVecT18> GetClassLocksFor(Substrate.Kusama.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await SendRequestAsync<BoundedVecT18>(_httpClient, "convictionvoting/classlocksfor", Substrate.Kusama.NET.NetApiExt.Generated.Storage.ConvictionVotingStorage.ClassLocksForParams(key));
      }
      public async Task<bool> SubscribeClassLocksFor(Substrate.Kusama.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("ConvictionVoting.ClassLocksFor", Substrate.Kusama.NET.NetApiExt.Generated.Storage.ConvictionVotingStorage.ClassLocksForParams(key));
      }
   }
}
