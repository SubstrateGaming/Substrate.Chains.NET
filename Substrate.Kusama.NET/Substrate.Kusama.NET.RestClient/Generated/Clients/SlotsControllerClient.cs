//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Kusama.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.Kusama.NET.RestClient.Generated.Interfaces;
   
   public sealed class SlotsControllerClient : BaseClient, ISlotsControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public SlotsControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<BaseVec<BaseOpt<BaseTuple<Substrate.Kusama.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128>>>> GetLeases(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_parachain_primitives.primitives.Id key)
      {
         return await SendRequestAsync<BaseVec<BaseOpt<BaseTuple<Substrate.Kusama.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U128>>>>(_httpClient, "slots/leases", Substrate.Kusama.NET.NetApiExt.Generated.Storage.SlotsStorage.LeasesParams(key));
      }
      public async Task<bool> SubscribeLeases(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_parachain_primitives.primitives.Id key)
      {
         return await _subscriptionClient.SubscribeAsync("Slots.Leases", Substrate.Kusama.NET.NetApiExt.Generated.Storage.SlotsStorage.LeasesParams(key));
      }
   }
}
