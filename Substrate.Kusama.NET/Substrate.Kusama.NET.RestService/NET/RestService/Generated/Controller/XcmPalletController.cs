//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.Kusama.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Kusama.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// XcmPalletController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class XcmPalletController : ControllerBase
    {
        
        private IXcmPalletStorage _xcmPalletStorage;
        
        /// <summary>
        /// XcmPalletController constructor.
        /// </summary>
        public XcmPalletController(IXcmPalletStorage xcmPalletStorage)
        {
            _xcmPalletStorage = xcmPalletStorage;
        }
        
        /// <summary>
        /// >> QueryCounter
        ///  The latest available query index.
        /// </summary>
        [HttpGet("QueryCounter")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U64), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.XcmPalletStorage), "QueryCounterParams")]
        public IActionResult GetQueryCounter()
        {
            return this.Ok(_xcmPalletStorage.GetQueryCounter());
        }
        
        /// <summary>
        /// >> Queries
        ///  The ongoing queries.
        /// </summary>
        [HttpGet("Queries")]
        [ProducesResponseType(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.pallet_xcm.pallet.EnumQueryStatus), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.XcmPalletStorage), "QueriesParams", typeof(Substrate.NetApi.Model.Types.Primitive.U64))]
        public IActionResult GetQueries(string key)
        {
            return this.Ok(_xcmPalletStorage.GetQueries(key));
        }
        
        /// <summary>
        /// >> AssetTraps
        ///  The existing asset traps.
        /// 
        ///  Key is the blake2 256 hash of (origin, versioned `Assets`) pair. Value is the number of
        ///  times this pair has been trapped (usually just 1 if it exists at all).
        /// </summary>
        [HttpGet("AssetTraps")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.XcmPalletStorage), "AssetTrapsParams", typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.primitive_types.H256))]
        public IActionResult GetAssetTraps(string key)
        {
            return this.Ok(_xcmPalletStorage.GetAssetTraps(key));
        }
        
        /// <summary>
        /// >> SafeXcmVersion
        ///  Default version to encode XCM when latest version of destination is unknown. If `None`,
        ///  then the destinations whose XCM version is unknown are considered unreachable.
        /// </summary>
        [HttpGet("SafeXcmVersion")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.XcmPalletStorage), "SafeXcmVersionParams")]
        public IActionResult GetSafeXcmVersion()
        {
            return this.Ok(_xcmPalletStorage.GetSafeXcmVersion());
        }
        
        /// <summary>
        /// >> SupportedVersion
        ///  The Latest versions that we know various locations support.
        /// </summary>
        [HttpGet("SupportedVersion")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.XcmPalletStorage), "SupportedVersionParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Kusama.NET.NetApiExt.Generated.Model.xcm.EnumVersionedLocation>))]
        public IActionResult GetSupportedVersion(string key)
        {
            return this.Ok(_xcmPalletStorage.GetSupportedVersion(key));
        }
        
        /// <summary>
        /// >> VersionNotifiers
        ///  All locations that we have requested version notifications from.
        /// </summary>
        [HttpGet("VersionNotifiers")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U64), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.XcmPalletStorage), "VersionNotifiersParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Kusama.NET.NetApiExt.Generated.Model.xcm.EnumVersionedLocation>))]
        public IActionResult GetVersionNotifiers(string key)
        {
            return this.Ok(_xcmPalletStorage.GetVersionNotifiers(key));
        }
        
        /// <summary>
        /// >> VersionNotifyTargets
        ///  The target locations that are subscribed to our version changes, as well as the most recent
        ///  of our versions we informed them of.
        /// </summary>
        [HttpGet("VersionNotifyTargets")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U64, Substrate.Kusama.NET.NetApiExt.Generated.Model.sp_weights.weight_v2.Weight, Substrate.NetApi.Model.Types.Primitive.U32>), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.XcmPalletStorage), "VersionNotifyTargetsParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Kusama.NET.NetApiExt.Generated.Model.xcm.EnumVersionedLocation>))]
        public IActionResult GetVersionNotifyTargets(string key)
        {
            return this.Ok(_xcmPalletStorage.GetVersionNotifyTargets(key));
        }
        
        /// <summary>
        /// >> VersionDiscoveryQueue
        ///  Destinations whose latest XCM version we would like to know. Duplicates not allowed, and
        ///  the `u32` counter is the number of times that a send to the destination has been attempted,
        ///  which is used as a prioritization.
        /// </summary>
        [HttpGet("VersionDiscoveryQueue")]
        [ProducesResponseType(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT50), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.XcmPalletStorage), "VersionDiscoveryQueueParams")]
        public IActionResult GetVersionDiscoveryQueue()
        {
            return this.Ok(_xcmPalletStorage.GetVersionDiscoveryQueue());
        }
        
        /// <summary>
        /// >> CurrentMigration
        ///  The current migration's stage, if any.
        /// </summary>
        [HttpGet("CurrentMigration")]
        [ProducesResponseType(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.pallet_xcm.pallet.EnumVersionMigrationStage), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.XcmPalletStorage), "CurrentMigrationParams")]
        public IActionResult GetCurrentMigration()
        {
            return this.Ok(_xcmPalletStorage.GetCurrentMigration());
        }
        
        /// <summary>
        /// >> RemoteLockedFungibles
        ///  Fungible assets which we know are locked on a remote chain.
        /// </summary>
        [HttpGet("RemoteLockedFungibles")]
        [ProducesResponseType(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.pallet_xcm.pallet.RemoteLockedFungibleRecord), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.XcmPalletStorage), "RemoteLockedFungiblesParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Kusama.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.Kusama.NET.NetApiExt.Generated.Model.xcm.EnumVersionedAssetId>))]
        public IActionResult GetRemoteLockedFungibles(string key)
        {
            return this.Ok(_xcmPalletStorage.GetRemoteLockedFungibles(key));
        }
        
        /// <summary>
        /// >> LockedFungibles
        ///  Fungible assets which we know are locked on this chain.
        /// </summary>
        [HttpGet("LockedFungibles")]
        [ProducesResponseType(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT52), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.XcmPalletStorage), "LockedFungiblesParams", typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32))]
        public IActionResult GetLockedFungibles(string key)
        {
            return this.Ok(_xcmPalletStorage.GetLockedFungibles(key));
        }
        
        /// <summary>
        /// >> XcmExecutionSuspended
        ///  Global suspension state of the XCM executor.
        /// </summary>
        [HttpGet("XcmExecutionSuspended")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.Bool), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.XcmPalletStorage), "XcmExecutionSuspendedParams")]
        public IActionResult GetXcmExecutionSuspended()
        {
            return this.Ok(_xcmPalletStorage.GetXcmExecutionSuspended());
        }
    }
}
