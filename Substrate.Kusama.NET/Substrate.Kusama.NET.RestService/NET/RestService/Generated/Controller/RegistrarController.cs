//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.Kusama.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Kusama.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// RegistrarController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class RegistrarController : ControllerBase
    {
        
        private IRegistrarStorage _registrarStorage;
        
        /// <summary>
        /// RegistrarController constructor.
        /// </summary>
        public RegistrarController(IRegistrarStorage registrarStorage)
        {
            _registrarStorage = registrarStorage;
        }
        
        /// <summary>
        /// >> PendingSwap
        ///  Pending swap operations.
        /// </summary>
        [HttpGet("PendingSwap")]
        [ProducesResponseType(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.RegistrarStorage), "PendingSwapParams", typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id))]
        public IActionResult GetPendingSwap(string key)
        {
            return this.Ok(_registrarStorage.GetPendingSwap(key));
        }
        
        /// <summary>
        /// >> Paras
        ///  Amount held on deposit for each para and the original depositor.
        /// 
        ///  The given account ID is responsible for registering the code and initial head data, but may only do
        ///  so if it isn't yet registered. (After that, it's up to governance to do so.)
        /// </summary>
        [HttpGet("Paras")]
        [ProducesResponseType(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_common.paras_registrar.ParaInfo), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.RegistrarStorage), "ParasParams", typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id))]
        public IActionResult GetParas(string key)
        {
            return this.Ok(_registrarStorage.GetParas(key));
        }
        
        /// <summary>
        /// >> NextFreeParaId
        ///  The next free `ParaId`.
        /// </summary>
        [HttpGet("NextFreeParaId")]
        [ProducesResponseType(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id), 200)]
        [StorageKeyBuilder(typeof(Substrate.Kusama.NET.NetApiExt.Generated.Storage.RegistrarStorage), "NextFreeParaIdParams")]
        public IActionResult GetNextFreeParaId()
        {
            return this.Ok(_registrarStorage.GetNextFreeParaId());
        }
    }
}
