//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Kusama.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IParaInclusionStorage interface definition.
    /// </summary>
    public interface IParaInclusionStorage : IStorage
    {
        
        /// <summary>
        /// >> V1
        ///  Candidates pending availability by `ParaId`. They form a chain starting from the latest
        ///  included head of the para.
        ///  Use a different prefix post-migration to v1, since the v0 `PendingAvailability` storage
        ///  would otherwise have the exact same prefix which could cause undefined behaviour when doing
        ///  the migration.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.CandidatePendingAvailability> GetV1(string key);
    }
    
    /// <summary>
    /// ParaInclusionStorage class definition.
    /// </summary>
    public sealed class ParaInclusionStorage : IParaInclusionStorage
    {
        
        /// <summary>
        /// _v1TypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.CandidatePendingAvailability>> _v1TypedStorage;
        
        /// <summary>
        /// ParaInclusionStorage constructor.
        /// </summary>
        public ParaInclusionStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.V1TypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.CandidatePendingAvailability>>("ParaInclusion.V1", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _v1TypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.CandidatePendingAvailability>> V1TypedStorage
        {
            get
            {
                return _v1TypedStorage;
            }
            set
            {
                _v1TypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await V1TypedStorage.InitializeAsync("ParaInclusion", "V1");
        }
        
        /// <summary>
        /// Implements any storage change for ParaInclusion.V1
        /// </summary>
        [StorageChange("ParaInclusion", "V1")]
        public void OnUpdateV1(string key, string data)
        {
            V1TypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> V1
        ///  Candidates pending availability by `ParaId`. They form a chain starting from the latest
        ///  included head of the para.
        ///  Use a different prefix post-migration to v1, since the v0 `PendingAvailability` storage
        ///  would otherwise have the exact same prefix which could cause undefined behaviour when doing
        ///  the migration.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.CandidatePendingAvailability> GetV1(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (V1TypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Kusama.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.CandidatePendingAvailability> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
