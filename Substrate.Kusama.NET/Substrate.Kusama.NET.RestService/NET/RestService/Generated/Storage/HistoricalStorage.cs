//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Kusama.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IHistoricalStorage interface definition.
    /// </summary>
    public interface IHistoricalStorage : IStorage
    {
        
        /// <summary>
        /// >> HistoricalSessions
        ///  Mapping from historical session indices to session-data root hash and validator count.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Kusama.NET.NetApiExt.Generated.Model.primitive_types.H256, Substrate.NetApi.Model.Types.Primitive.U32> GetHistoricalSessions(string key);
        
        /// <summary>
        /// >> StoredRange
        ///  The range of historical sessions we store. [first, last)
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32> GetStoredRange();
    }
    
    /// <summary>
    /// HistoricalStorage class definition.
    /// </summary>
    public sealed class HistoricalStorage : IHistoricalStorage
    {
        
        /// <summary>
        /// _historicalSessionsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Kusama.NET.NetApiExt.Generated.Model.primitive_types.H256, Substrate.NetApi.Model.Types.Primitive.U32>> _historicalSessionsTypedStorage;
        
        /// <summary>
        /// _storedRangeTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>> _storedRangeTypedStorage;
        
        /// <summary>
        /// HistoricalStorage constructor.
        /// </summary>
        public HistoricalStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.HistoricalSessionsTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Kusama.NET.NetApiExt.Generated.Model.primitive_types.H256, Substrate.NetApi.Model.Types.Primitive.U32>>("Historical.HistoricalSessions", storageDataProvider, storageChangeDelegates);
            this.StoredRangeTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>>("Historical.StoredRange", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _historicalSessionsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Kusama.NET.NetApiExt.Generated.Model.primitive_types.H256, Substrate.NetApi.Model.Types.Primitive.U32>> HistoricalSessionsTypedStorage
        {
            get
            {
                return _historicalSessionsTypedStorage;
            }
            set
            {
                _historicalSessionsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _storedRangeTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>> StoredRangeTypedStorage
        {
            get
            {
                return _storedRangeTypedStorage;
            }
            set
            {
                _storedRangeTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await HistoricalSessionsTypedStorage.InitializeAsync("Historical", "HistoricalSessions");
            await StoredRangeTypedStorage.InitializeAsync("Historical", "StoredRange");
        }
        
        /// <summary>
        /// Implements any storage change for Historical.HistoricalSessions
        /// </summary>
        [StorageChange("Historical", "HistoricalSessions")]
        public void OnUpdateHistoricalSessions(string key, string data)
        {
            HistoricalSessionsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> HistoricalSessions
        ///  Mapping from historical session indices to session-data root hash and validator count.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Kusama.NET.NetApiExt.Generated.Model.primitive_types.H256, Substrate.NetApi.Model.Types.Primitive.U32> GetHistoricalSessions(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (HistoricalSessionsTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Kusama.NET.NetApiExt.Generated.Model.primitive_types.H256, Substrate.NetApi.Model.Types.Primitive.U32> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Historical.StoredRange
        /// </summary>
        [StorageChange("Historical", "StoredRange")]
        public void OnUpdateStoredRange(string data)
        {
            StoredRangeTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> StoredRange
        ///  The range of historical sessions we store. [first, last)
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32> GetStoredRange()
        {
            return StoredRangeTypedStorage.Get();
        }
    }
}
