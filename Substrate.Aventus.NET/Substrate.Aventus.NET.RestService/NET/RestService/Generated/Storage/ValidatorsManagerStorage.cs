//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Aventus.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IValidatorsManagerStorage interface definition.
    /// </summary>
    public interface IValidatorsManagerStorage : IStorage
    {
        
        /// <summary>
        /// >> ValidatorAccountIds
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> GetValidatorAccountIds();
        
        /// <summary>
        /// >> ValidatorActions
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ValidatorsActionData GetValidatorActions(string key);
        
        /// <summary>
        /// >> VotesRepository
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData GetVotesRepository(string key);
        
        /// <summary>
        /// >> PendingApprovals
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U64 GetPendingApprovals(string key);
        
        /// <summary>
        /// >> EthereumPublicKeys
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetEthereumPublicKeys(string key);
        
        /// <summary>
        /// >> TotalIngresses
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U64 GetTotalIngresses();
    }
    
    /// <summary>
    /// ValidatorsManagerStorage class definition.
    /// </summary>
    public sealed class ValidatorsManagerStorage : IValidatorsManagerStorage
    {
        
        /// <summary>
        /// _validatorAccountIdsTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> _validatorAccountIdsTypedStorage;
        
        /// <summary>
        /// _validatorActionsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ValidatorsActionData> _validatorActionsTypedStorage;
        
        /// <summary>
        /// _votesRepositoryTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData> _votesRepositoryTypedStorage;
        
        /// <summary>
        /// _pendingApprovalsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U64> _pendingApprovalsTypedStorage;
        
        /// <summary>
        /// _ethereumPublicKeysTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> _ethereumPublicKeysTypedStorage;
        
        /// <summary>
        /// _totalIngressesTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> _totalIngressesTypedStorage;
        
        /// <summary>
        /// ValidatorsManagerStorage constructor.
        /// </summary>
        public ValidatorsManagerStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.ValidatorAccountIdsTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>>("ValidatorsManager.ValidatorAccountIds", storageDataProvider, storageChangeDelegates);
            this.ValidatorActionsTypedStorage = new TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ValidatorsActionData>("ValidatorsManager.ValidatorActions", storageDataProvider, storageChangeDelegates);
            this.VotesRepositoryTypedStorage = new TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData>("ValidatorsManager.VotesRepository", storageDataProvider, storageChangeDelegates);
            this.PendingApprovalsTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U64>("ValidatorsManager.PendingApprovals", storageDataProvider, storageChangeDelegates);
            this.EthereumPublicKeysTypedStorage = new TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>("ValidatorsManager.EthereumPublicKeys", storageDataProvider, storageChangeDelegates);
            this.TotalIngressesTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64>("ValidatorsManager.TotalIngresses", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _validatorAccountIdsTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> ValidatorAccountIdsTypedStorage
        {
            get
            {
                return _validatorAccountIdsTypedStorage;
            }
            set
            {
                _validatorAccountIdsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _validatorActionsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ValidatorsActionData> ValidatorActionsTypedStorage
        {
            get
            {
                return _validatorActionsTypedStorage;
            }
            set
            {
                _validatorActionsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _votesRepositoryTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData> VotesRepositoryTypedStorage
        {
            get
            {
                return _votesRepositoryTypedStorage;
            }
            set
            {
                _votesRepositoryTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _pendingApprovalsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U64> PendingApprovalsTypedStorage
        {
            get
            {
                return _pendingApprovalsTypedStorage;
            }
            set
            {
                _pendingApprovalsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _ethereumPublicKeysTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> EthereumPublicKeysTypedStorage
        {
            get
            {
                return _ethereumPublicKeysTypedStorage;
            }
            set
            {
                _ethereumPublicKeysTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _totalIngressesTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> TotalIngressesTypedStorage
        {
            get
            {
                return _totalIngressesTypedStorage;
            }
            set
            {
                _totalIngressesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await ValidatorAccountIdsTypedStorage.InitializeAsync("ValidatorsManager", "ValidatorAccountIds");
            await ValidatorActionsTypedStorage.InitializeAsync("ValidatorsManager", "ValidatorActions");
            await VotesRepositoryTypedStorage.InitializeAsync("ValidatorsManager", "VotesRepository");
            await PendingApprovalsTypedStorage.InitializeAsync("ValidatorsManager", "PendingApprovals");
            await EthereumPublicKeysTypedStorage.InitializeAsync("ValidatorsManager", "EthereumPublicKeys");
            await TotalIngressesTypedStorage.InitializeAsync("ValidatorsManager", "TotalIngresses");
        }
        
        /// <summary>
        /// Implements any storage change for ValidatorsManager.ValidatorAccountIds
        /// </summary>
        [StorageChange("ValidatorsManager", "ValidatorAccountIds")]
        public void OnUpdateValidatorAccountIds(string data)
        {
            ValidatorAccountIdsTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> ValidatorAccountIds
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> GetValidatorAccountIds()
        {
            return ValidatorAccountIdsTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ValidatorsManager.ValidatorActions
        /// </summary>
        [StorageChange("ValidatorsManager", "ValidatorActions")]
        public void OnUpdateValidatorActions(string key, string data)
        {
            ValidatorActionsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ValidatorActions
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ValidatorsActionData GetValidatorActions(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ValidatorActionsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ValidatorsActionData result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ValidatorsManager.VotesRepository
        /// </summary>
        [StorageChange("ValidatorsManager", "VotesRepository")]
        public void OnUpdateVotesRepository(string key, string data)
        {
            VotesRepositoryTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> VotesRepository
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData GetVotesRepository(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (VotesRepositoryTypedStorage.Dictionary.TryGetValue(key, out Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ValidatorsManager.PendingApprovals
        /// </summary>
        [StorageChange("ValidatorsManager", "PendingApprovals")]
        public void OnUpdatePendingApprovals(string key, string data)
        {
            PendingApprovalsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> PendingApprovals
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 GetPendingApprovals(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PendingApprovalsTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U64 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ValidatorsManager.EthereumPublicKeys
        /// </summary>
        [StorageChange("ValidatorsManager", "EthereumPublicKeys")]
        public void OnUpdateEthereumPublicKeys(string key, string data)
        {
            EthereumPublicKeysTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> EthereumPublicKeys
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetEthereumPublicKeys(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (EthereumPublicKeysTypedStorage.Dictionary.TryGetValue(key, out Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ValidatorsManager.TotalIngresses
        /// </summary>
        [StorageChange("ValidatorsManager", "TotalIngresses")]
        public void OnUpdateTotalIngresses(string data)
        {
            TotalIngressesTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> TotalIngresses
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 GetTotalIngresses()
        {
            return TotalIngressesTypedStorage.Get();
        }
    }
}
