//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Aventus.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IAvnOffenceHandlerStorage interface definition.
    /// </summary>
    public interface IAvnOffenceHandlerStorage : IStorage
    {
        
        /// <summary>
        /// >> ReportedOffenders
        ///  A false value means the offence for the validator was not applied successfully.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.Bool GetReportedOffenders(string key);
        
        /// <summary>
        /// >> SlashingEnabled
        ///  A flag to control if slashing is enabled
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.Bool GetSlashingEnabled();
    }
    
    /// <summary>
    /// AvnOffenceHandlerStorage class definition.
    /// </summary>
    public sealed class AvnOffenceHandlerStorage : IAvnOffenceHandlerStorage
    {
        
        /// <summary>
        /// _reportedOffendersTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.Bool> _reportedOffendersTypedStorage;
        
        /// <summary>
        /// _slashingEnabledTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.Bool> _slashingEnabledTypedStorage;
        
        /// <summary>
        /// AvnOffenceHandlerStorage constructor.
        /// </summary>
        public AvnOffenceHandlerStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.ReportedOffendersTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.Bool>("AvnOffenceHandler.ReportedOffenders", storageDataProvider, storageChangeDelegates);
            this.SlashingEnabledTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.Bool>("AvnOffenceHandler.SlashingEnabled", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _reportedOffendersTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.Bool> ReportedOffendersTypedStorage
        {
            get
            {
                return _reportedOffendersTypedStorage;
            }
            set
            {
                _reportedOffendersTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _slashingEnabledTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.Bool> SlashingEnabledTypedStorage
        {
            get
            {
                return _slashingEnabledTypedStorage;
            }
            set
            {
                _slashingEnabledTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await ReportedOffendersTypedStorage.InitializeAsync("AvnOffenceHandler", "ReportedOffenders");
            await SlashingEnabledTypedStorage.InitializeAsync("AvnOffenceHandler", "SlashingEnabled");
        }
        
        /// <summary>
        /// Implements any storage change for AvnOffenceHandler.ReportedOffenders
        /// </summary>
        [StorageChange("AvnOffenceHandler", "ReportedOffenders")]
        public void OnUpdateReportedOffenders(string key, string data)
        {
            ReportedOffendersTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ReportedOffenders
        ///  A false value means the offence for the validator was not applied successfully.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.Bool GetReportedOffenders(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ReportedOffendersTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.Bool result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for AvnOffenceHandler.SlashingEnabled
        /// </summary>
        [StorageChange("AvnOffenceHandler", "SlashingEnabled")]
        public void OnUpdateSlashingEnabled(string data)
        {
            SlashingEnabledTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> SlashingEnabled
        ///  A flag to control if slashing is enabled
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.Bool GetSlashingEnabled()
        {
            return SlashingEnabledTypedStorage.Get();
        }
    }
}
