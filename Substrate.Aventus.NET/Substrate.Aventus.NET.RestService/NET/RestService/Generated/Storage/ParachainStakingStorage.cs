//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Aventus.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IParachainStakingStorage interface definition.
    /// </summary>
    public interface IParachainStakingStorage : IStorage
    {
        
        /// <summary>
        /// >> Delay
        ///  Number of eras to wait before executing any staking action
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetDelay();
        
        /// <summary>
        /// >> TotalSelected
        ///  The total candidates selected every era
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetTotalSelected();
        
        /// <summary>
        /// >> Era
        ///  Current era index and next era scheduled transition
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.EraInfo GetEra();
        
        /// <summary>
        /// >> NominatorState
        ///  Get nominator state associated with an account if account is nominating else None
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominator GetNominatorState(string key);
        
        /// <summary>
        /// >> CandidateInfo
        ///  Get collator candidate info associated with an account if account is candidate else None
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.CandidateMetadata GetCandidateInfo(string key);
        
        /// <summary>
        /// >> NominationScheduledRequests
        ///  Stores outstanding nomination requests per collator.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.nomination_requests.ScheduledRequest> GetNominationScheduledRequests(string key);
        
        /// <summary>
        /// >> TopNominations
        ///  Top nominations for collator candidate
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominations GetTopNominations(string key);
        
        /// <summary>
        /// >> BottomNominations
        ///  Bottom nominations for collator candidate
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominations GetBottomNominations(string key);
        
        /// <summary>
        /// >> SelectedCandidates
        ///  The collator candidates selected for the current era
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> GetSelectedCandidates();
        
        /// <summary>
        /// >> Total
        ///  Total capital locked by this staking pallet
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U128 GetTotal();
        
        /// <summary>
        /// >> CandidatePool
        ///  The pool of collator candidates, each with their total backing stake
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.set.OrderedSet GetCandidatePool();
        
        /// <summary>
        /// >> AtStake
        ///  Snapshot of collator nomination stake at the start of the era
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.CollatorSnapshot GetAtStake(string key);
        
        /// <summary>
        /// >> DelayedPayouts
        ///  Delayed payouts
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.DelayedPayout GetDelayedPayouts(string key);
        
        /// <summary>
        /// >> Staked
        ///  Total counted stake for selected candidates in the era
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U128 GetStaked(string key);
        
        /// <summary>
        /// >> Points
        ///  Total points awarded to collators for block production in the era
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetPoints(string key);
        
        /// <summary>
        /// >> AwardedPts
        ///  Points for each collator per era
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetAwardedPts(string key);
        
        /// <summary>
        /// >> LockedEraPayout
        ///  Total amount of payouts we are waiting to take out of this pallet's pot.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U128 GetLockedEraPayout();
        
        /// <summary>
        /// >> GrowthPeriod
        ///  Tracks the current growth period where collator will get paid for producing blocks
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.GrowthPeriodInfo GetGrowthPeriod();
        
        /// <summary>
        /// >> Growth
        ///  Data to calculate growth and collator payouts.
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.GrowthInfo GetGrowth(string key);
        
        /// <summary>
        /// >> ProcessedGrowthPeriods
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseTuple GetProcessedGrowthPeriods(string key);
        
        /// <summary>
        /// >> ForceNewEra
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.Bool GetForceNewEra();
        
        /// <summary>
        /// >> MinCollatorStake
        ///  Minimum stake required for any candidate to be a collator
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U128 GetMinCollatorStake();
        
        /// <summary>
        /// >> MinTotalNominatorStake
        ///  Minimum total stake that must be maintained for any registered on-chain account to be a
        ///  nominator
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U128 GetMinTotalNominatorStake();
        
        /// <summary>
        /// >> ProxyNonces
        ///  An account nonce that represents the number of proxy transactions from this account
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U64 GetProxyNonces(string key);
    }
    
    /// <summary>
    /// ParachainStakingStorage class definition.
    /// </summary>
    public sealed class ParachainStakingStorage : IParachainStakingStorage
    {
        
        /// <summary>
        /// _delayTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _delayTypedStorage;
        
        /// <summary>
        /// _totalSelectedTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _totalSelectedTypedStorage;
        
        /// <summary>
        /// _eraTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.EraInfo> _eraTypedStorage;
        
        /// <summary>
        /// _nominatorStateTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominator> _nominatorStateTypedStorage;
        
        /// <summary>
        /// _candidateInfoTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.CandidateMetadata> _candidateInfoTypedStorage;
        
        /// <summary>
        /// _nominationScheduledRequestsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.nomination_requests.ScheduledRequest>> _nominationScheduledRequestsTypedStorage;
        
        /// <summary>
        /// _topNominationsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominations> _topNominationsTypedStorage;
        
        /// <summary>
        /// _bottomNominationsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominations> _bottomNominationsTypedStorage;
        
        /// <summary>
        /// _selectedCandidatesTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> _selectedCandidatesTypedStorage;
        
        /// <summary>
        /// _totalTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128> _totalTypedStorage;
        
        /// <summary>
        /// _candidatePoolTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.set.OrderedSet> _candidatePoolTypedStorage;
        
        /// <summary>
        /// _atStakeTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.CollatorSnapshot> _atStakeTypedStorage;
        
        /// <summary>
        /// _delayedPayoutsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.DelayedPayout> _delayedPayoutsTypedStorage;
        
        /// <summary>
        /// _stakedTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U128> _stakedTypedStorage;
        
        /// <summary>
        /// _pointsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> _pointsTypedStorage;
        
        /// <summary>
        /// _awardedPtsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> _awardedPtsTypedStorage;
        
        /// <summary>
        /// _lockedEraPayoutTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128> _lockedEraPayoutTypedStorage;
        
        /// <summary>
        /// _growthPeriodTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.GrowthPeriodInfo> _growthPeriodTypedStorage;
        
        /// <summary>
        /// _growthTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.GrowthInfo> _growthTypedStorage;
        
        /// <summary>
        /// _processedGrowthPeriodsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple> _processedGrowthPeriodsTypedStorage;
        
        /// <summary>
        /// _forceNewEraTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.Bool> _forceNewEraTypedStorage;
        
        /// <summary>
        /// _minCollatorStakeTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128> _minCollatorStakeTypedStorage;
        
        /// <summary>
        /// _minTotalNominatorStakeTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128> _minTotalNominatorStakeTypedStorage;
        
        /// <summary>
        /// _proxyNoncesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U64> _proxyNoncesTypedStorage;
        
        /// <summary>
        /// ParachainStakingStorage constructor.
        /// </summary>
        public ParachainStakingStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.DelayTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("ParachainStaking.Delay", storageDataProvider, storageChangeDelegates);
            this.TotalSelectedTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("ParachainStaking.TotalSelected", storageDataProvider, storageChangeDelegates);
            this.EraTypedStorage = new TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.EraInfo>("ParachainStaking.Era", storageDataProvider, storageChangeDelegates);
            this.NominatorStateTypedStorage = new TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominator>("ParachainStaking.NominatorState", storageDataProvider, storageChangeDelegates);
            this.CandidateInfoTypedStorage = new TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.CandidateMetadata>("ParachainStaking.CandidateInfo", storageDataProvider, storageChangeDelegates);
            this.NominationScheduledRequestsTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.nomination_requests.ScheduledRequest>>("ParachainStaking.NominationScheduledRequests", storageDataProvider, storageChangeDelegates);
            this.TopNominationsTypedStorage = new TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominations>("ParachainStaking.TopNominations", storageDataProvider, storageChangeDelegates);
            this.BottomNominationsTypedStorage = new TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominations>("ParachainStaking.BottomNominations", storageDataProvider, storageChangeDelegates);
            this.SelectedCandidatesTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>>("ParachainStaking.SelectedCandidates", storageDataProvider, storageChangeDelegates);
            this.TotalTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128>("ParachainStaking.Total", storageDataProvider, storageChangeDelegates);
            this.CandidatePoolTypedStorage = new TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.set.OrderedSet>("ParachainStaking.CandidatePool", storageDataProvider, storageChangeDelegates);
            this.AtStakeTypedStorage = new TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.CollatorSnapshot>("ParachainStaking.AtStake", storageDataProvider, storageChangeDelegates);
            this.DelayedPayoutsTypedStorage = new TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.DelayedPayout>("ParachainStaking.DelayedPayouts", storageDataProvider, storageChangeDelegates);
            this.StakedTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U128>("ParachainStaking.Staked", storageDataProvider, storageChangeDelegates);
            this.PointsTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32>("ParachainStaking.Points", storageDataProvider, storageChangeDelegates);
            this.AwardedPtsTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32>("ParachainStaking.AwardedPts", storageDataProvider, storageChangeDelegates);
            this.LockedEraPayoutTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128>("ParachainStaking.LockedEraPayout", storageDataProvider, storageChangeDelegates);
            this.GrowthPeriodTypedStorage = new TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.GrowthPeriodInfo>("ParachainStaking.GrowthPeriod", storageDataProvider, storageChangeDelegates);
            this.GrowthTypedStorage = new TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.GrowthInfo>("ParachainStaking.Growth", storageDataProvider, storageChangeDelegates);
            this.ProcessedGrowthPeriodsTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple>("ParachainStaking.ProcessedGrowthPeriods", storageDataProvider, storageChangeDelegates);
            this.ForceNewEraTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.Bool>("ParachainStaking.ForceNewEra", storageDataProvider, storageChangeDelegates);
            this.MinCollatorStakeTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128>("ParachainStaking.MinCollatorStake", storageDataProvider, storageChangeDelegates);
            this.MinTotalNominatorStakeTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128>("ParachainStaking.MinTotalNominatorStake", storageDataProvider, storageChangeDelegates);
            this.ProxyNoncesTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U64>("ParachainStaking.ProxyNonces", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _delayTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> DelayTypedStorage
        {
            get
            {
                return _delayTypedStorage;
            }
            set
            {
                _delayTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _totalSelectedTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> TotalSelectedTypedStorage
        {
            get
            {
                return _totalSelectedTypedStorage;
            }
            set
            {
                _totalSelectedTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _eraTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.EraInfo> EraTypedStorage
        {
            get
            {
                return _eraTypedStorage;
            }
            set
            {
                _eraTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _nominatorStateTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominator> NominatorStateTypedStorage
        {
            get
            {
                return _nominatorStateTypedStorage;
            }
            set
            {
                _nominatorStateTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _candidateInfoTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.CandidateMetadata> CandidateInfoTypedStorage
        {
            get
            {
                return _candidateInfoTypedStorage;
            }
            set
            {
                _candidateInfoTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _nominationScheduledRequestsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.nomination_requests.ScheduledRequest>> NominationScheduledRequestsTypedStorage
        {
            get
            {
                return _nominationScheduledRequestsTypedStorage;
            }
            set
            {
                _nominationScheduledRequestsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _topNominationsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominations> TopNominationsTypedStorage
        {
            get
            {
                return _topNominationsTypedStorage;
            }
            set
            {
                _topNominationsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _bottomNominationsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominations> BottomNominationsTypedStorage
        {
            get
            {
                return _bottomNominationsTypedStorage;
            }
            set
            {
                _bottomNominationsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _selectedCandidatesTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> SelectedCandidatesTypedStorage
        {
            get
            {
                return _selectedCandidatesTypedStorage;
            }
            set
            {
                _selectedCandidatesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _totalTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128> TotalTypedStorage
        {
            get
            {
                return _totalTypedStorage;
            }
            set
            {
                _totalTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _candidatePoolTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.set.OrderedSet> CandidatePoolTypedStorage
        {
            get
            {
                return _candidatePoolTypedStorage;
            }
            set
            {
                _candidatePoolTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _atStakeTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.CollatorSnapshot> AtStakeTypedStorage
        {
            get
            {
                return _atStakeTypedStorage;
            }
            set
            {
                _atStakeTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _delayedPayoutsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.DelayedPayout> DelayedPayoutsTypedStorage
        {
            get
            {
                return _delayedPayoutsTypedStorage;
            }
            set
            {
                _delayedPayoutsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _stakedTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U128> StakedTypedStorage
        {
            get
            {
                return _stakedTypedStorage;
            }
            set
            {
                _stakedTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _pointsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> PointsTypedStorage
        {
            get
            {
                return _pointsTypedStorage;
            }
            set
            {
                _pointsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _awardedPtsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> AwardedPtsTypedStorage
        {
            get
            {
                return _awardedPtsTypedStorage;
            }
            set
            {
                _awardedPtsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _lockedEraPayoutTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128> LockedEraPayoutTypedStorage
        {
            get
            {
                return _lockedEraPayoutTypedStorage;
            }
            set
            {
                _lockedEraPayoutTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _growthPeriodTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.GrowthPeriodInfo> GrowthPeriodTypedStorage
        {
            get
            {
                return _growthPeriodTypedStorage;
            }
            set
            {
                _growthPeriodTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _growthTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.GrowthInfo> GrowthTypedStorage
        {
            get
            {
                return _growthTypedStorage;
            }
            set
            {
                _growthTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _processedGrowthPeriodsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple> ProcessedGrowthPeriodsTypedStorage
        {
            get
            {
                return _processedGrowthPeriodsTypedStorage;
            }
            set
            {
                _processedGrowthPeriodsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _forceNewEraTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.Bool> ForceNewEraTypedStorage
        {
            get
            {
                return _forceNewEraTypedStorage;
            }
            set
            {
                _forceNewEraTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _minCollatorStakeTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128> MinCollatorStakeTypedStorage
        {
            get
            {
                return _minCollatorStakeTypedStorage;
            }
            set
            {
                _minCollatorStakeTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _minTotalNominatorStakeTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128> MinTotalNominatorStakeTypedStorage
        {
            get
            {
                return _minTotalNominatorStakeTypedStorage;
            }
            set
            {
                _minTotalNominatorStakeTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _proxyNoncesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U64> ProxyNoncesTypedStorage
        {
            get
            {
                return _proxyNoncesTypedStorage;
            }
            set
            {
                _proxyNoncesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await DelayTypedStorage.InitializeAsync("ParachainStaking", "Delay");
            await TotalSelectedTypedStorage.InitializeAsync("ParachainStaking", "TotalSelected");
            await EraTypedStorage.InitializeAsync("ParachainStaking", "Era");
            await NominatorStateTypedStorage.InitializeAsync("ParachainStaking", "NominatorState");
            await CandidateInfoTypedStorage.InitializeAsync("ParachainStaking", "CandidateInfo");
            await NominationScheduledRequestsTypedStorage.InitializeAsync("ParachainStaking", "NominationScheduledRequests");
            await TopNominationsTypedStorage.InitializeAsync("ParachainStaking", "TopNominations");
            await BottomNominationsTypedStorage.InitializeAsync("ParachainStaking", "BottomNominations");
            await SelectedCandidatesTypedStorage.InitializeAsync("ParachainStaking", "SelectedCandidates");
            await TotalTypedStorage.InitializeAsync("ParachainStaking", "Total");
            await CandidatePoolTypedStorage.InitializeAsync("ParachainStaking", "CandidatePool");
            await AtStakeTypedStorage.InitializeAsync("ParachainStaking", "AtStake");
            await DelayedPayoutsTypedStorage.InitializeAsync("ParachainStaking", "DelayedPayouts");
            await StakedTypedStorage.InitializeAsync("ParachainStaking", "Staked");
            await PointsTypedStorage.InitializeAsync("ParachainStaking", "Points");
            await AwardedPtsTypedStorage.InitializeAsync("ParachainStaking", "AwardedPts");
            await LockedEraPayoutTypedStorage.InitializeAsync("ParachainStaking", "LockedEraPayout");
            await GrowthPeriodTypedStorage.InitializeAsync("ParachainStaking", "GrowthPeriod");
            await GrowthTypedStorage.InitializeAsync("ParachainStaking", "Growth");
            await ProcessedGrowthPeriodsTypedStorage.InitializeAsync("ParachainStaking", "ProcessedGrowthPeriods");
            await ForceNewEraTypedStorage.InitializeAsync("ParachainStaking", "ForceNewEra");
            await MinCollatorStakeTypedStorage.InitializeAsync("ParachainStaking", "MinCollatorStake");
            await MinTotalNominatorStakeTypedStorage.InitializeAsync("ParachainStaking", "MinTotalNominatorStake");
            await ProxyNoncesTypedStorage.InitializeAsync("ParachainStaking", "ProxyNonces");
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.Delay
        /// </summary>
        [StorageChange("ParachainStaking", "Delay")]
        public void OnUpdateDelay(string data)
        {
            DelayTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Delay
        ///  Number of eras to wait before executing any staking action
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetDelay()
        {
            return DelayTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.TotalSelected
        /// </summary>
        [StorageChange("ParachainStaking", "TotalSelected")]
        public void OnUpdateTotalSelected(string data)
        {
            TotalSelectedTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> TotalSelected
        ///  The total candidates selected every era
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetTotalSelected()
        {
            return TotalSelectedTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.Era
        /// </summary>
        [StorageChange("ParachainStaking", "Era")]
        public void OnUpdateEra(string data)
        {
            EraTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Era
        ///  Current era index and next era scheduled transition
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.EraInfo GetEra()
        {
            return EraTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.NominatorState
        /// </summary>
        [StorageChange("ParachainStaking", "NominatorState")]
        public void OnUpdateNominatorState(string key, string data)
        {
            NominatorStateTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> NominatorState
        ///  Get nominator state associated with an account if account is nominating else None
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominator GetNominatorState(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (NominatorStateTypedStorage.Dictionary.TryGetValue(key, out Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominator result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.CandidateInfo
        /// </summary>
        [StorageChange("ParachainStaking", "CandidateInfo")]
        public void OnUpdateCandidateInfo(string key, string data)
        {
            CandidateInfoTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> CandidateInfo
        ///  Get collator candidate info associated with an account if account is candidate else None
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.CandidateMetadata GetCandidateInfo(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (CandidateInfoTypedStorage.Dictionary.TryGetValue(key, out Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.CandidateMetadata result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.NominationScheduledRequests
        /// </summary>
        [StorageChange("ParachainStaking", "NominationScheduledRequests")]
        public void OnUpdateNominationScheduledRequests(string key, string data)
        {
            NominationScheduledRequestsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> NominationScheduledRequests
        ///  Stores outstanding nomination requests per collator.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.nomination_requests.ScheduledRequest> GetNominationScheduledRequests(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (NominationScheduledRequestsTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.nomination_requests.ScheduledRequest> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.TopNominations
        /// </summary>
        [StorageChange("ParachainStaking", "TopNominations")]
        public void OnUpdateTopNominations(string key, string data)
        {
            TopNominationsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> TopNominations
        ///  Top nominations for collator candidate
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominations GetTopNominations(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (TopNominationsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominations result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.BottomNominations
        /// </summary>
        [StorageChange("ParachainStaking", "BottomNominations")]
        public void OnUpdateBottomNominations(string key, string data)
        {
            BottomNominationsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> BottomNominations
        ///  Bottom nominations for collator candidate
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominations GetBottomNominations(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (BottomNominationsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.Nominations result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.SelectedCandidates
        /// </summary>
        [StorageChange("ParachainStaking", "SelectedCandidates")]
        public void OnUpdateSelectedCandidates(string data)
        {
            SelectedCandidatesTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> SelectedCandidates
        ///  The collator candidates selected for the current era
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> GetSelectedCandidates()
        {
            return SelectedCandidatesTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.Total
        /// </summary>
        [StorageChange("ParachainStaking", "Total")]
        public void OnUpdateTotal(string data)
        {
            TotalTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Total
        ///  Total capital locked by this staking pallet
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 GetTotal()
        {
            return TotalTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.CandidatePool
        /// </summary>
        [StorageChange("ParachainStaking", "CandidatePool")]
        public void OnUpdateCandidatePool(string data)
        {
            CandidatePoolTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> CandidatePool
        ///  The pool of collator candidates, each with their total backing stake
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.set.OrderedSet GetCandidatePool()
        {
            return CandidatePoolTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.AtStake
        /// </summary>
        [StorageChange("ParachainStaking", "AtStake")]
        public void OnUpdateAtStake(string key, string data)
        {
            AtStakeTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> AtStake
        ///  Snapshot of collator nomination stake at the start of the era
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.CollatorSnapshot GetAtStake(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AtStakeTypedStorage.Dictionary.TryGetValue(key, out Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.CollatorSnapshot result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.DelayedPayouts
        /// </summary>
        [StorageChange("ParachainStaking", "DelayedPayouts")]
        public void OnUpdateDelayedPayouts(string key, string data)
        {
            DelayedPayoutsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> DelayedPayouts
        ///  Delayed payouts
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.DelayedPayout GetDelayedPayouts(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (DelayedPayoutsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.DelayedPayout result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.Staked
        /// </summary>
        [StorageChange("ParachainStaking", "Staked")]
        public void OnUpdateStaked(string key, string data)
        {
            StakedTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Staked
        ///  Total counted stake for selected candidates in the era
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 GetStaked(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (StakedTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U128 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.Points
        /// </summary>
        [StorageChange("ParachainStaking", "Points")]
        public void OnUpdatePoints(string key, string data)
        {
            PointsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Points
        ///  Total points awarded to collators for block production in the era
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetPoints(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PointsTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.AwardedPts
        /// </summary>
        [StorageChange("ParachainStaking", "AwardedPts")]
        public void OnUpdateAwardedPts(string key, string data)
        {
            AwardedPtsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> AwardedPts
        ///  Points for each collator per era
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetAwardedPts(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AwardedPtsTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.LockedEraPayout
        /// </summary>
        [StorageChange("ParachainStaking", "LockedEraPayout")]
        public void OnUpdateLockedEraPayout(string data)
        {
            LockedEraPayoutTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> LockedEraPayout
        ///  Total amount of payouts we are waiting to take out of this pallet's pot.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 GetLockedEraPayout()
        {
            return LockedEraPayoutTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.GrowthPeriod
        /// </summary>
        [StorageChange("ParachainStaking", "GrowthPeriod")]
        public void OnUpdateGrowthPeriod(string data)
        {
            GrowthPeriodTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> GrowthPeriod
        ///  Tracks the current growth period where collator will get paid for producing blocks
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.GrowthPeriodInfo GetGrowthPeriod()
        {
            return GrowthPeriodTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.Growth
        /// </summary>
        [StorageChange("ParachainStaking", "Growth")]
        public void OnUpdateGrowth(string key, string data)
        {
            GrowthTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Growth
        ///  Data to calculate growth and collator payouts.
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.GrowthInfo GetGrowth(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (GrowthTypedStorage.Dictionary.TryGetValue(key, out Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_parachain_staking.types.GrowthInfo result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.ProcessedGrowthPeriods
        /// </summary>
        [StorageChange("ParachainStaking", "ProcessedGrowthPeriods")]
        public void OnUpdateProcessedGrowthPeriods(string key, string data)
        {
            ProcessedGrowthPeriodsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ProcessedGrowthPeriods
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseTuple GetProcessedGrowthPeriods(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ProcessedGrowthPeriodsTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseTuple result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.ForceNewEra
        /// </summary>
        [StorageChange("ParachainStaking", "ForceNewEra")]
        public void OnUpdateForceNewEra(string data)
        {
            ForceNewEraTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> ForceNewEra
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.Bool GetForceNewEra()
        {
            return ForceNewEraTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.MinCollatorStake
        /// </summary>
        [StorageChange("ParachainStaking", "MinCollatorStake")]
        public void OnUpdateMinCollatorStake(string data)
        {
            MinCollatorStakeTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> MinCollatorStake
        ///  Minimum stake required for any candidate to be a collator
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 GetMinCollatorStake()
        {
            return MinCollatorStakeTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.MinTotalNominatorStake
        /// </summary>
        [StorageChange("ParachainStaking", "MinTotalNominatorStake")]
        public void OnUpdateMinTotalNominatorStake(string data)
        {
            MinTotalNominatorStakeTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> MinTotalNominatorStake
        ///  Minimum total stake that must be maintained for any registered on-chain account to be a
        ///  nominator
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 GetMinTotalNominatorStake()
        {
            return MinTotalNominatorStakeTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for ParachainStaking.ProxyNonces
        /// </summary>
        [StorageChange("ParachainStaking", "ProxyNonces")]
        public void OnUpdateProxyNonces(string key, string data)
        {
            ProxyNoncesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ProxyNonces
        ///  An account nonce that represents the number of proxy transactions from this account
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 GetProxyNonces(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ProxyNoncesTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U64 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
