//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Aventus.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// ISummaryStorage interface definition.
    /// </summary>
    public interface ISummaryStorage : IStorage
    {
        
        /// <summary>
        /// >> NextBlockToProcess
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetNextBlockToProcess();
        
        /// <summary>
        /// >> NextSlotAtBlock
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetNextSlotAtBlock();
        
        /// <summary>
        /// >> CurrentSlot
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetCurrentSlot();
        
        /// <summary>
        /// >> CurrentSlotsValidator
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetCurrentSlotsValidator();
        
        /// <summary>
        /// >> SlotOfLastPublishedSummary
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetSlotOfLastPublishedSummary();
        
        /// <summary>
        /// >> Roots
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootData GetRoots(string key);
        
        /// <summary>
        /// >> VotesRepository
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData GetVotesRepository(string key);
        
        /// <summary>
        /// >> PendingApproval
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U64 GetPendingApproval(string key);
        
        /// <summary>
        /// >> TotalIngresses
        ///  The total ingresses of roots
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U64 GetTotalIngresses();
        
        /// <summary>
        /// >> SchedulePeriod
        ///  A period (in block number) where summaries are calculated
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetSchedulePeriod();
        
        /// <summary>
        /// >> VotingPeriod
        ///  A period (in block number) where validators are allowed to vote on the validity of a root
        ///  hash
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetVotingPeriod();
    }
    
    /// <summary>
    /// SummaryStorage class definition.
    /// </summary>
    public sealed class SummaryStorage : ISummaryStorage
    {
        
        /// <summary>
        /// _nextBlockToProcessTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _nextBlockToProcessTypedStorage;
        
        /// <summary>
        /// _nextSlotAtBlockTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _nextSlotAtBlockTypedStorage;
        
        /// <summary>
        /// _currentSlotTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _currentSlotTypedStorage;
        
        /// <summary>
        /// _currentSlotsValidatorTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> _currentSlotsValidatorTypedStorage;
        
        /// <summary>
        /// _slotOfLastPublishedSummaryTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _slotOfLastPublishedSummaryTypedStorage;
        
        /// <summary>
        /// _rootsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootData> _rootsTypedStorage;
        
        /// <summary>
        /// _votesRepositoryTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData> _votesRepositoryTypedStorage;
        
        /// <summary>
        /// _pendingApprovalTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U64> _pendingApprovalTypedStorage;
        
        /// <summary>
        /// _totalIngressesTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> _totalIngressesTypedStorage;
        
        /// <summary>
        /// _schedulePeriodTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _schedulePeriodTypedStorage;
        
        /// <summary>
        /// _votingPeriodTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _votingPeriodTypedStorage;
        
        /// <summary>
        /// SummaryStorage constructor.
        /// </summary>
        public SummaryStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.NextBlockToProcessTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Summary.NextBlockToProcess", storageDataProvider, storageChangeDelegates);
            this.NextSlotAtBlockTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Summary.NextSlotAtBlock", storageDataProvider, storageChangeDelegates);
            this.CurrentSlotTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Summary.CurrentSlot", storageDataProvider, storageChangeDelegates);
            this.CurrentSlotsValidatorTypedStorage = new TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>("Summary.CurrentSlotsValidator", storageDataProvider, storageChangeDelegates);
            this.SlotOfLastPublishedSummaryTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Summary.SlotOfLastPublishedSummary", storageDataProvider, storageChangeDelegates);
            this.RootsTypedStorage = new TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootData>("Summary.Roots", storageDataProvider, storageChangeDelegates);
            this.VotesRepositoryTypedStorage = new TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData>("Summary.VotesRepository", storageDataProvider, storageChangeDelegates);
            this.PendingApprovalTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U64>("Summary.PendingApproval", storageDataProvider, storageChangeDelegates);
            this.TotalIngressesTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64>("Summary.TotalIngresses", storageDataProvider, storageChangeDelegates);
            this.SchedulePeriodTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Summary.SchedulePeriod", storageDataProvider, storageChangeDelegates);
            this.VotingPeriodTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Summary.VotingPeriod", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _nextBlockToProcessTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> NextBlockToProcessTypedStorage
        {
            get
            {
                return _nextBlockToProcessTypedStorage;
            }
            set
            {
                _nextBlockToProcessTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _nextSlotAtBlockTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> NextSlotAtBlockTypedStorage
        {
            get
            {
                return _nextSlotAtBlockTypedStorage;
            }
            set
            {
                _nextSlotAtBlockTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _currentSlotTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> CurrentSlotTypedStorage
        {
            get
            {
                return _currentSlotTypedStorage;
            }
            set
            {
                _currentSlotTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _currentSlotsValidatorTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> CurrentSlotsValidatorTypedStorage
        {
            get
            {
                return _currentSlotsValidatorTypedStorage;
            }
            set
            {
                _currentSlotsValidatorTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _slotOfLastPublishedSummaryTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> SlotOfLastPublishedSummaryTypedStorage
        {
            get
            {
                return _slotOfLastPublishedSummaryTypedStorage;
            }
            set
            {
                _slotOfLastPublishedSummaryTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _rootsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootData> RootsTypedStorage
        {
            get
            {
                return _rootsTypedStorage;
            }
            set
            {
                _rootsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _votesRepositoryTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData> VotesRepositoryTypedStorage
        {
            get
            {
                return _votesRepositoryTypedStorage;
            }
            set
            {
                _votesRepositoryTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _pendingApprovalTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U64> PendingApprovalTypedStorage
        {
            get
            {
                return _pendingApprovalTypedStorage;
            }
            set
            {
                _pendingApprovalTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _totalIngressesTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> TotalIngressesTypedStorage
        {
            get
            {
                return _totalIngressesTypedStorage;
            }
            set
            {
                _totalIngressesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _schedulePeriodTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> SchedulePeriodTypedStorage
        {
            get
            {
                return _schedulePeriodTypedStorage;
            }
            set
            {
                _schedulePeriodTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _votingPeriodTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> VotingPeriodTypedStorage
        {
            get
            {
                return _votingPeriodTypedStorage;
            }
            set
            {
                _votingPeriodTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await NextBlockToProcessTypedStorage.InitializeAsync("Summary", "NextBlockToProcess");
            await NextSlotAtBlockTypedStorage.InitializeAsync("Summary", "NextSlotAtBlock");
            await CurrentSlotTypedStorage.InitializeAsync("Summary", "CurrentSlot");
            await CurrentSlotsValidatorTypedStorage.InitializeAsync("Summary", "CurrentSlotsValidator");
            await SlotOfLastPublishedSummaryTypedStorage.InitializeAsync("Summary", "SlotOfLastPublishedSummary");
            await RootsTypedStorage.InitializeAsync("Summary", "Roots");
            await VotesRepositoryTypedStorage.InitializeAsync("Summary", "VotesRepository");
            await PendingApprovalTypedStorage.InitializeAsync("Summary", "PendingApproval");
            await TotalIngressesTypedStorage.InitializeAsync("Summary", "TotalIngresses");
            await SchedulePeriodTypedStorage.InitializeAsync("Summary", "SchedulePeriod");
            await VotingPeriodTypedStorage.InitializeAsync("Summary", "VotingPeriod");
        }
        
        /// <summary>
        /// Implements any storage change for Summary.NextBlockToProcess
        /// </summary>
        [StorageChange("Summary", "NextBlockToProcess")]
        public void OnUpdateNextBlockToProcess(string data)
        {
            NextBlockToProcessTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> NextBlockToProcess
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetNextBlockToProcess()
        {
            return NextBlockToProcessTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Summary.NextSlotAtBlock
        /// </summary>
        [StorageChange("Summary", "NextSlotAtBlock")]
        public void OnUpdateNextSlotAtBlock(string data)
        {
            NextSlotAtBlockTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> NextSlotAtBlock
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetNextSlotAtBlock()
        {
            return NextSlotAtBlockTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Summary.CurrentSlot
        /// </summary>
        [StorageChange("Summary", "CurrentSlot")]
        public void OnUpdateCurrentSlot(string data)
        {
            CurrentSlotTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> CurrentSlot
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetCurrentSlot()
        {
            return CurrentSlotTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Summary.CurrentSlotsValidator
        /// </summary>
        [StorageChange("Summary", "CurrentSlotsValidator")]
        public void OnUpdateCurrentSlotsValidator(string data)
        {
            CurrentSlotsValidatorTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> CurrentSlotsValidator
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetCurrentSlotsValidator()
        {
            return CurrentSlotsValidatorTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Summary.SlotOfLastPublishedSummary
        /// </summary>
        [StorageChange("Summary", "SlotOfLastPublishedSummary")]
        public void OnUpdateSlotOfLastPublishedSummary(string data)
        {
            SlotOfLastPublishedSummaryTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> SlotOfLastPublishedSummary
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetSlotOfLastPublishedSummary()
        {
            return SlotOfLastPublishedSummaryTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Summary.Roots
        /// </summary>
        [StorageChange("Summary", "Roots")]
        public void OnUpdateRoots(string key, string data)
        {
            RootsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Roots
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootData GetRoots(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (RootsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootData result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Summary.VotesRepository
        /// </summary>
        [StorageChange("Summary", "VotesRepository")]
        public void OnUpdateVotesRepository(string key, string data)
        {
            VotesRepositoryTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> VotesRepository
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData GetVotesRepository(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (VotesRepositoryTypedStorage.Dictionary.TryGetValue(key, out Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Summary.PendingApproval
        /// </summary>
        [StorageChange("Summary", "PendingApproval")]
        public void OnUpdatePendingApproval(string key, string data)
        {
            PendingApprovalTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> PendingApproval
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 GetPendingApproval(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PendingApprovalTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U64 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Summary.TotalIngresses
        /// </summary>
        [StorageChange("Summary", "TotalIngresses")]
        public void OnUpdateTotalIngresses(string data)
        {
            TotalIngressesTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> TotalIngresses
        ///  The total ingresses of roots
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 GetTotalIngresses()
        {
            return TotalIngressesTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Summary.SchedulePeriod
        /// </summary>
        [StorageChange("Summary", "SchedulePeriod")]
        public void OnUpdateSchedulePeriod(string data)
        {
            SchedulePeriodTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> SchedulePeriod
        ///  A period (in block number) where summaries are calculated
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetSchedulePeriod()
        {
            return SchedulePeriodTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Summary.VotingPeriod
        /// </summary>
        [StorageChange("Summary", "VotingPeriod")]
        public void OnUpdateVotingPeriod(string data)
        {
            VotingPeriodTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> VotingPeriod
        ///  A period (in block number) where validators are allowed to vote on the validity of a root
        ///  hash
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetVotingPeriod()
        {
            return VotingPeriodTypedStorage.Get();
        }
    }
}
