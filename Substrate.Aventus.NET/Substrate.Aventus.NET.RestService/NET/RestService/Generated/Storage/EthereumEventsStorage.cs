//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Aventus.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IEthereumEventsStorage interface definition.
    /// </summary>
    public interface IEthereumEventsStorage : IStorage
    {
        
        /// <summary>
        /// >> ValidatorManagerContractAddress
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160 GetValidatorManagerContractAddress();
        
        /// <summary>
        /// >> LiftingContractAddress
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160 GetLiftingContractAddress();
        
        /// <summary>
        /// >> TotalIngresses
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U64 GetTotalIngresses();
        
        /// <summary>
        /// >> UncheckedEvents
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>> GetUncheckedEvents();
        
        /// <summary>
        /// >> EventsPendingChallenge
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventCheckResult, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>> GetEventsPendingChallenge();
        
        /// <summary>
        /// >> ProcessedEvents
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.Bool GetProcessedEvents(string key);
        
        /// <summary>
        /// >> Challenges
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> GetChallenges(string key);
        
        /// <summary>
        /// >> QuorumFactor
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetQuorumFactor();
        
        /// <summary>
        /// >> EventChallengePeriod
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetEventChallengePeriod();
        
        /// <summary>
        /// >> NftT1Contracts
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseTuple GetNftT1Contracts(string key);
        
        /// <summary>
        /// >> ProxyNonces
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U64 GetProxyNonces(string key);
        
        /// <summary>
        /// >> StorageVersion
        /// </summary>
        Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_ethereum_events.EnumReleases GetStorageVersion();
    }
    
    /// <summary>
    /// EthereumEventsStorage class definition.
    /// </summary>
    public sealed class EthereumEventsStorage : IEthereumEventsStorage
    {
        
        /// <summary>
        /// _validatorManagerContractAddressTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160> _validatorManagerContractAddressTypedStorage;
        
        /// <summary>
        /// _liftingContractAddressTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160> _liftingContractAddressTypedStorage;
        
        /// <summary>
        /// _totalIngressesTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> _totalIngressesTypedStorage;
        
        /// <summary>
        /// _uncheckedEventsTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>>> _uncheckedEventsTypedStorage;
        
        /// <summary>
        /// _eventsPendingChallengeTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventCheckResult, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>>> _eventsPendingChallengeTypedStorage;
        
        /// <summary>
        /// _processedEventsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.Bool> _processedEventsTypedStorage;
        
        /// <summary>
        /// _challengesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> _challengesTypedStorage;
        
        /// <summary>
        /// _quorumFactorTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _quorumFactorTypedStorage;
        
        /// <summary>
        /// _eventChallengePeriodTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _eventChallengePeriodTypedStorage;
        
        /// <summary>
        /// _nftT1ContractsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple> _nftT1ContractsTypedStorage;
        
        /// <summary>
        /// _proxyNoncesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U64> _proxyNoncesTypedStorage;
        
        /// <summary>
        /// _storageVersionTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_ethereum_events.EnumReleases> _storageVersionTypedStorage;
        
        /// <summary>
        /// EthereumEventsStorage constructor.
        /// </summary>
        public EthereumEventsStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.ValidatorManagerContractAddressTypedStorage = new TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160>("EthereumEvents.ValidatorManagerContractAddress", storageDataProvider, storageChangeDelegates);
            this.LiftingContractAddressTypedStorage = new TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160>("EthereumEvents.LiftingContractAddress", storageDataProvider, storageChangeDelegates);
            this.TotalIngressesTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64>("EthereumEvents.TotalIngresses", storageDataProvider, storageChangeDelegates);
            this.UncheckedEventsTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>>>("EthereumEvents.UncheckedEvents", storageDataProvider, storageChangeDelegates);
            this.EventsPendingChallengeTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventCheckResult, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>>>("EthereumEvents.EventsPendingChallenge", storageDataProvider, storageChangeDelegates);
            this.ProcessedEventsTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.Bool>("EthereumEvents.ProcessedEvents", storageDataProvider, storageChangeDelegates);
            this.ChallengesTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>>("EthereumEvents.Challenges", storageDataProvider, storageChangeDelegates);
            this.QuorumFactorTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("EthereumEvents.QuorumFactor", storageDataProvider, storageChangeDelegates);
            this.EventChallengePeriodTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("EthereumEvents.EventChallengePeriod", storageDataProvider, storageChangeDelegates);
            this.NftT1ContractsTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple>("EthereumEvents.NftT1Contracts", storageDataProvider, storageChangeDelegates);
            this.ProxyNoncesTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U64>("EthereumEvents.ProxyNonces", storageDataProvider, storageChangeDelegates);
            this.StorageVersionTypedStorage = new TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_ethereum_events.EnumReleases>("EthereumEvents.StorageVersion", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _validatorManagerContractAddressTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160> ValidatorManagerContractAddressTypedStorage
        {
            get
            {
                return _validatorManagerContractAddressTypedStorage;
            }
            set
            {
                _validatorManagerContractAddressTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _liftingContractAddressTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160> LiftingContractAddressTypedStorage
        {
            get
            {
                return _liftingContractAddressTypedStorage;
            }
            set
            {
                _liftingContractAddressTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _totalIngressesTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> TotalIngressesTypedStorage
        {
            get
            {
                return _totalIngressesTypedStorage;
            }
            set
            {
                _totalIngressesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _uncheckedEventsTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>>> UncheckedEventsTypedStorage
        {
            get
            {
                return _uncheckedEventsTypedStorage;
            }
            set
            {
                _uncheckedEventsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _eventsPendingChallengeTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventCheckResult, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>>> EventsPendingChallengeTypedStorage
        {
            get
            {
                return _eventsPendingChallengeTypedStorage;
            }
            set
            {
                _eventsPendingChallengeTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _processedEventsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.Bool> ProcessedEventsTypedStorage
        {
            get
            {
                return _processedEventsTypedStorage;
            }
            set
            {
                _processedEventsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _challengesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> ChallengesTypedStorage
        {
            get
            {
                return _challengesTypedStorage;
            }
            set
            {
                _challengesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _quorumFactorTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> QuorumFactorTypedStorage
        {
            get
            {
                return _quorumFactorTypedStorage;
            }
            set
            {
                _quorumFactorTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _eventChallengePeriodTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> EventChallengePeriodTypedStorage
        {
            get
            {
                return _eventChallengePeriodTypedStorage;
            }
            set
            {
                _eventChallengePeriodTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _nftT1ContractsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple> NftT1ContractsTypedStorage
        {
            get
            {
                return _nftT1ContractsTypedStorage;
            }
            set
            {
                _nftT1ContractsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _proxyNoncesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U64> ProxyNoncesTypedStorage
        {
            get
            {
                return _proxyNoncesTypedStorage;
            }
            set
            {
                _proxyNoncesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _storageVersionTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_ethereum_events.EnumReleases> StorageVersionTypedStorage
        {
            get
            {
                return _storageVersionTypedStorage;
            }
            set
            {
                _storageVersionTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await ValidatorManagerContractAddressTypedStorage.InitializeAsync("EthereumEvents", "ValidatorManagerContractAddress");
            await LiftingContractAddressTypedStorage.InitializeAsync("EthereumEvents", "LiftingContractAddress");
            await TotalIngressesTypedStorage.InitializeAsync("EthereumEvents", "TotalIngresses");
            await UncheckedEventsTypedStorage.InitializeAsync("EthereumEvents", "UncheckedEvents");
            await EventsPendingChallengeTypedStorage.InitializeAsync("EthereumEvents", "EventsPendingChallenge");
            await ProcessedEventsTypedStorage.InitializeAsync("EthereumEvents", "ProcessedEvents");
            await ChallengesTypedStorage.InitializeAsync("EthereumEvents", "Challenges");
            await QuorumFactorTypedStorage.InitializeAsync("EthereumEvents", "QuorumFactor");
            await EventChallengePeriodTypedStorage.InitializeAsync("EthereumEvents", "EventChallengePeriod");
            await NftT1ContractsTypedStorage.InitializeAsync("EthereumEvents", "NftT1Contracts");
            await ProxyNoncesTypedStorage.InitializeAsync("EthereumEvents", "ProxyNonces");
            await StorageVersionTypedStorage.InitializeAsync("EthereumEvents", "StorageVersion");
        }
        
        /// <summary>
        /// Implements any storage change for EthereumEvents.ValidatorManagerContractAddress
        /// </summary>
        [StorageChange("EthereumEvents", "ValidatorManagerContractAddress")]
        public void OnUpdateValidatorManagerContractAddress(string data)
        {
            ValidatorManagerContractAddressTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> ValidatorManagerContractAddress
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160 GetValidatorManagerContractAddress()
        {
            return ValidatorManagerContractAddressTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for EthereumEvents.LiftingContractAddress
        /// </summary>
        [StorageChange("EthereumEvents", "LiftingContractAddress")]
        public void OnUpdateLiftingContractAddress(string data)
        {
            LiftingContractAddressTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> LiftingContractAddress
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160 GetLiftingContractAddress()
        {
            return LiftingContractAddressTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for EthereumEvents.TotalIngresses
        /// </summary>
        [StorageChange("EthereumEvents", "TotalIngresses")]
        public void OnUpdateTotalIngresses(string data)
        {
            TotalIngressesTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> TotalIngresses
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 GetTotalIngresses()
        {
            return TotalIngressesTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for EthereumEvents.UncheckedEvents
        /// </summary>
        [StorageChange("EthereumEvents", "UncheckedEvents")]
        public void OnUpdateUncheckedEvents(string data)
        {
            UncheckedEventsTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> UncheckedEvents
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>> GetUncheckedEvents()
        {
            return UncheckedEventsTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for EthereumEvents.EventsPendingChallenge
        /// </summary>
        [StorageChange("EthereumEvents", "EventsPendingChallenge")]
        public void OnUpdateEventsPendingChallenge(string data)
        {
            EventsPendingChallengeTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> EventsPendingChallenge
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventCheckResult, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>> GetEventsPendingChallenge()
        {
            return EventsPendingChallengeTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for EthereumEvents.ProcessedEvents
        /// </summary>
        [StorageChange("EthereumEvents", "ProcessedEvents")]
        public void OnUpdateProcessedEvents(string key, string data)
        {
            ProcessedEventsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ProcessedEvents
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.Bool GetProcessedEvents(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ProcessedEventsTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.Bool result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for EthereumEvents.Challenges
        /// </summary>
        [StorageChange("EthereumEvents", "Challenges")]
        public void OnUpdateChallenges(string key, string data)
        {
            ChallengesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Challenges
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> GetChallenges(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ChallengesTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for EthereumEvents.QuorumFactor
        /// </summary>
        [StorageChange("EthereumEvents", "QuorumFactor")]
        public void OnUpdateQuorumFactor(string data)
        {
            QuorumFactorTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> QuorumFactor
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetQuorumFactor()
        {
            return QuorumFactorTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for EthereumEvents.EventChallengePeriod
        /// </summary>
        [StorageChange("EthereumEvents", "EventChallengePeriod")]
        public void OnUpdateEventChallengePeriod(string data)
        {
            EventChallengePeriodTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> EventChallengePeriod
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetEventChallengePeriod()
        {
            return EventChallengePeriodTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for EthereumEvents.NftT1Contracts
        /// </summary>
        [StorageChange("EthereumEvents", "NftT1Contracts")]
        public void OnUpdateNftT1Contracts(string key, string data)
        {
            NftT1ContractsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> NftT1Contracts
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseTuple GetNftT1Contracts(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (NftT1ContractsTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseTuple result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for EthereumEvents.ProxyNonces
        /// </summary>
        [StorageChange("EthereumEvents", "ProxyNonces")]
        public void OnUpdateProxyNonces(string key, string data)
        {
            ProxyNoncesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ProxyNonces
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 GetProxyNonces(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ProxyNoncesTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U64 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for EthereumEvents.StorageVersion
        /// </summary>
        [StorageChange("EthereumEvents", "StorageVersion")]
        public void OnUpdateStorageVersion(string data)
        {
            StorageVersionTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> StorageVersion
        /// </summary>
        public Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_ethereum_events.EnumReleases GetStorageVersion()
        {
            return StorageVersionTypedStorage.Get();
        }
    }
}
