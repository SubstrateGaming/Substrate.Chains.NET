//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.Aventus.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Aventus.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// TokenManagerController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class TokenManagerController : ControllerBase
    {
        
        private ITokenManagerStorage _tokenManagerStorage;
        
        /// <summary>
        /// TokenManagerController constructor.
        /// </summary>
        public TokenManagerController(ITokenManagerStorage tokenManagerStorage)
        {
            _tokenManagerStorage = tokenManagerStorage;
        }
        
        /// <summary>
        /// >> Balances
        ///  The number of units of tokens held by any given account.
        /// </summary>
        [HttpGet("Balances")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.Aventus.NET.NetApiExt.Generated.Storage.TokenManagerStorage), "BalancesParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>))]
        public IActionResult GetBalances(string key)
        {
            return this.Ok(_tokenManagerStorage.GetBalances(key));
        }
        
        /// <summary>
        /// >> Nonces
        ///  An account nonce that represents the number of transfers from this account
        ///  It is shared for all tokens held by the account
        /// </summary>
        [HttpGet("Nonces")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U64), 200)]
        [StorageKeyBuilder(typeof(Substrate.Aventus.NET.NetApiExt.Generated.Storage.TokenManagerStorage), "NoncesParams", typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32))]
        public IActionResult GetNonces(string key)
        {
            return this.Ok(_tokenManagerStorage.GetNonces(key));
        }
        
        /// <summary>
        /// >> LowerAccountId
        ///  An account without a known private key, that can send transfers (eg Lowering transfers) but
        ///  from which no one can send funds. Tokens sent to this account are effectively destroyed.
        /// </summary>
        [HttpGet("LowerAccountId")]
        [ProducesResponseType(typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H256), 200)]
        [StorageKeyBuilder(typeof(Substrate.Aventus.NET.NetApiExt.Generated.Storage.TokenManagerStorage), "LowerAccountIdParams")]
        public IActionResult GetLowerAccountId()
        {
            return this.Ok(_tokenManagerStorage.GetLowerAccountId());
        }
        
        /// <summary>
        /// >> AVTTokenContract
        ///  The ethereum address of the AVT contract. Default value is the Rinkeby address
        /// </summary>
        [HttpGet("AVTTokenContract")]
        [ProducesResponseType(typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160), 200)]
        [StorageKeyBuilder(typeof(Substrate.Aventus.NET.NetApiExt.Generated.Storage.TokenManagerStorage), "AVTTokenContractParams")]
        public IActionResult GetAVTTokenContract()
        {
            return this.Ok(_tokenManagerStorage.GetAVTTokenContract());
        }
    }
}
