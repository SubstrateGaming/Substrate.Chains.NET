//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.Aventus.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Aventus.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// EthereumTransactionsController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class EthereumTransactionsController : ControllerBase
    {
        
        private IEthereumTransactionsStorage _ethereumTransactionsStorage;
        
        /// <summary>
        /// EthereumTransactionsController constructor.
        /// </summary>
        public EthereumTransactionsController(IEthereumTransactionsStorage ethereumTransactionsStorage)
        {
            _ethereumTransactionsStorage = ethereumTransactionsStorage;
        }
        
        /// <summary>
        /// >> Repository
        /// </summary>
        [HttpGet("Repository")]
        [ProducesResponseType(typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_ethereum_transactions.ethereum_transaction.EthTransactionCandidate), 200)]
        [StorageKeyBuilder(typeof(Substrate.Aventus.NET.NetApiExt.Generated.Storage.EthereumTransactionsStorage), "RepositoryParams", typeof(Substrate.NetApi.Model.Types.Primitive.U64))]
        public IActionResult GetRepository(string key)
        {
            return this.Ok(_ethereumTransactionsStorage.GetRepository(key));
        }
        
        /// <summary>
        /// >> DispatchedAvnTxIds
        /// </summary>
        [HttpGet("DispatchedAvnTxIds")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_ethereum_transactions.DispatchedData>), 200)]
        [StorageKeyBuilder(typeof(Substrate.Aventus.NET.NetApiExt.Generated.Storage.EthereumTransactionsStorage), "DispatchedAvnTxIdsParams", typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32))]
        public IActionResult GetDispatchedAvnTxIds(string key)
        {
            return this.Ok(_ethereumTransactionsStorage.GetDispatchedAvnTxIds(key));
        }
        
        /// <summary>
        /// >> ReservedTransactions
        /// </summary>
        [HttpGet("ReservedTransactions")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U64), 200)]
        [StorageKeyBuilder(typeof(Substrate.Aventus.NET.NetApiExt.Generated.Storage.EthereumTransactionsStorage), "ReservedTransactionsParams", typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_ethereum_transactions.ethereum_transaction.EnumEthTransactionType))]
        public IActionResult GetReservedTransactions(string key)
        {
            return this.Ok(_ethereumTransactionsStorage.GetReservedTransactions(key));
        }
        
        /// <summary>
        /// >> PublishRootContract
        /// </summary>
        [HttpGet("PublishRootContract")]
        [ProducesResponseType(typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160), 200)]
        [StorageKeyBuilder(typeof(Substrate.Aventus.NET.NetApiExt.Generated.Storage.EthereumTransactionsStorage), "PublishRootContractParams")]
        public IActionResult GetPublishRootContract()
        {
            return this.Ok(_ethereumTransactionsStorage.GetPublishRootContract());
        }
        
        /// <summary>
        /// >> Nonce
        /// </summary>
        [HttpGet("Nonce")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U64), 200)]
        [StorageKeyBuilder(typeof(Substrate.Aventus.NET.NetApiExt.Generated.Storage.EthereumTransactionsStorage), "NonceParams")]
        public IActionResult GetNonce()
        {
            return this.Ok(_ethereumTransactionsStorage.GetNonce());
        }
    }
}
