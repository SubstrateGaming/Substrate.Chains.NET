//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Aventus.NET.NetApiExt.Generated.Storage
{
    
    
    public sealed class ValidatorsManagerStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public ValidatorsManagerStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ValidatorsManager", "ValidatorAccountIds"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ValidatorsManager", "ValidatorActions"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U64>), typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ValidatorsActionData)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ValidatorsManager", "VotesRepository"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ActionId), typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ValidatorsManager", "PendingApprovals"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32), typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ValidatorsManager", "EthereumPublicKeys"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.ecdsa.Public), typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("ValidatorsManager", "TotalIngresses"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
        }
        
        /// <summary>
        /// >> ValidatorAccountIdsParams
        /// </summary>
        public static string ValidatorAccountIdsParams()
        {
            return RequestGenerator.GetStorage("ValidatorsManager", "ValidatorAccountIds", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> ValidatorAccountIdsDefault
        /// Default value as hex string
        /// </summary>
        public static string ValidatorAccountIdsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> ValidatorAccountIds
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> ValidatorAccountIds(CancellationToken token)
        {
            string parameters = ValidatorsManagerStorage.ValidatorAccountIdsParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> ValidatorActionsParams
        /// </summary>
        public static string ValidatorActionsParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U64> key)
        {
            return RequestGenerator.GetStorage("ValidatorsManager", "ValidatorActions", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> ValidatorActionsDefault
        /// Default value as hex string
        /// </summary>
        public static string ValidatorActionsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> ValidatorActions
        /// </summary>
        public async Task<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ValidatorsActionData> ValidatorActions(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U64> key, CancellationToken token)
        {
            string parameters = ValidatorsManagerStorage.ValidatorActionsParams(key);
            var result = await _client.GetStorageAsync<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ValidatorsActionData>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> VotesRepositoryParams
        /// </summary>
        public static string VotesRepositoryParams(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ActionId key)
        {
            return RequestGenerator.GetStorage("ValidatorsManager", "VotesRepository", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> VotesRepositoryDefault
        /// Default value as hex string
        /// </summary>
        public static string VotesRepositoryDefault()
        {
            return "0x00000000000000000000000000000000";
        }
        
        /// <summary>
        /// >> VotesRepository
        /// </summary>
        public async Task<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData> VotesRepository(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ActionId key, CancellationToken token)
        {
            string parameters = ValidatorsManagerStorage.VotesRepositoryParams(key);
            var result = await _client.GetStorageAsync<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> PendingApprovalsParams
        /// </summary>
        public static string PendingApprovalsParams(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
        {
            return RequestGenerator.GetStorage("ValidatorsManager", "PendingApprovals", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> PendingApprovalsDefault
        /// Default value as hex string
        /// </summary>
        public static string PendingApprovalsDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> PendingApprovals
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> PendingApprovals(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key, CancellationToken token)
        {
            string parameters = ValidatorsManagerStorage.PendingApprovalsParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> EthereumPublicKeysParams
        /// </summary>
        public static string EthereumPublicKeysParams(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.ecdsa.Public key)
        {
            return RequestGenerator.GetStorage("ValidatorsManager", "EthereumPublicKeys", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> EthereumPublicKeysDefault
        /// Default value as hex string
        /// </summary>
        public static string EthereumPublicKeysDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> EthereumPublicKeys
        /// </summary>
        public async Task<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> EthereumPublicKeys(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.ecdsa.Public key, CancellationToken token)
        {
            string parameters = ValidatorsManagerStorage.EthereumPublicKeysParams(key);
            var result = await _client.GetStorageAsync<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> TotalIngressesParams
        /// </summary>
        public static string TotalIngressesParams()
        {
            return RequestGenerator.GetStorage("ValidatorsManager", "TotalIngresses", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> TotalIngressesDefault
        /// Default value as hex string
        /// </summary>
        public static string TotalIngressesDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> TotalIngresses
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> TotalIngresses(CancellationToken token)
        {
            string parameters = ValidatorsManagerStorage.TotalIngressesParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, token);
            return result;
        }
    }
    
    public sealed class ValidatorsManagerCalls
    {
        
        /// <summary>
        /// >> add_collator
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method AddCollator(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 collator_account_id, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.ecdsa.Public collator_eth_public_key, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128> deposit)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collator_account_id.Encode());
            byteArray.AddRange(collator_eth_public_key.Encode());
            byteArray.AddRange(deposit.Encode());
            return new Method(18, "ValidatorsManager", 0, "add_collator", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> remove_validator
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method RemoveValidator(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 collator_account_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collator_account_id.Encode());
            return new Method(18, "ValidatorsManager", 1, "remove_validator", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> approve_validator_action
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method ApproveValidatorAction(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ActionId action_id, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.Validator validator, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.ecdsa.Signature approval_signature, Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.sr25519.app_sr25519.Signature signature)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(action_id.Encode());
            byteArray.AddRange(validator.Encode());
            byteArray.AddRange(approval_signature.Encode());
            byteArray.AddRange(signature.Encode());
            return new Method(18, "ValidatorsManager", 2, "approve_validator_action", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> reject_validator_action
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method RejectValidatorAction(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ActionId action_id, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.Validator validator, Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.sr25519.app_sr25519.Signature signature)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(action_id.Encode());
            byteArray.AddRange(validator.Encode());
            byteArray.AddRange(signature.Encode());
            return new Method(18, "ValidatorsManager", 3, "reject_validator_action", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> end_voting_period
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method EndVotingPeriod(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_validators_manager.ActionId action_id, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.Validator validator, Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.sr25519.app_sr25519.Signature signature)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(action_id.Encode());
            byteArray.AddRange(validator.Encode());
            byteArray.AddRange(signature.Encode());
            return new Method(18, "ValidatorsManager", 4, "end_voting_period", byteArray.ToArray());
        }
    }
    
    public sealed class ValidatorsManagerConstants
    {
    }
    
    public enum ValidatorsManagerErrors
    {
        
        /// <summary>
        /// >> NoTier1EventForAddingValidator
        /// </summary>
        NoTier1EventForAddingValidator,
        
        /// <summary>
        /// >> NoTier1EventForRemovingValidator
        /// </summary>
        NoTier1EventForRemovingValidator,
        
        /// <summary>
        /// >> NoValidators
        /// </summary>
        NoValidators,
        
        /// <summary>
        /// >> ValidatorAlreadyExists
        /// </summary>
        ValidatorAlreadyExists,
        
        /// <summary>
        /// >> InvalidIngressCounter
        /// </summary>
        InvalidIngressCounter,
        
        /// <summary>
        /// >> MinimumValidatorsReached
        /// </summary>
        MinimumValidatorsReached,
        
        /// <summary>
        /// >> ErrorEndingVotingPeriod
        /// </summary>
        ErrorEndingVotingPeriod,
        
        /// <summary>
        /// >> VotingSessionIsNotValid
        /// </summary>
        VotingSessionIsNotValid,
        
        /// <summary>
        /// >> ErrorSubmitCandidateTxnToTier1
        /// </summary>
        ErrorSubmitCandidateTxnToTier1,
        
        /// <summary>
        /// >> ErrorCalculatingPrimaryValidator
        /// </summary>
        ErrorCalculatingPrimaryValidator,
        
        /// <summary>
        /// >> ErrorGeneratingEthDescription
        /// </summary>
        ErrorGeneratingEthDescription,
        
        /// <summary>
        /// >> ValidatorsActionDataNotFound
        /// </summary>
        ValidatorsActionDataNotFound,
        
        /// <summary>
        /// >> RemovalAlreadyRequested
        /// </summary>
        RemovalAlreadyRequested,
        
        /// <summary>
        /// >> ErrorConvertingAccountIdToValidatorId
        /// </summary>
        ErrorConvertingAccountIdToValidatorId,
        
        /// <summary>
        /// >> SlashedValidatorIsNotFound
        /// </summary>
        SlashedValidatorIsNotFound,
        
        /// <summary>
        /// >> ValidatorNotFound
        /// </summary>
        ValidatorNotFound,
        
        /// <summary>
        /// >> InvalidPublicKey
        /// </summary>
        InvalidPublicKey,
        
        /// <summary>
        /// >> ValidatorEthKeyAlreadyExists
        /// The ethereum public key of this validator alredy exists
        /// </summary>
        ValidatorEthKeyAlreadyExists,
        
        /// <summary>
        /// >> ErrorRemovingAccountFromCollators
        /// </summary>
        ErrorRemovingAccountFromCollators,
    }
}
