//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Aventus.NET.NetApiExt.Generated.Storage
{
    
    
    public sealed class SummaryStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public SummaryStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Summary", "NextBlockToProcess"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Summary", "NextSlotAtBlock"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Summary", "CurrentSlot"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Summary", "CurrentSlotsValidator"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Summary", "SlotOfLastPublishedSummary"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Summary", "Roots"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootRange, Substrate.NetApi.Model.Types.Primitive.U64>), typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootData)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Summary", "VotesRepository"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootId), typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Summary", "PendingApproval"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootRange), typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Summary", "TotalIngresses"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Summary", "SchedulePeriod"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Summary", "VotingPeriod"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
        }
        
        /// <summary>
        /// >> NextBlockToProcessParams
        /// </summary>
        public static string NextBlockToProcessParams()
        {
            return RequestGenerator.GetStorage("Summary", "NextBlockToProcess", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> NextBlockToProcessDefault
        /// Default value as hex string
        /// </summary>
        public static string NextBlockToProcessDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> NextBlockToProcess
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> NextBlockToProcess(CancellationToken token)
        {
            string parameters = SummaryStorage.NextBlockToProcessParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> NextSlotAtBlockParams
        /// </summary>
        public static string NextSlotAtBlockParams()
        {
            return RequestGenerator.GetStorage("Summary", "NextSlotAtBlock", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> NextSlotAtBlockDefault
        /// Default value as hex string
        /// </summary>
        public static string NextSlotAtBlockDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> NextSlotAtBlock
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> NextSlotAtBlock(CancellationToken token)
        {
            string parameters = SummaryStorage.NextSlotAtBlockParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> CurrentSlotParams
        /// </summary>
        public static string CurrentSlotParams()
        {
            return RequestGenerator.GetStorage("Summary", "CurrentSlot", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> CurrentSlotDefault
        /// Default value as hex string
        /// </summary>
        public static string CurrentSlotDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> CurrentSlot
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> CurrentSlot(CancellationToken token)
        {
            string parameters = SummaryStorage.CurrentSlotParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> CurrentSlotsValidatorParams
        /// </summary>
        public static string CurrentSlotsValidatorParams()
        {
            return RequestGenerator.GetStorage("Summary", "CurrentSlotsValidator", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> CurrentSlotsValidatorDefault
        /// Default value as hex string
        /// </summary>
        public static string CurrentSlotsValidatorDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> CurrentSlotsValidator
        /// </summary>
        public async Task<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> CurrentSlotsValidator(CancellationToken token)
        {
            string parameters = SummaryStorage.CurrentSlotsValidatorParams();
            var result = await _client.GetStorageAsync<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> SlotOfLastPublishedSummaryParams
        /// </summary>
        public static string SlotOfLastPublishedSummaryParams()
        {
            return RequestGenerator.GetStorage("Summary", "SlotOfLastPublishedSummary", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> SlotOfLastPublishedSummaryDefault
        /// Default value as hex string
        /// </summary>
        public static string SlotOfLastPublishedSummaryDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> SlotOfLastPublishedSummary
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> SlotOfLastPublishedSummary(CancellationToken token)
        {
            string parameters = SummaryStorage.SlotOfLastPublishedSummaryParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> RootsParams
        /// </summary>
        public static string RootsParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootRange, Substrate.NetApi.Model.Types.Primitive.U64> key)
        {
            return RequestGenerator.GetStorage("Summary", "Roots", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> RootsDefault
        /// Default value as hex string
        /// </summary>
        public static string RootsDefault()
        {
            return "0x000000000000000000000000000000000000000000000000000000000000000000000000";
        }
        
        /// <summary>
        /// >> Roots
        /// </summary>
        public async Task<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootData> Roots(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootRange, Substrate.NetApi.Model.Types.Primitive.U64> key, CancellationToken token)
        {
            string parameters = SummaryStorage.RootsParams(key);
            var result = await _client.GetStorageAsync<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootData>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> VotesRepositoryParams
        /// </summary>
        public static string VotesRepositoryParams(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootId key)
        {
            return RequestGenerator.GetStorage("Summary", "VotesRepository", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> VotesRepositoryDefault
        /// Default value as hex string
        /// </summary>
        public static string VotesRepositoryDefault()
        {
            return "0x00000000000000000000000000000000";
        }
        
        /// <summary>
        /// >> VotesRepository
        /// </summary>
        public async Task<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData> VotesRepository(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootId key, CancellationToken token)
        {
            string parameters = SummaryStorage.VotesRepositoryParams(key);
            var result = await _client.GetStorageAsync<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.vote.VotingSessionData>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> PendingApprovalParams
        /// </summary>
        public static string PendingApprovalParams(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootRange key)
        {
            return RequestGenerator.GetStorage("Summary", "PendingApproval", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> PendingApprovalDefault
        /// Default value as hex string
        /// </summary>
        public static string PendingApprovalDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> PendingApproval
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> PendingApproval(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootRange key, CancellationToken token)
        {
            string parameters = SummaryStorage.PendingApprovalParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> TotalIngressesParams
        ///  The total ingresses of roots
        /// </summary>
        public static string TotalIngressesParams()
        {
            return RequestGenerator.GetStorage("Summary", "TotalIngresses", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> TotalIngressesDefault
        /// Default value as hex string
        /// </summary>
        public static string TotalIngressesDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> TotalIngresses
        ///  The total ingresses of roots
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> TotalIngresses(CancellationToken token)
        {
            string parameters = SummaryStorage.TotalIngressesParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> SchedulePeriodParams
        ///  A period (in block number) where summaries are calculated
        /// </summary>
        public static string SchedulePeriodParams()
        {
            return RequestGenerator.GetStorage("Summary", "SchedulePeriod", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> SchedulePeriodDefault
        /// Default value as hex string
        /// </summary>
        public static string SchedulePeriodDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> SchedulePeriod
        ///  A period (in block number) where summaries are calculated
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> SchedulePeriod(CancellationToken token)
        {
            string parameters = SummaryStorage.SchedulePeriodParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> VotingPeriodParams
        ///  A period (in block number) where validators are allowed to vote on the validity of a root
        ///  hash
        /// </summary>
        public static string VotingPeriodParams()
        {
            return RequestGenerator.GetStorage("Summary", "VotingPeriod", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> VotingPeriodDefault
        /// Default value as hex string
        /// </summary>
        public static string VotingPeriodDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> VotingPeriod
        ///  A period (in block number) where validators are allowed to vote on the validity of a root
        ///  hash
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> VotingPeriod(CancellationToken token)
        {
            string parameters = SummaryStorage.VotingPeriodParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, token);
            return result;
        }
    }
    
    public sealed class SummaryCalls
    {
        
        /// <summary>
        /// >> set_periods
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method SetPeriods(Substrate.NetApi.Model.Types.Primitive.U32 schedule_period_in_blocks, Substrate.NetApi.Model.Types.Primitive.U32 voting_period_in_blocks)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(schedule_period_in_blocks.Encode());
            byteArray.AddRange(voting_period_in_blocks.Encode());
            return new Method(88, "Summary", 0, "set_periods", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> record_summary_calculation
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method RecordSummaryCalculation(Substrate.NetApi.Model.Types.Primitive.U32 new_block_number, Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H256 root_hash, Substrate.NetApi.Model.Types.Primitive.U64 ingress_counter, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.Validator validator, Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.sr25519.app_sr25519.Signature signature)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(new_block_number.Encode());
            byteArray.AddRange(root_hash.Encode());
            byteArray.AddRange(ingress_counter.Encode());
            byteArray.AddRange(validator.Encode());
            byteArray.AddRange(signature.Encode());
            return new Method(88, "Summary", 1, "record_summary_calculation", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> approve_root
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method ApproveRoot(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootId root_id, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.Validator validator, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.ecdsa.Signature approval_signature, Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.sr25519.app_sr25519.Signature signature)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(root_id.Encode());
            byteArray.AddRange(validator.Encode());
            byteArray.AddRange(approval_signature.Encode());
            byteArray.AddRange(signature.Encode());
            return new Method(88, "Summary", 2, "approve_root", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> reject_root
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method RejectRoot(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootId root_id, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.Validator validator, Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.sr25519.app_sr25519.Signature signature)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(root_id.Encode());
            byteArray.AddRange(validator.Encode());
            byteArray.AddRange(signature.Encode());
            return new Method(88, "Summary", 3, "reject_root", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> end_voting_period
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method EndVotingPeriod(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.RootId root_id, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.Validator validator, Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.sr25519.app_sr25519.Signature signature)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(root_id.Encode());
            byteArray.AddRange(validator.Encode());
            byteArray.AddRange(signature.Encode());
            return new Method(88, "Summary", 4, "end_voting_period", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> advance_slot
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method AdvanceSlot(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.Validator validator, Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.sr25519.app_sr25519.Signature signature)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(validator.Encode());
            byteArray.AddRange(signature.Encode());
            return new Method(88, "Summary", 5, "advance_slot", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> add_challenge
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method AddChallenge(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_summary.challenge.SummaryChallenge challenge, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.Validator validator, Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.sr25519.app_sr25519.Signature signature)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(challenge.Encode());
            byteArray.AddRange(validator.Encode());
            byteArray.AddRange(signature.Encode());
            return new Method(88, "Summary", 6, "add_challenge", byteArray.ToArray());
        }
    }
    
    public sealed class SummaryConstants
    {
    }
    
    public enum SummaryErrors
    {
        
        /// <summary>
        /// >> Overflow
        /// </summary>
        Overflow,
        
        /// <summary>
        /// >> ErrorCalculatingChosenValidator
        /// </summary>
        ErrorCalculatingChosenValidator,
        
        /// <summary>
        /// >> ErrorConvertingBlockNumber
        /// </summary>
        ErrorConvertingBlockNumber,
        
        /// <summary>
        /// >> ErrorGettingSummaryDataFromService
        /// </summary>
        ErrorGettingSummaryDataFromService,
        
        /// <summary>
        /// >> InvalidSummaryRange
        /// </summary>
        InvalidSummaryRange,
        
        /// <summary>
        /// >> ErrorSubmittingTransaction
        /// </summary>
        ErrorSubmittingTransaction,
        
        /// <summary>
        /// >> InvalidKey
        /// </summary>
        InvalidKey,
        
        /// <summary>
        /// >> ErrorSigning
        /// </summary>
        ErrorSigning,
        
        /// <summary>
        /// >> InvalidHexString
        /// </summary>
        InvalidHexString,
        
        /// <summary>
        /// >> InvalidUTF8Bytes
        /// </summary>
        InvalidUTF8Bytes,
        
        /// <summary>
        /// >> InvalidRootHashLength
        /// </summary>
        InvalidRootHashLength,
        
        /// <summary>
        /// >> SummaryPendingOrApproved
        /// </summary>
        SummaryPendingOrApproved,
        
        /// <summary>
        /// >> RootHasAlreadyBeenRegisteredForVoting
        /// </summary>
        RootHasAlreadyBeenRegisteredForVoting,
        
        /// <summary>
        /// >> InvalidRoot
        /// </summary>
        InvalidRoot,
        
        /// <summary>
        /// >> DuplicateVote
        /// </summary>
        DuplicateVote,
        
        /// <summary>
        /// >> ErrorEndingVotingPeriod
        /// </summary>
        ErrorEndingVotingPeriod,
        
        /// <summary>
        /// >> ErrorSubmitCandidateTxnToTier1
        /// </summary>
        ErrorSubmitCandidateTxnToTier1,
        
        /// <summary>
        /// >> VotingSessionIsNotValid
        /// </summary>
        VotingSessionIsNotValid,
        
        /// <summary>
        /// >> ErrorRecoveringPublicKeyFromSignature
        /// </summary>
        ErrorRecoveringPublicKeyFromSignature,
        
        /// <summary>
        /// >> ECDSASignatureNotValid
        /// </summary>
        ECDSASignatureNotValid,
        
        /// <summary>
        /// >> RootDataNotFound
        /// </summary>
        RootDataNotFound,
        
        /// <summary>
        /// >> InvalidChallenge
        /// </summary>
        InvalidChallenge,
        
        /// <summary>
        /// >> WrongValidator
        /// </summary>
        WrongValidator,
        
        /// <summary>
        /// >> GracePeriodElapsed
        /// </summary>
        GracePeriodElapsed,
        
        /// <summary>
        /// >> TooEarlyToAdvance
        /// </summary>
        TooEarlyToAdvance,
        
        /// <summary>
        /// >> InvalidIngressCounter
        /// </summary>
        InvalidIngressCounter,
        
        /// <summary>
        /// >> SchedulePeriodIsTooShort
        /// </summary>
        SchedulePeriodIsTooShort,
        
        /// <summary>
        /// >> VotingPeriodIsTooShort
        /// </summary>
        VotingPeriodIsTooShort,
        
        /// <summary>
        /// >> VotingPeriodIsTooLong
        /// </summary>
        VotingPeriodIsTooLong,
        
        /// <summary>
        /// >> VotingPeriodIsLessThanFinalityReportLatency
        /// </summary>
        VotingPeriodIsLessThanFinalityReportLatency,
        
        /// <summary>
        /// >> VotingPeriodIsEqualOrLongerThanSchedulePeriod
        /// </summary>
        VotingPeriodIsEqualOrLongerThanSchedulePeriod,
        
        /// <summary>
        /// >> CurrentSlotValidatorNotFound
        /// </summary>
        CurrentSlotValidatorNotFound,
    }
}
