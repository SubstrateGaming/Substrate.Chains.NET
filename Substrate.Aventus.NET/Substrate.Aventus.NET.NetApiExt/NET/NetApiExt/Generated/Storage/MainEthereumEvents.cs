//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Aventus.NET.NetApiExt.Generated.Storage
{
    
    
    public sealed class EthereumEventsStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public EthereumEventsStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumEvents", "ValidatorManagerContractAddress"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumEvents", "LiftingContractAddress"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumEvents", "TotalIngresses"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumEvents", "UncheckedEvents"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>>)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumEvents", "EventsPendingChallenge"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventCheckResult, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>>)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumEvents", "ProcessedEvents"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId), typeof(Substrate.NetApi.Model.Types.Primitive.Bool)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumEvents", "Challenges"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId), typeof(Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumEvents", "QuorumFactor"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumEvents", "EventChallengePeriod"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumEvents", "NftT1Contracts"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160), typeof(Substrate.NetApi.Model.Types.Base.BaseTuple)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumEvents", "ProxyNonces"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32), typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumEvents", "StorageVersion"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_ethereum_events.EnumReleases)));
        }
        
        /// <summary>
        /// >> ValidatorManagerContractAddressParams
        /// </summary>
        public static string ValidatorManagerContractAddressParams()
        {
            return RequestGenerator.GetStorage("EthereumEvents", "ValidatorManagerContractAddress", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> ValidatorManagerContractAddressDefault
        /// Default value as hex string
        /// </summary>
        public static string ValidatorManagerContractAddressDefault()
        {
            return "0x0000000000000000000000000000000000000000";
        }
        
        /// <summary>
        /// >> ValidatorManagerContractAddress
        /// </summary>
        public async Task<Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160> ValidatorManagerContractAddress(CancellationToken token)
        {
            string parameters = EthereumEventsStorage.ValidatorManagerContractAddressParams();
            var result = await _client.GetStorageAsync<Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> LiftingContractAddressParams
        /// </summary>
        public static string LiftingContractAddressParams()
        {
            return RequestGenerator.GetStorage("EthereumEvents", "LiftingContractAddress", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> LiftingContractAddressDefault
        /// Default value as hex string
        /// </summary>
        public static string LiftingContractAddressDefault()
        {
            return "0x0000000000000000000000000000000000000000";
        }
        
        /// <summary>
        /// >> LiftingContractAddress
        /// </summary>
        public async Task<Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160> LiftingContractAddress(CancellationToken token)
        {
            string parameters = EthereumEventsStorage.LiftingContractAddressParams();
            var result = await _client.GetStorageAsync<Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> TotalIngressesParams
        /// </summary>
        public static string TotalIngressesParams()
        {
            return RequestGenerator.GetStorage("EthereumEvents", "TotalIngresses", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> TotalIngressesDefault
        /// Default value as hex string
        /// </summary>
        public static string TotalIngressesDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> TotalIngresses
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> TotalIngresses(CancellationToken token)
        {
            string parameters = EthereumEventsStorage.TotalIngressesParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> UncheckedEventsParams
        /// </summary>
        public static string UncheckedEventsParams()
        {
            return RequestGenerator.GetStorage("EthereumEvents", "UncheckedEvents", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> UncheckedEventsDefault
        /// Default value as hex string
        /// </summary>
        public static string UncheckedEventsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> UncheckedEvents
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>>> UncheckedEvents(CancellationToken token)
        {
            string parameters = EthereumEventsStorage.UncheckedEventsParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>>>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> EventsPendingChallengeParams
        /// </summary>
        public static string EventsPendingChallengeParams()
        {
            return RequestGenerator.GetStorage("EthereumEvents", "EventsPendingChallenge", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> EventsPendingChallengeDefault
        /// Default value as hex string
        /// </summary>
        public static string EventsPendingChallengeDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> EventsPendingChallenge
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventCheckResult, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>>> EventsPendingChallenge(CancellationToken token)
        {
            string parameters = EthereumEventsStorage.EventsPendingChallengeParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventCheckResult, Substrate.NetApi.Model.Types.Primitive.U64, Substrate.NetApi.Model.Types.Primitive.U32>>>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> ProcessedEventsParams
        /// </summary>
        public static string ProcessedEventsParams(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId key)
        {
            return RequestGenerator.GetStorage("EthereumEvents", "ProcessedEvents", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> ProcessedEventsDefault
        /// Default value as hex string
        /// </summary>
        public static string ProcessedEventsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> ProcessedEvents
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.Bool> ProcessedEvents(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId key, CancellationToken token)
        {
            string parameters = EthereumEventsStorage.ProcessedEventsParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.Bool>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> ChallengesParams
        /// </summary>
        public static string ChallengesParams(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId key)
        {
            return RequestGenerator.GetStorage("EthereumEvents", "Challenges", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> ChallengesDefault
        /// Default value as hex string
        /// </summary>
        public static string ChallengesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Challenges
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>> Challenges(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId key, CancellationToken token)
        {
            string parameters = EthereumEventsStorage.ChallengesParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> QuorumFactorParams
        /// </summary>
        public static string QuorumFactorParams()
        {
            return RequestGenerator.GetStorage("EthereumEvents", "QuorumFactor", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> QuorumFactorDefault
        /// Default value as hex string
        /// </summary>
        public static string QuorumFactorDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> QuorumFactor
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> QuorumFactor(CancellationToken token)
        {
            string parameters = EthereumEventsStorage.QuorumFactorParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> EventChallengePeriodParams
        /// </summary>
        public static string EventChallengePeriodParams()
        {
            return RequestGenerator.GetStorage("EthereumEvents", "EventChallengePeriod", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> EventChallengePeriodDefault
        /// Default value as hex string
        /// </summary>
        public static string EventChallengePeriodDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> EventChallengePeriod
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> EventChallengePeriod(CancellationToken token)
        {
            string parameters = EthereumEventsStorage.EventChallengePeriodParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> NftT1ContractsParams
        /// </summary>
        public static string NftT1ContractsParams(Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160 key)
        {
            return RequestGenerator.GetStorage("EthereumEvents", "NftT1Contracts", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> NftT1ContractsDefault
        /// Default value as hex string
        /// </summary>
        public static string NftT1ContractsDefault()
        {
            return "0x";
        }
        
        /// <summary>
        /// >> NftT1Contracts
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseTuple> NftT1Contracts(Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160 key, CancellationToken token)
        {
            string parameters = EthereumEventsStorage.NftT1ContractsParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseTuple>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> ProxyNoncesParams
        /// </summary>
        public static string ProxyNoncesParams(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
        {
            return RequestGenerator.GetStorage("EthereumEvents", "ProxyNonces", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> ProxyNoncesDefault
        /// Default value as hex string
        /// </summary>
        public static string ProxyNoncesDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> ProxyNonces
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> ProxyNonces(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key, CancellationToken token)
        {
            string parameters = EthereumEventsStorage.ProxyNoncesParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> StorageVersionParams
        /// </summary>
        public static string StorageVersionParams()
        {
            return RequestGenerator.GetStorage("EthereumEvents", "StorageVersion", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> StorageVersionDefault
        /// Default value as hex string
        /// </summary>
        public static string StorageVersionDefault()
        {
            return "0x02";
        }
        
        /// <summary>
        /// >> StorageVersion
        /// </summary>
        public async Task<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_ethereum_events.EnumReleases> StorageVersion(CancellationToken token)
        {
            string parameters = EthereumEventsStorage.StorageVersionParams();
            var result = await _client.GetStorageAsync<Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_ethereum_events.EnumReleases>(parameters, token);
            return result;
        }
    }
    
    public sealed class EthereumEventsCalls
    {
        
        /// <summary>
        /// >> add_validator_log
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method AddValidatorLog(Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H256 tx_hash)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(tx_hash.Encode());
            return new Method(84, "EthereumEvents", 0, "add_validator_log", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> add_lift_log
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method AddLiftLog(Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H256 tx_hash)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(tx_hash.Encode());
            return new Method(84, "EthereumEvents", 1, "add_lift_log", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> submit_checkevent_result
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method SubmitCheckeventResult(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventCheckResult result, Substrate.NetApi.Model.Types.Primitive.U64 ingress_counter, Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.sr25519.app_sr25519.Signature signature, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.Validator validator)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(result.Encode());
            byteArray.AddRange(ingress_counter.Encode());
            byteArray.AddRange(signature.Encode());
            byteArray.AddRange(validator.Encode());
            return new Method(84, "EthereumEvents", 2, "submit_checkevent_result", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> process_event
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method ProcessEvent(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EthEventId event_id, Substrate.NetApi.Model.Types.Primitive.U64 ingress_counter, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.Validator validator, Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.sr25519.app_sr25519.Signature signature)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(event_id.Encode());
            byteArray.AddRange(ingress_counter.Encode());
            byteArray.AddRange(validator.Encode());
            byteArray.AddRange(signature.Encode());
            return new Method(84, "EthereumEvents", 3, "process_event", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> challenge_event
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method ChallengeEvent(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.Challenge challenge, Substrate.NetApi.Model.Types.Primitive.U64 ingress_counter, Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_avn.sr25519.app_sr25519.Signature signature, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.Validator validator)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(challenge.Encode());
            byteArray.AddRange(ingress_counter.Encode());
            byteArray.AddRange(signature.Encode());
            byteArray.AddRange(validator.Encode());
            return new Method(84, "EthereumEvents", 4, "challenge_event", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> add_ethereum_log
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method AddEthereumLog(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EnumValidEvents event_type, Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H256 tx_hash)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(event_type.Encode());
            byteArray.AddRange(tx_hash.Encode());
            return new Method(84, "EthereumEvents", 5, "add_ethereum_log", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> signed_add_ethereum_log
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method SignedAddEthereumLog(Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.Proof proof, Substrate.Aventus.NET.NetApiExt.Generated.Model.sp_avn_common.event_types.EnumValidEvents event_type, Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H256 tx_hash)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(proof.Encode());
            byteArray.AddRange(event_type.Encode());
            byteArray.AddRange(tx_hash.Encode());
            return new Method(84, "EthereumEvents", 6, "signed_add_ethereum_log", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_ethereum_contract
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method SetEthereumContract(Substrate.Aventus.NET.NetApiExt.Generated.Model.pallet_ethereum_events.EnumEthereumContracts contract_type, Substrate.Aventus.NET.NetApiExt.Generated.Model.primitive_types.H160 contract_address)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(contract_type.Encode());
            byteArray.AddRange(contract_address.Encode());
            return new Method(84, "EthereumEvents", 7, "set_ethereum_contract", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_event_challenge_period
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method SetEventChallengePeriod(Substrate.NetApi.Model.Types.Primitive.U32 event_challenge_period_in_blocks)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(event_challenge_period_in_blocks.Encode());
            return new Method(84, "EthereumEvents", 8, "set_event_challenge_period", byteArray.ToArray());
        }
    }
    
    public sealed class EthereumEventsConstants
    {
    }
    
    public enum EthereumEventsErrors
    {
        
        /// <summary>
        /// >> DuplicateEvent
        /// </summary>
        DuplicateEvent,
        
        /// <summary>
        /// >> MissingEventToCheck
        /// </summary>
        MissingEventToCheck,
        
        /// <summary>
        /// >> UnrecognizedEventSignature
        /// </summary>
        UnrecognizedEventSignature,
        
        /// <summary>
        /// >> EventParsingFailed
        /// </summary>
        EventParsingFailed,
        
        /// <summary>
        /// >> ErrorSigning
        /// </summary>
        ErrorSigning,
        
        /// <summary>
        /// >> ErrorSubmittingTransaction
        /// </summary>
        ErrorSubmittingTransaction,
        
        /// <summary>
        /// >> InvalidKey
        /// </summary>
        InvalidKey,
        
        /// <summary>
        /// >> PendingChallengeEventNotFound
        /// </summary>
        PendingChallengeEventNotFound,
        
        /// <summary>
        /// >> InvalidEventToChallenge
        /// </summary>
        InvalidEventToChallenge,
        
        /// <summary>
        /// >> Overflow
        /// </summary>
        Overflow,
        
        /// <summary>
        /// >> DuplicateChallenge
        /// </summary>
        DuplicateChallenge,
        
        /// <summary>
        /// >> ErrorSavingValidationToLocalDB
        /// </summary>
        ErrorSavingValidationToLocalDB,
        
        /// <summary>
        /// >> MalformedHash
        /// </summary>
        MalformedHash,
        
        /// <summary>
        /// >> InvalidEventToProcess
        /// </summary>
        InvalidEventToProcess,
        
        /// <summary>
        /// >> ChallengingOwnEvent
        /// </summary>
        ChallengingOwnEvent,
        
        /// <summary>
        /// >> InvalidContractAddress
        /// </summary>
        InvalidContractAddress,
        
        /// <summary>
        /// >> InvalidContractType
        /// </summary>
        InvalidContractType,
        
        /// <summary>
        /// >> InvalidEventChallengePeriod
        /// </summary>
        InvalidEventChallengePeriod,
        
        /// <summary>
        /// >> SenderIsNotSigner
        /// </summary>
        SenderIsNotSigner,
        
        /// <summary>
        /// >> UnauthorizedTransaction
        /// </summary>
        UnauthorizedTransaction,
        
        /// <summary>
        /// >> UnauthorizedSignedAddEthereumLogTransaction
        /// </summary>
        UnauthorizedSignedAddEthereumLogTransaction,
    }
}
