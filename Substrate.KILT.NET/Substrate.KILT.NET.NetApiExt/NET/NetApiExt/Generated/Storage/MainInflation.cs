//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.KILT.NET.NetApiExt.Generated.Storage
{
    
    
    public sealed class InflationStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public InflationStorage(SubstrateClientExt client)
        {
            this._client = client;
        }
    }
    
    public sealed class InflationCalls
    {
    }
    
    public sealed class InflationConstants
    {
        
        /// <summary>
        /// >> InitialPeriodLength
        ///  The length of the initial period in which the constant reward is
        ///  minted. Once the current block exceeds this, rewards are no further
        ///  issued.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 InitialPeriodLength()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U64();
            result.Create("0x48A3C80000000000");
            return result;
        }
        
        /// <summary>
        /// >> InitialPeriodReward
        ///  The amount of newly issued tokens per block during the initial
        ///  period.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 InitialPeriodReward()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U128();
            result.Create("0x36F539FDAEB302000000000000000000");
            return result;
        }
    }
}
