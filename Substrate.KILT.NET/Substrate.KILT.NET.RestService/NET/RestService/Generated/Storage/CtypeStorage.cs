//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.KILT.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// ICtypeStorage interface definition.
    /// </summary>
    public interface ICtypeStorage : IStorage
    {
        
        /// <summary>
        /// >> Ctypes
        ///  CTypes stored on chain.
        /// 
        ///  It maps from a CType hash to its creator and block number in which it
        ///  was created.
        /// </summary>
        Substrate.KILT.NET.NetApiExt.Generated.Model.ctype.ctype_entry.CtypeEntry GetCtypes(string key);
    }
    
    /// <summary>
    /// CtypeStorage class definition.
    /// </summary>
    public sealed class CtypeStorage : ICtypeStorage
    {
        
        /// <summary>
        /// _ctypesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.KILT.NET.NetApiExt.Generated.Model.ctype.ctype_entry.CtypeEntry> _ctypesTypedStorage;
        
        /// <summary>
        /// CtypeStorage constructor.
        /// </summary>
        public CtypeStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.CtypesTypedStorage = new TypedMapStorage<Substrate.KILT.NET.NetApiExt.Generated.Model.ctype.ctype_entry.CtypeEntry>("Ctype.Ctypes", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _ctypesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.KILT.NET.NetApiExt.Generated.Model.ctype.ctype_entry.CtypeEntry> CtypesTypedStorage
        {
            get
            {
                return _ctypesTypedStorage;
            }
            set
            {
                _ctypesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await CtypesTypedStorage.InitializeAsync("Ctype", "Ctypes");
        }
        
        /// <summary>
        /// Implements any storage change for Ctype.Ctypes
        /// </summary>
        [StorageChange("Ctype", "Ctypes")]
        public void OnUpdateCtypes(string key, string data)
        {
            CtypesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Ctypes
        ///  CTypes stored on chain.
        /// 
        ///  It maps from a CType hash to its creator and block number in which it
        ///  was created.
        /// </summary>
        public Substrate.KILT.NET.NetApiExt.Generated.Model.ctype.ctype_entry.CtypeEntry GetCtypes(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (CtypesTypedStorage.Dictionary.TryGetValue(key, out Substrate.KILT.NET.NetApiExt.Generated.Model.ctype.ctype_entry.CtypeEntry result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
