//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.Moonbeam.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Moonbeam.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// MoonbeamOrbitersController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class MoonbeamOrbitersController : ControllerBase
    {
        
        private IMoonbeamOrbitersStorage _moonbeamOrbitersStorage;
        
        /// <summary>
        /// MoonbeamOrbitersController constructor.
        /// </summary>
        public MoonbeamOrbitersController(IMoonbeamOrbitersStorage moonbeamOrbitersStorage)
        {
            _moonbeamOrbitersStorage = moonbeamOrbitersStorage;
        }
        
        /// <summary>
        /// >> AccountLookupOverride
        ///  Account lookup override
        /// </summary>
        [HttpGet("AccountLookupOverride")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Moonbeam.NET.NetApiExt.Generated.Model.account.AccountId20>), 200)]
        [StorageKeyBuilder(typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Storage.MoonbeamOrbitersStorage), "AccountLookupOverrideParams", typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Model.account.AccountId20))]
        public IActionResult GetAccountLookupOverride(string key)
        {
            return this.Ok(_moonbeamOrbitersStorage.GetAccountLookupOverride(key));
        }
        
        /// <summary>
        /// >> CollatorsPool
        ///  Current orbiters, with their "parent" collator
        /// </summary>
        [HttpGet("CollatorsPool")]
        [ProducesResponseType(typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Model.pallet_moonbeam_orbiters.types.CollatorPoolInfo), 200)]
        [StorageKeyBuilder(typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Storage.MoonbeamOrbitersStorage), "CollatorsPoolParams", typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Model.account.AccountId20))]
        public IActionResult GetCollatorsPool(string key)
        {
            return this.Ok(_moonbeamOrbitersStorage.GetCollatorsPool(key));
        }
        
        /// <summary>
        /// >> CounterForCollatorsPool
        /// Counter for the related counted storage map
        /// </summary>
        [HttpGet("CounterForCollatorsPool")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Storage.MoonbeamOrbitersStorage), "CounterForCollatorsPoolParams")]
        public IActionResult GetCounterForCollatorsPool()
        {
            return this.Ok(_moonbeamOrbitersStorage.GetCounterForCollatorsPool());
        }
        
        /// <summary>
        /// >> CurrentRound
        ///  Current round index
        /// </summary>
        [HttpGet("CurrentRound")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Storage.MoonbeamOrbitersStorage), "CurrentRoundParams")]
        public IActionResult GetCurrentRound()
        {
            return this.Ok(_moonbeamOrbitersStorage.GetCurrentRound());
        }
        
        /// <summary>
        /// >> ForceRotation
        ///  If true, it forces the rotation at the next round.
        ///  A use case: when changing RotatePeriod, you need a migration code that sets this value to
        ///  true to avoid holes in OrbiterPerRound.
        /// </summary>
        [HttpGet("ForceRotation")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.Bool), 200)]
        [StorageKeyBuilder(typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Storage.MoonbeamOrbitersStorage), "ForceRotationParams")]
        public IActionResult GetForceRotation()
        {
            return this.Ok(_moonbeamOrbitersStorage.GetForceRotation());
        }
        
        /// <summary>
        /// >> MinOrbiterDeposit
        ///  Minimum deposit required to be registered as an orbiter
        /// </summary>
        [HttpGet("MinOrbiterDeposit")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Storage.MoonbeamOrbitersStorage), "MinOrbiterDepositParams")]
        public IActionResult GetMinOrbiterDeposit()
        {
            return this.Ok(_moonbeamOrbitersStorage.GetMinOrbiterDeposit());
        }
        
        /// <summary>
        /// >> OrbiterPerRound
        ///  Store active orbiter per round and per parent collator
        /// </summary>
        [HttpGet("OrbiterPerRound")]
        [ProducesResponseType(typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Model.account.AccountId20), 200)]
        [StorageKeyBuilder(typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Storage.MoonbeamOrbitersStorage), "OrbiterPerRoundParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Moonbeam.NET.NetApiExt.Generated.Model.account.AccountId20>))]
        public IActionResult GetOrbiterPerRound(string key)
        {
            return this.Ok(_moonbeamOrbitersStorage.GetOrbiterPerRound(key));
        }
        
        /// <summary>
        /// >> RegisteredOrbiter
        ///  Check if account is an orbiter
        /// </summary>
        [HttpGet("RegisteredOrbiter")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.Bool), 200)]
        [StorageKeyBuilder(typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Storage.MoonbeamOrbitersStorage), "RegisteredOrbiterParams", typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Model.account.AccountId20))]
        public IActionResult GetRegisteredOrbiter(string key)
        {
            return this.Ok(_moonbeamOrbitersStorage.GetRegisteredOrbiter(key));
        }
    }
}
