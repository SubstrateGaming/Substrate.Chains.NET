//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Moonbeam.NET.NetApiExt.Generated.Storage
{
    
    
    public sealed class RandomnessStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public RandomnessStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Randomness", "Requests"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Primitive.U64), typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Model.pallet_randomness.types.RequestState)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Randomness", "RequestCount"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Randomness", "LocalVrfOutput"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Moonbeam.NET.NetApiExt.Generated.Model.primitive_types.H256>)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Randomness", "RelayEpoch"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Randomness", "InherentIncluded"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Randomness", "NotFirstBlock"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Randomness", "RandomnessResults"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Model.pallet_randomness.types.EnumRequestType), typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Model.pallet_randomness.types.RandomnessResult)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Randomness", "PreviousLocalVrfOutput"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.Moonbeam.NET.NetApiExt.Generated.Model.primitive_types.H256)));
        }
        
        /// <summary>
        /// >> RequestsParams
        ///  Randomness requests not yet fulfilled or purged
        /// </summary>
        public static string RequestsParams(Substrate.NetApi.Model.Types.Primitive.U64 key)
        {
            return RequestGenerator.GetStorage("Randomness", "Requests", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> RequestsDefault
        /// Default value as hex string
        /// </summary>
        public static string RequestsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Requests
        ///  Randomness requests not yet fulfilled or purged
        /// </summary>
        public async Task<Substrate.Moonbeam.NET.NetApiExt.Generated.Model.pallet_randomness.types.RequestState> Requests(Substrate.NetApi.Model.Types.Primitive.U64 key, CancellationToken token)
        {
            string parameters = RandomnessStorage.RequestsParams(key);
            var result = await _client.GetStorageAsync<Substrate.Moonbeam.NET.NetApiExt.Generated.Model.pallet_randomness.types.RequestState>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> RequestCountParams
        ///  Number of randomness requests made so far, used to generate the next request's uid
        /// </summary>
        public static string RequestCountParams()
        {
            return RequestGenerator.GetStorage("Randomness", "RequestCount", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> RequestCountDefault
        /// Default value as hex string
        /// </summary>
        public static string RequestCountDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> RequestCount
        ///  Number of randomness requests made so far, used to generate the next request's uid
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> RequestCount(CancellationToken token)
        {
            string parameters = RandomnessStorage.RequestCountParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> LocalVrfOutputParams
        ///  Current local per-block VRF randomness
        ///  Set in `on_initialize`
        /// </summary>
        public static string LocalVrfOutputParams()
        {
            return RequestGenerator.GetStorage("Randomness", "LocalVrfOutput", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> LocalVrfOutputDefault
        /// Default value as hex string
        /// </summary>
        public static string LocalVrfOutputDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> LocalVrfOutput
        ///  Current local per-block VRF randomness
        ///  Set in `on_initialize`
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Moonbeam.NET.NetApiExt.Generated.Model.primitive_types.H256>> LocalVrfOutput(CancellationToken token)
        {
            string parameters = RandomnessStorage.LocalVrfOutputParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Moonbeam.NET.NetApiExt.Generated.Model.primitive_types.H256>>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> RelayEpochParams
        ///  Relay epoch
        /// </summary>
        public static string RelayEpochParams()
        {
            return RequestGenerator.GetStorage("Randomness", "RelayEpoch", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> RelayEpochDefault
        /// Default value as hex string
        /// </summary>
        public static string RelayEpochDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> RelayEpoch
        ///  Relay epoch
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> RelayEpoch(CancellationToken token)
        {
            string parameters = RandomnessStorage.RelayEpochParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> InherentIncludedParams
        ///  Ensures the mandatory inherent was included in the block
        /// </summary>
        public static string InherentIncludedParams()
        {
            return RequestGenerator.GetStorage("Randomness", "InherentIncluded", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> InherentIncludedDefault
        /// Default value as hex string
        /// </summary>
        public static string InherentIncludedDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> InherentIncluded
        ///  Ensures the mandatory inherent was included in the block
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseTuple> InherentIncluded(CancellationToken token)
        {
            string parameters = RandomnessStorage.InherentIncludedParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseTuple>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> NotFirstBlockParams
        ///  Records whether this is the first block (genesis or runtime upgrade)
        /// </summary>
        public static string NotFirstBlockParams()
        {
            return RequestGenerator.GetStorage("Randomness", "NotFirstBlock", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> NotFirstBlockDefault
        /// Default value as hex string
        /// </summary>
        public static string NotFirstBlockDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> NotFirstBlock
        ///  Records whether this is the first block (genesis or runtime upgrade)
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseTuple> NotFirstBlock(CancellationToken token)
        {
            string parameters = RandomnessStorage.NotFirstBlockParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseTuple>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> RandomnessResultsParams
        ///  Snapshot of randomness to fulfill all requests that are for the same raw randomness
        ///  Removed once $value.request_count == 0
        /// </summary>
        public static string RandomnessResultsParams(Substrate.Moonbeam.NET.NetApiExt.Generated.Model.pallet_randomness.types.EnumRequestType key)
        {
            return RequestGenerator.GetStorage("Randomness", "RandomnessResults", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> RandomnessResultsDefault
        /// Default value as hex string
        /// </summary>
        public static string RandomnessResultsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> RandomnessResults
        ///  Snapshot of randomness to fulfill all requests that are for the same raw randomness
        ///  Removed once $value.request_count == 0
        /// </summary>
        public async Task<Substrate.Moonbeam.NET.NetApiExt.Generated.Model.pallet_randomness.types.RandomnessResult> RandomnessResults(Substrate.Moonbeam.NET.NetApiExt.Generated.Model.pallet_randomness.types.EnumRequestType key, CancellationToken token)
        {
            string parameters = RandomnessStorage.RandomnessResultsParams(key);
            var result = await _client.GetStorageAsync<Substrate.Moonbeam.NET.NetApiExt.Generated.Model.pallet_randomness.types.RandomnessResult>(parameters, token);
            return result;
        }
        
        /// <summary>
        /// >> PreviousLocalVrfOutputParams
        ///  Previous local per-block VRF randomness
        ///  Set in `on_finalize` of last block
        /// </summary>
        public static string PreviousLocalVrfOutputParams()
        {
            return RequestGenerator.GetStorage("Randomness", "PreviousLocalVrfOutput", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> PreviousLocalVrfOutputDefault
        /// Default value as hex string
        /// </summary>
        public static string PreviousLocalVrfOutputDefault()
        {
            return "0x0000000000000000000000000000000000000000000000000000000000000000";
        }
        
        /// <summary>
        /// >> PreviousLocalVrfOutput
        ///  Previous local per-block VRF randomness
        ///  Set in `on_finalize` of last block
        /// </summary>
        public async Task<Substrate.Moonbeam.NET.NetApiExt.Generated.Model.primitive_types.H256> PreviousLocalVrfOutput(CancellationToken token)
        {
            string parameters = RandomnessStorage.PreviousLocalVrfOutputParams();
            var result = await _client.GetStorageAsync<Substrate.Moonbeam.NET.NetApiExt.Generated.Model.primitive_types.H256>(parameters, token);
            return result;
        }
    }
    
    public sealed class RandomnessCalls
    {
        
        /// <summary>
        /// >> set_babe_randomness_results
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method SetBabeRandomnessResults()
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            return new Method(120, "Randomness", 0, "set_babe_randomness_results", byteArray.ToArray());
        }
    }
    
    public sealed class RandomnessConstants
    {
        
        /// <summary>
        /// >> Deposit
        ///  The amount that should be taken as a security deposit when requesting randomness.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 Deposit()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U128();
            result.Create("0x000010632D5EC76B0500000000000000");
            return result;
        }
        
        /// <summary>
        /// >> MaxRandomWords
        ///  Maximum number of random words that can be requested per request
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U8 MaxRandomWords()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U8();
            result.Create("0x64");
            return result;
        }
        
        /// <summary>
        /// >> MinBlockDelay
        ///  Local per-block VRF requests must be at least this many blocks after the block in which
        ///  they were requested
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MinBlockDelay()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x02000000");
            return result;
        }
        
        /// <summary>
        /// >> MaxBlockDelay
        ///  Local per-block VRF requests must be at most this many blocks after the block in which
        ///  they were requested
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MaxBlockDelay()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0xD0070000");
            return result;
        }
        
        /// <summary>
        /// >> BlockExpirationDelay
        ///  Local requests expire and can be purged from storage after this many blocks/epochs
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 BlockExpirationDelay()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U32();
            result.Create("0x10270000");
            return result;
        }
        
        /// <summary>
        /// >> EpochExpirationDelay
        ///  Babe requests expire and can be purged from storage after this many blocks/epochs
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 EpochExpirationDelay()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U64();
            result.Create("0x1027000000000000");
            return result;
        }
    }
    
    public enum RandomnessErrors
    {
        
        /// <summary>
        /// >> RequestCounterOverflowed
        /// </summary>
        RequestCounterOverflowed,
        
        /// <summary>
        /// >> RequestFeeOverflowed
        /// </summary>
        RequestFeeOverflowed,
        
        /// <summary>
        /// >> MustRequestAtLeastOneWord
        /// </summary>
        MustRequestAtLeastOneWord,
        
        /// <summary>
        /// >> CannotRequestMoreWordsThanMax
        /// </summary>
        CannotRequestMoreWordsThanMax,
        
        /// <summary>
        /// >> CannotRequestRandomnessAfterMaxDelay
        /// </summary>
        CannotRequestRandomnessAfterMaxDelay,
        
        /// <summary>
        /// >> CannotRequestRandomnessBeforeMinDelay
        /// </summary>
        CannotRequestRandomnessBeforeMinDelay,
        
        /// <summary>
        /// >> RequestDNE
        /// </summary>
        RequestDNE,
        
        /// <summary>
        /// >> RequestCannotYetBeFulfilled
        /// </summary>
        RequestCannotYetBeFulfilled,
        
        /// <summary>
        /// >> OnlyRequesterCanIncreaseFee
        /// </summary>
        OnlyRequesterCanIncreaseFee,
        
        /// <summary>
        /// >> RequestHasNotExpired
        /// </summary>
        RequestHasNotExpired,
        
        /// <summary>
        /// >> RandomnessResultDNE
        /// </summary>
        RandomnessResultDNE,
        
        /// <summary>
        /// >> RandomnessResultNotFilled
        /// </summary>
        RandomnessResultNotFilled,
    }
}
