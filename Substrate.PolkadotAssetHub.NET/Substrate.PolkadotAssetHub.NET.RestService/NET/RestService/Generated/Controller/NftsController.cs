//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.NetApi.Model.Types.Base;
using Substrate.PolkadotAssetHub.NET.RestService.Generated.Storage;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.PolkadotAssetHub.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// NftsController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class NftsController : ControllerBase
    {
        
        private INftsStorage _nftsStorage;
        
        /// <summary>
        /// NftsController constructor.
        /// </summary>
        public NftsController(INftsStorage nftsStorage)
        {
            _nftsStorage = nftsStorage;
        }
        
        /// <summary>
        /// >> Collection
        ///  Details of a collection.
        /// </summary>
        [HttpGet("Collection")]
        [ProducesResponseType(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.pallet_nfts.types.CollectionDetails), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "CollectionParams", typeof(Substrate.NetApi.Model.Types.Primitive.U32))]
        public IActionResult GetCollection(string key)
        {
            return this.Ok(_nftsStorage.GetCollection(key));
        }
        
        /// <summary>
        /// >> OwnershipAcceptance
        ///  The collection, if any, of which an account is willing to take ownership.
        /// </summary>
        [HttpGet("OwnershipAcceptance")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "OwnershipAcceptanceParams", typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32))]
        public IActionResult GetOwnershipAcceptance(string key)
        {
            return this.Ok(_nftsStorage.GetOwnershipAcceptance(key));
        }
        
        /// <summary>
        /// >> Account
        ///  The items held by any given account; set out this way so that items owned by a single
        ///  account can be enumerated.
        /// </summary>
        [HttpGet("Account")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseTuple), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "AccountParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>))]
        public IActionResult GetAccount(string key)
        {
            return this.Ok(_nftsStorage.GetAccount(key));
        }
        
        /// <summary>
        /// >> CollectionAccount
        ///  The collections owned by any given account; set out this way so that collections owned by
        ///  a single account can be enumerated.
        /// </summary>
        [HttpGet("CollectionAccount")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseTuple), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "CollectionAccountParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U32>))]
        public IActionResult GetCollectionAccount(string key)
        {
            return this.Ok(_nftsStorage.GetCollectionAccount(key));
        }
        
        /// <summary>
        /// >> CollectionRoleOf
        ///  The items in existence and their ownership details.
        ///  Stores collection roles as per account.
        /// </summary>
        [HttpGet("CollectionRoleOf")]
        [ProducesResponseType(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.pallet_nfts.types.BitFlagsT3), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "CollectionRoleOfParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>))]
        public IActionResult GetCollectionRoleOf(string key)
        {
            return this.Ok(_nftsStorage.GetCollectionRoleOf(key));
        }
        
        /// <summary>
        /// >> Item
        ///  The items in existence and their ownership details.
        /// </summary>
        [HttpGet("Item")]
        [ProducesResponseType(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.pallet_nfts.types.ItemDetails), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "ItemParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>))]
        public IActionResult GetItem(string key)
        {
            return this.Ok(_nftsStorage.GetItem(key));
        }
        
        /// <summary>
        /// >> CollectionMetadataOf
        ///  Metadata of a collection.
        /// </summary>
        [HttpGet("CollectionMetadataOf")]
        [ProducesResponseType(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.pallet_nfts.types.CollectionMetadata), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "CollectionMetadataOfParams", typeof(Substrate.NetApi.Model.Types.Primitive.U32))]
        public IActionResult GetCollectionMetadataOf(string key)
        {
            return this.Ok(_nftsStorage.GetCollectionMetadataOf(key));
        }
        
        /// <summary>
        /// >> ItemMetadataOf
        ///  Metadata of an item.
        /// </summary>
        [HttpGet("ItemMetadataOf")]
        [ProducesResponseType(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.pallet_nfts.types.ItemMetadata), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "ItemMetadataOfParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>))]
        public IActionResult GetItemMetadataOf(string key)
        {
            return this.Ok(_nftsStorage.GetItemMetadataOf(key));
        }
        
        /// <summary>
        /// >> Attribute
        ///  Attributes of a collection.
        /// </summary>
        [HttpGet("Attribute")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT7, Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.pallet_nfts.types.AttributeDeposit>), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "AttributeParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>, Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.pallet_nfts.types.EnumAttributeNamespace, Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT6>))]
        public IActionResult GetAttribute(string key)
        {
            return this.Ok(_nftsStorage.GetAttribute(key));
        }
        
        /// <summary>
        /// >> ItemPriceOf
        ///  A price of an item.
        /// </summary>
        [HttpGet("ItemPriceOf")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U128, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>>), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "ItemPriceOfParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>))]
        public IActionResult GetItemPriceOf(string key)
        {
            return this.Ok(_nftsStorage.GetItemPriceOf(key));
        }
        
        /// <summary>
        /// >> ItemAttributesApprovalsOf
        ///  Item attribute approvals.
        /// </summary>
        [HttpGet("ItemAttributesApprovalsOf")]
        [ProducesResponseType(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT2), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "ItemAttributesApprovalsOfParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>))]
        public IActionResult GetItemAttributesApprovalsOf(string key)
        {
            return this.Ok(_nftsStorage.GetItemAttributesApprovalsOf(key));
        }
        
        /// <summary>
        /// >> NextCollectionId
        ///  Stores the `CollectionId` that is going to be used for the next collection.
        ///  This gets incremented whenever a new collection is created.
        /// </summary>
        [HttpGet("NextCollectionId")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "NextCollectionIdParams")]
        public IActionResult GetNextCollectionId()
        {
            return this.Ok(_nftsStorage.GetNextCollectionId());
        }
        
        /// <summary>
        /// >> PendingSwapOf
        ///  Handles all the pending swaps.
        /// </summary>
        [HttpGet("PendingSwapOf")]
        [ProducesResponseType(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.pallet_nfts.types.PendingSwap), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "PendingSwapOfParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>))]
        public IActionResult GetPendingSwapOf(string key)
        {
            return this.Ok(_nftsStorage.GetPendingSwapOf(key));
        }
        
        /// <summary>
        /// >> CollectionConfigOf
        ///  Config of a collection.
        /// </summary>
        [HttpGet("CollectionConfigOf")]
        [ProducesResponseType(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.pallet_nfts.types.CollectionConfig), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "CollectionConfigOfParams", typeof(Substrate.NetApi.Model.Types.Primitive.U32))]
        public IActionResult GetCollectionConfigOf(string key)
        {
            return this.Ok(_nftsStorage.GetCollectionConfigOf(key));
        }
        
        /// <summary>
        /// >> ItemConfigOf
        ///  Config of an item.
        /// </summary>
        [HttpGet("ItemConfigOf")]
        [ProducesResponseType(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.pallet_nfts.types.ItemConfig), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.NftsStorage), "ItemConfigOfParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32>))]
        public IActionResult GetItemConfigOf(string key)
        {
            return this.Ok(_nftsStorage.GetItemConfigOf(key));
        }
    }
}
