//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.NetApi.Model.Types.Base;
using Substrate.PolkadotAssetHub.NET.RestService.Generated.Storage;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.PolkadotAssetHub.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// ToKusamaXcmRouterController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class ToKusamaXcmRouterController : ControllerBase
    {
        
        private IToKusamaXcmRouterStorage _toKusamaXcmRouterStorage;
        
        /// <summary>
        /// ToKusamaXcmRouterController constructor.
        /// </summary>
        public ToKusamaXcmRouterController(IToKusamaXcmRouterStorage toKusamaXcmRouterStorage)
        {
            _toKusamaXcmRouterStorage = toKusamaXcmRouterStorage;
        }
        
        /// <summary>
        /// >> Bridge
        ///  Bridge that we are using.
        /// 
        ///  **bridges-v1** assumptions: all outbound messages through this router are using single lane
        ///  and to single remote consensus. If there is some other remote consensus that uses the same
        ///  bridge hub, the separate pallet instance shall be used, In `v2` we'll have all required
        ///  primitives (lane-id aka bridge-id, derived from XCM locations) to support multiple  bridges
        ///  by the same pallet instance.
        /// </summary>
        [HttpGet("Bridge")]
        [ProducesResponseType(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Model.bp_xcm_bridge_hub_router.BridgeState), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotAssetHub.NET.NetApiExt.Generated.Storage.ToKusamaXcmRouterStorage), "BridgeParams")]
        public IActionResult GetBridge()
        {
            return this.Ok(_toKusamaXcmRouterStorage.GetBridge());
        }
    }
}
