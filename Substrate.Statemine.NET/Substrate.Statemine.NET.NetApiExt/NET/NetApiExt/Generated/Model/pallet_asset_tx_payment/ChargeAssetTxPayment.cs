//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.Statemine.NET.NetApiExt.Generated.Model.pallet_asset_tx_payment
{
    
    
    /// <summary>
    /// >> 389 - Composite[pallet_asset_tx_payment.ChargeAssetTxPayment]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class ChargeAssetTxPayment : BaseType
    {
        
        /// <summary>
        /// >> tip
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Model.Types.Primitive.U128> _tip;
        
        /// <summary>
        /// >> asset_id
        /// </summary>
        private Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> _assetId;
        
        public Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Model.Types.Primitive.U128> Tip
        {
            get
            {
                return this._tip;
            }
            set
            {
                this._tip = value;
            }
        }
        
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> AssetId
        {
            get
            {
                return this._assetId;
            }
            set
            {
                this._assetId = value;
            }
        }
        
        public override string TypeName()
        {
            return "ChargeAssetTxPayment";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Tip.Encode());
            result.AddRange(AssetId.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Tip = new Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Model.Types.Primitive.U128>();
            Tip.Decode(byteArray, ref p);
            AssetId = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            AssetId.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
