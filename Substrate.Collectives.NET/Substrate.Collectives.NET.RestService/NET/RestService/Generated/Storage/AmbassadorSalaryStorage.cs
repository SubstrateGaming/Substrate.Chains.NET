//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Collectives.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IAmbassadorSalaryStorage interface definition.
    /// </summary>
    public interface IAmbassadorSalaryStorage : IStorage
    {
        
        /// <summary>
        /// >> Status
        ///  The overall status of the system.
        /// </summary>
        Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_salary.StatusType GetStatus();
        
        /// <summary>
        /// >> Claimant
        ///  The status of a claimant.
        /// </summary>
        Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_salary.ClaimantStatus GetClaimant(string key);
    }
    
    /// <summary>
    /// AmbassadorSalaryStorage class definition.
    /// </summary>
    public sealed class AmbassadorSalaryStorage : IAmbassadorSalaryStorage
    {
        
        /// <summary>
        /// _statusTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_salary.StatusType> _statusTypedStorage;
        
        /// <summary>
        /// _claimantTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_salary.ClaimantStatus> _claimantTypedStorage;
        
        /// <summary>
        /// AmbassadorSalaryStorage constructor.
        /// </summary>
        public AmbassadorSalaryStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.StatusTypedStorage = new TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_salary.StatusType>("AmbassadorSalary.Status", storageDataProvider, storageChangeDelegates);
            this.ClaimantTypedStorage = new TypedMapStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_salary.ClaimantStatus>("AmbassadorSalary.Claimant", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _statusTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_salary.StatusType> StatusTypedStorage
        {
            get
            {
                return _statusTypedStorage;
            }
            set
            {
                _statusTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _claimantTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_salary.ClaimantStatus> ClaimantTypedStorage
        {
            get
            {
                return _claimantTypedStorage;
            }
            set
            {
                _claimantTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await StatusTypedStorage.InitializeAsync("AmbassadorSalary", "Status");
            await ClaimantTypedStorage.InitializeAsync("AmbassadorSalary", "Claimant");
        }
        
        /// <summary>
        /// Implements any storage change for AmbassadorSalary.Status
        /// </summary>
        [StorageChange("AmbassadorSalary", "Status")]
        public void OnUpdateStatus(string data)
        {
            StatusTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Status
        ///  The overall status of the system.
        /// </summary>
        public Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_salary.StatusType GetStatus()
        {
            return StatusTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for AmbassadorSalary.Claimant
        /// </summary>
        [StorageChange("AmbassadorSalary", "Claimant")]
        public void OnUpdateClaimant(string key, string data)
        {
            ClaimantTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Claimant
        ///  The status of a claimant.
        /// </summary>
        public Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_salary.ClaimantStatus GetClaimant(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ClaimantTypedStorage.Dictionary.TryGetValue(key, out Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_salary.ClaimantStatus result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
