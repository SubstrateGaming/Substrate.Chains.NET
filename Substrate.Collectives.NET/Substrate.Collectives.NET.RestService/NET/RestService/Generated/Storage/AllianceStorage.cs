//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Collectives.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IAllianceStorage interface definition.
    /// </summary>
    public interface IAllianceStorage : IStorage
    {
        
        /// <summary>
        /// >> Rule
        ///  The IPFS CID of the alliance rule.
        ///  Fellows can propose a new rule with a super-majority.
        /// </summary>
        Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_alliance.types.Cid GetRule();
        
        /// <summary>
        /// >> Announcements
        ///  The current IPFS CIDs of any announcements.
        /// </summary>
        Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT19 GetAnnouncements();
        
        /// <summary>
        /// >> DepositOf
        ///  Maps members to their candidacy deposit.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U128 GetDepositOf(string key);
        
        /// <summary>
        /// >> Members
        ///  Maps member type to members of each type.
        /// </summary>
        Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT9 GetMembers(string key);
        
        /// <summary>
        /// >> RetiringMembers
        ///  A set of members who gave a retirement notice. They can retire after the end of retirement
        ///  period stored as a future block number.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetRetiringMembers(string key);
        
        /// <summary>
        /// >> UnscrupulousAccounts
        ///  The current list of accounts deemed unscrupulous. These accounts non grata cannot submit
        ///  candidacy.
        /// </summary>
        Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT9 GetUnscrupulousAccounts();
        
        /// <summary>
        /// >> UnscrupulousWebsites
        ///  The current list of websites deemed unscrupulous.
        /// </summary>
        Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT20 GetUnscrupulousWebsites();
    }
    
    /// <summary>
    /// AllianceStorage class definition.
    /// </summary>
    public sealed class AllianceStorage : IAllianceStorage
    {
        
        /// <summary>
        /// _ruleTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_alliance.types.Cid> _ruleTypedStorage;
        
        /// <summary>
        /// _announcementsTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT19> _announcementsTypedStorage;
        
        /// <summary>
        /// _depositOfTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U128> _depositOfTypedStorage;
        
        /// <summary>
        /// _membersTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT9> _membersTypedStorage;
        
        /// <summary>
        /// _retiringMembersTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> _retiringMembersTypedStorage;
        
        /// <summary>
        /// _unscrupulousAccountsTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT9> _unscrupulousAccountsTypedStorage;
        
        /// <summary>
        /// _unscrupulousWebsitesTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT20> _unscrupulousWebsitesTypedStorage;
        
        /// <summary>
        /// AllianceStorage constructor.
        /// </summary>
        public AllianceStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.RuleTypedStorage = new TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_alliance.types.Cid>("Alliance.Rule", storageDataProvider, storageChangeDelegates);
            this.AnnouncementsTypedStorage = new TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT19>("Alliance.Announcements", storageDataProvider, storageChangeDelegates);
            this.DepositOfTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U128>("Alliance.DepositOf", storageDataProvider, storageChangeDelegates);
            this.MembersTypedStorage = new TypedMapStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT9>("Alliance.Members", storageDataProvider, storageChangeDelegates);
            this.RetiringMembersTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Alliance.RetiringMembers", storageDataProvider, storageChangeDelegates);
            this.UnscrupulousAccountsTypedStorage = new TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT9>("Alliance.UnscrupulousAccounts", storageDataProvider, storageChangeDelegates);
            this.UnscrupulousWebsitesTypedStorage = new TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT20>("Alliance.UnscrupulousWebsites", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _ruleTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_alliance.types.Cid> RuleTypedStorage
        {
            get
            {
                return _ruleTypedStorage;
            }
            set
            {
                _ruleTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _announcementsTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT19> AnnouncementsTypedStorage
        {
            get
            {
                return _announcementsTypedStorage;
            }
            set
            {
                _announcementsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _depositOfTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U128> DepositOfTypedStorage
        {
            get
            {
                return _depositOfTypedStorage;
            }
            set
            {
                _depositOfTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _membersTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT9> MembersTypedStorage
        {
            get
            {
                return _membersTypedStorage;
            }
            set
            {
                _membersTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _retiringMembersTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> RetiringMembersTypedStorage
        {
            get
            {
                return _retiringMembersTypedStorage;
            }
            set
            {
                _retiringMembersTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _unscrupulousAccountsTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT9> UnscrupulousAccountsTypedStorage
        {
            get
            {
                return _unscrupulousAccountsTypedStorage;
            }
            set
            {
                _unscrupulousAccountsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _unscrupulousWebsitesTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT20> UnscrupulousWebsitesTypedStorage
        {
            get
            {
                return _unscrupulousWebsitesTypedStorage;
            }
            set
            {
                _unscrupulousWebsitesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await RuleTypedStorage.InitializeAsync("Alliance", "Rule");
            await AnnouncementsTypedStorage.InitializeAsync("Alliance", "Announcements");
            await DepositOfTypedStorage.InitializeAsync("Alliance", "DepositOf");
            await MembersTypedStorage.InitializeAsync("Alliance", "Members");
            await RetiringMembersTypedStorage.InitializeAsync("Alliance", "RetiringMembers");
            await UnscrupulousAccountsTypedStorage.InitializeAsync("Alliance", "UnscrupulousAccounts");
            await UnscrupulousWebsitesTypedStorage.InitializeAsync("Alliance", "UnscrupulousWebsites");
        }
        
        /// <summary>
        /// Implements any storage change for Alliance.Rule
        /// </summary>
        [StorageChange("Alliance", "Rule")]
        public void OnUpdateRule(string data)
        {
            RuleTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Rule
        ///  The IPFS CID of the alliance rule.
        ///  Fellows can propose a new rule with a super-majority.
        /// </summary>
        public Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_alliance.types.Cid GetRule()
        {
            return RuleTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Alliance.Announcements
        /// </summary>
        [StorageChange("Alliance", "Announcements")]
        public void OnUpdateAnnouncements(string data)
        {
            AnnouncementsTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Announcements
        ///  The current IPFS CIDs of any announcements.
        /// </summary>
        public Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT19 GetAnnouncements()
        {
            return AnnouncementsTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Alliance.DepositOf
        /// </summary>
        [StorageChange("Alliance", "DepositOf")]
        public void OnUpdateDepositOf(string key, string data)
        {
            DepositOfTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> DepositOf
        ///  Maps members to their candidacy deposit.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 GetDepositOf(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (DepositOfTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U128 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Alliance.Members
        /// </summary>
        [StorageChange("Alliance", "Members")]
        public void OnUpdateMembers(string key, string data)
        {
            MembersTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Members
        ///  Maps member type to members of each type.
        /// </summary>
        public Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT9 GetMembers(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (MembersTypedStorage.Dictionary.TryGetValue(key, out Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT9 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Alliance.RetiringMembers
        /// </summary>
        [StorageChange("Alliance", "RetiringMembers")]
        public void OnUpdateRetiringMembers(string key, string data)
        {
            RetiringMembersTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> RetiringMembers
        ///  A set of members who gave a retirement notice. They can retire after the end of retirement
        ///  period stored as a future block number.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetRetiringMembers(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (RetiringMembersTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Alliance.UnscrupulousAccounts
        /// </summary>
        [StorageChange("Alliance", "UnscrupulousAccounts")]
        public void OnUpdateUnscrupulousAccounts(string data)
        {
            UnscrupulousAccountsTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> UnscrupulousAccounts
        ///  The current list of accounts deemed unscrupulous. These accounts non grata cannot submit
        ///  candidacy.
        /// </summary>
        public Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT9 GetUnscrupulousAccounts()
        {
            return UnscrupulousAccountsTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Alliance.UnscrupulousWebsites
        /// </summary>
        [StorageChange("Alliance", "UnscrupulousWebsites")]
        public void OnUpdateUnscrupulousWebsites(string data)
        {
            UnscrupulousWebsitesTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> UnscrupulousWebsites
        ///  The current list of websites deemed unscrupulous.
        /// </summary>
        public Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT20 GetUnscrupulousWebsites()
        {
            return UnscrupulousWebsitesTypedStorage.Get();
        }
    }
}
