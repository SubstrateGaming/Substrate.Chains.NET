//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Collectives.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_ranked_collective;
   using Substrate.Collectives.NET.NetApiExt.Generated.Model.sp_core.crypto;
   using Substrate.Collectives.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec;
   using Substrate.Collectives.NET.RestClient.Generated.Interfaces;
   
   public sealed class AmbassadorCollectiveControllerClient : BaseClient, IAmbassadorCollectiveControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public AmbassadorCollectiveControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<U32> GetMemberCount(U16 key)
      {
         return await SendRequestAsync<U32>(_httpClient, "ambassadorcollective/membercount", Substrate.Collectives.NET.NetApiExt.Generated.Storage.AmbassadorCollectiveStorage.MemberCountParams(key));
      }
      public async Task<bool> SubscribeMemberCount(U16 key)
      {
         return await _subscriptionClient.SubscribeAsync("AmbassadorCollective.MemberCount", Substrate.Collectives.NET.NetApiExt.Generated.Storage.AmbassadorCollectiveStorage.MemberCountParams(key));
      }
      public async Task<MemberRecord> GetMembers(AccountId32 key)
      {
         return await SendRequestAsync<MemberRecord>(_httpClient, "ambassadorcollective/members", Substrate.Collectives.NET.NetApiExt.Generated.Storage.AmbassadorCollectiveStorage.MembersParams(key));
      }
      public async Task<bool> SubscribeMembers(AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("AmbassadorCollective.Members", Substrate.Collectives.NET.NetApiExt.Generated.Storage.AmbassadorCollectiveStorage.MembersParams(key));
      }
      public async Task<U32> GetIdToIndex(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, AccountId32> key)
      {
         return await SendRequestAsync<U32>(_httpClient, "ambassadorcollective/idtoindex", Substrate.Collectives.NET.NetApiExt.Generated.Storage.AmbassadorCollectiveStorage.IdToIndexParams(key));
      }
      public async Task<bool> SubscribeIdToIndex(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, AccountId32> key)
      {
         return await _subscriptionClient.SubscribeAsync("AmbassadorCollective.IdToIndex", Substrate.Collectives.NET.NetApiExt.Generated.Storage.AmbassadorCollectiveStorage.IdToIndexParams(key));
      }
      public async Task<AccountId32> GetIndexToId(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await SendRequestAsync<AccountId32>(_httpClient, "ambassadorcollective/indextoid", Substrate.Collectives.NET.NetApiExt.Generated.Storage.AmbassadorCollectiveStorage.IndexToIdParams(key));
      }
      public async Task<bool> SubscribeIndexToId(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("AmbassadorCollective.IndexToId", Substrate.Collectives.NET.NetApiExt.Generated.Storage.AmbassadorCollectiveStorage.IndexToIdParams(key));
      }
      public async Task<EnumVoteRecord> GetVoting(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, AccountId32> key)
      {
         return await SendRequestAsync<EnumVoteRecord>(_httpClient, "ambassadorcollective/voting", Substrate.Collectives.NET.NetApiExt.Generated.Storage.AmbassadorCollectiveStorage.VotingParams(key));
      }
      public async Task<bool> SubscribeVoting(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, AccountId32> key)
      {
         return await _subscriptionClient.SubscribeAsync("AmbassadorCollective.Voting", Substrate.Collectives.NET.NetApiExt.Generated.Storage.AmbassadorCollectiveStorage.VotingParams(key));
      }
      public async Task<BoundedVecT36> GetVotingCleanup(U32 key)
      {
         return await SendRequestAsync<BoundedVecT36>(_httpClient, "ambassadorcollective/votingcleanup", Substrate.Collectives.NET.NetApiExt.Generated.Storage.AmbassadorCollectiveStorage.VotingCleanupParams(key));
      }
      public async Task<bool> SubscribeVotingCleanup(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("AmbassadorCollective.VotingCleanup", Substrate.Collectives.NET.NetApiExt.Generated.Storage.AmbassadorCollectiveStorage.VotingCleanupParams(key));
      }
   }
}
