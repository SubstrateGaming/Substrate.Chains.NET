//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Collectives.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Collectives.NET.NetApiExt.Generated.Model.pallet_salary;
   using Substrate.Collectives.NET.RestClient.Generated.Interfaces;
   
   public sealed class FellowshipSalaryControllerClient : BaseClient, IFellowshipSalaryControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public FellowshipSalaryControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<StatusType> GetStatus()
      {
         return await SendRequestAsync<StatusType>(_httpClient, "fellowshipsalary/status");
      }
      public async Task<bool> SubscribeStatus()
      {
         return await _subscriptionClient.SubscribeAsync("FellowshipSalary.Status");
      }
      public async Task<ClaimantStatus> GetClaimant(Substrate.Collectives.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await SendRequestAsync<ClaimantStatus>(_httpClient, "fellowshipsalary/claimant", Substrate.Collectives.NET.NetApiExt.Generated.Storage.FellowshipSalaryStorage.ClaimantParams(key));
      }
      public async Task<bool> SubscribeClaimant(Substrate.Collectives.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("FellowshipSalary.Claimant", Substrate.Collectives.NET.NetApiExt.Generated.Storage.FellowshipSalaryStorage.ClaimantParams(key));
      }
   }
}
