//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Moonsama.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_assets.types;
   using Substrate.Moonsama.NET.RestClient.Generated.Interfaces;
   
   public sealed class LocalAssetsControllerClient : BaseClient, ILocalAssetsControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public LocalAssetsControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<AssetDetails> GetAsset(Substrate.NetApi.Model.Types.Primitive.U128 key)
      {
         return await SendRequestAsync<AssetDetails>(_httpClient, "localassets/asset", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.LocalAssetsStorage.AssetParams(key));
      }
      public async Task<bool> SubscribeAsset(Substrate.NetApi.Model.Types.Primitive.U128 key)
      {
         return await _subscriptionClient.SubscribeAsync("LocalAssets.Asset", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.LocalAssetsStorage.AssetParams(key));
      }
      public async Task<AssetAccount> GetAccount(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U128, Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20> key)
      {
         return await SendRequestAsync<AssetAccount>(_httpClient, "localassets/account", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.LocalAssetsStorage.AccountParams(key));
      }
      public async Task<bool> SubscribeAccount(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U128, Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20> key)
      {
         return await _subscriptionClient.SubscribeAsync("LocalAssets.Account", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.LocalAssetsStorage.AccountParams(key));
      }
      public async Task<Approval> GetApprovals(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U128, Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20, Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20> key)
      {
         return await SendRequestAsync<Approval>(_httpClient, "localassets/approvals", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.LocalAssetsStorage.ApprovalsParams(key));
      }
      public async Task<bool> SubscribeApprovals(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U128, Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20, Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20> key)
      {
         return await _subscriptionClient.SubscribeAsync("LocalAssets.Approvals", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.LocalAssetsStorage.ApprovalsParams(key));
      }
      public async Task<AssetMetadata> GetMetadata(Substrate.NetApi.Model.Types.Primitive.U128 key)
      {
         return await SendRequestAsync<AssetMetadata>(_httpClient, "localassets/metadata", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.LocalAssetsStorage.MetadataParams(key));
      }
      public async Task<bool> SubscribeMetadata(Substrate.NetApi.Model.Types.Primitive.U128 key)
      {
         return await _subscriptionClient.SubscribeAsync("LocalAssets.Metadata", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.LocalAssetsStorage.MetadataParams(key));
      }
   }
}
