//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Moonsama.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_crowdloan_rewards.pallet;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.Moonsama.NET.RestClient.Generated.Interfaces;
   
   public sealed class CrowdloanRewardsControllerClient : BaseClient, ICrowdloanRewardsControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public CrowdloanRewardsControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<RewardInfo> GetAccountsPayable(Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20 key)
      {
         return await SendRequestAsync<RewardInfo>(_httpClient, "crowdloanrewards/accountspayable", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.CrowdloanRewardsStorage.AccountsPayableParams(key));
      }
      public async Task<bool> SubscribeAccountsPayable(Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20 key)
      {
         return await _subscriptionClient.SubscribeAsync("CrowdloanRewards.AccountsPayable", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.CrowdloanRewardsStorage.AccountsPayableParams(key));
      }
      public async Task<BaseTuple> GetClaimedRelayChainIds(Substrate.Moonsama.NET.NetApiExt.Generated.Types.Base.Arr32U8 key)
      {
         return await SendRequestAsync<BaseTuple>(_httpClient, "crowdloanrewards/claimedrelaychainids", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.CrowdloanRewardsStorage.ClaimedRelayChainIdsParams(key));
      }
      public async Task<bool> SubscribeClaimedRelayChainIds(Substrate.Moonsama.NET.NetApiExt.Generated.Types.Base.Arr32U8 key)
      {
         return await _subscriptionClient.SubscribeAsync("CrowdloanRewards.ClaimedRelayChainIds", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.CrowdloanRewardsStorage.ClaimedRelayChainIdsParams(key));
      }
      public async Task<RewardInfo> GetUnassociatedContributions(Substrate.Moonsama.NET.NetApiExt.Generated.Types.Base.Arr32U8 key)
      {
         return await SendRequestAsync<RewardInfo>(_httpClient, "crowdloanrewards/unassociatedcontributions", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.CrowdloanRewardsStorage.UnassociatedContributionsParams(key));
      }
      public async Task<bool> SubscribeUnassociatedContributions(Substrate.Moonsama.NET.NetApiExt.Generated.Types.Base.Arr32U8 key)
      {
         return await _subscriptionClient.SubscribeAsync("CrowdloanRewards.UnassociatedContributions", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.CrowdloanRewardsStorage.UnassociatedContributionsParams(key));
      }
      public async Task<Bool> GetInitialized()
      {
         return await SendRequestAsync<Bool>(_httpClient, "crowdloanrewards/initialized");
      }
      public async Task<bool> SubscribeInitialized()
      {
         return await _subscriptionClient.SubscribeAsync("CrowdloanRewards.Initialized");
      }
      public async Task<U32> GetInitRelayBlock()
      {
         return await SendRequestAsync<U32>(_httpClient, "crowdloanrewards/initrelayblock");
      }
      public async Task<bool> SubscribeInitRelayBlock()
      {
         return await _subscriptionClient.SubscribeAsync("CrowdloanRewards.InitRelayBlock");
      }
      public async Task<U32> GetEndRelayBlock()
      {
         return await SendRequestAsync<U32>(_httpClient, "crowdloanrewards/endrelayblock");
      }
      public async Task<bool> SubscribeEndRelayBlock()
      {
         return await _subscriptionClient.SubscribeAsync("CrowdloanRewards.EndRelayBlock");
      }
      public async Task<U128> GetInitializedRewardAmount()
      {
         return await SendRequestAsync<U128>(_httpClient, "crowdloanrewards/initializedrewardamount");
      }
      public async Task<bool> SubscribeInitializedRewardAmount()
      {
         return await _subscriptionClient.SubscribeAsync("CrowdloanRewards.InitializedRewardAmount");
      }
      public async Task<U32> GetTotalContributors()
      {
         return await SendRequestAsync<U32>(_httpClient, "crowdloanrewards/totalcontributors");
      }
      public async Task<bool> SubscribeTotalContributors()
      {
         return await _subscriptionClient.SubscribeAsync("CrowdloanRewards.TotalContributors");
      }
   }
}
