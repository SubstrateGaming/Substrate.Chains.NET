//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Moonsama.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Moonsama.NET.NetApiExt.Generated.Model.moonsama_runtime.xcm_config;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_asset_manager.pallet;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.Moonsama.NET.RestClient.Generated.Interfaces;
   
   public sealed class AssetManagerControllerClient : BaseClient, IAssetManagerControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public AssetManagerControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<EnumAssetType> GetAssetIdType(U128 key)
      {
         return await SendRequestAsync<EnumAssetType>(_httpClient, "assetmanager/assetidtype", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.AssetManagerStorage.AssetIdTypeParams(key));
      }
      public async Task<bool> SubscribeAssetIdType(U128 key)
      {
         return await _subscriptionClient.SubscribeAsync("AssetManager.AssetIdType", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.AssetManagerStorage.AssetIdTypeParams(key));
      }
      public async Task<U128> GetAssetTypeId(EnumAssetType key)
      {
         return await SendRequestAsync<U128>(_httpClient, "assetmanager/assettypeid", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.AssetManagerStorage.AssetTypeIdParams(key));
      }
      public async Task<bool> SubscribeAssetTypeId(EnumAssetType key)
      {
         return await _subscriptionClient.SubscribeAsync("AssetManager.AssetTypeId", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.AssetManagerStorage.AssetTypeIdParams(key));
      }
      public async Task<U128> GetAssetTypeUnitsPerSecond(EnumAssetType key)
      {
         return await SendRequestAsync<U128>(_httpClient, "assetmanager/assettypeunitspersecond", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.AssetManagerStorage.AssetTypeUnitsPerSecondParams(key));
      }
      public async Task<bool> SubscribeAssetTypeUnitsPerSecond(EnumAssetType key)
      {
         return await _subscriptionClient.SubscribeAsync("AssetManager.AssetTypeUnitsPerSecond", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.AssetManagerStorage.AssetTypeUnitsPerSecondParams(key));
      }
      public async Task<U128> GetLocalAssetCounter()
      {
         return await SendRequestAsync<U128>(_httpClient, "assetmanager/localassetcounter");
      }
      public async Task<bool> SubscribeLocalAssetCounter()
      {
         return await _subscriptionClient.SubscribeAsync("AssetManager.LocalAssetCounter");
      }
      public async Task<AssetInfo> GetLocalAssetDeposit(U128 key)
      {
         return await SendRequestAsync<AssetInfo>(_httpClient, "assetmanager/localassetdeposit", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.AssetManagerStorage.LocalAssetDepositParams(key));
      }
      public async Task<bool> SubscribeLocalAssetDeposit(U128 key)
      {
         return await _subscriptionClient.SubscribeAsync("AssetManager.LocalAssetDeposit", Substrate.Moonsama.NET.NetApiExt.Generated.Storage.AssetManagerStorage.LocalAssetDepositParams(key));
      }
      public async Task<BaseVec<EnumAssetType>> GetSupportedFeePaymentAssets()
      {
         return await SendRequestAsync<BaseVec<EnumAssetType>>(_httpClient, "assetmanager/supportedfeepaymentassets");
      }
      public async Task<bool> SubscribeSupportedFeePaymentAssets()
      {
         return await _subscriptionClient.SubscribeAsync("AssetManager.SupportedFeePaymentAssets");
      }
   }
}
