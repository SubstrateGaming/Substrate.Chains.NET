//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Moonsama.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IEvmChainIdStorage interface definition.
    /// </summary>
    public interface IEvmChainIdStorage : IStorage
    {
        
        /// <summary>
        /// >> ChainId
        ///  The EVM chain ID.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U64 GetChainId();
    }
    
    /// <summary>
    /// EvmChainIdStorage class definition.
    /// </summary>
    public sealed class EvmChainIdStorage : IEvmChainIdStorage
    {
        
        /// <summary>
        /// _chainIdTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> _chainIdTypedStorage;
        
        /// <summary>
        /// EvmChainIdStorage constructor.
        /// </summary>
        public EvmChainIdStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.ChainIdTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64>("EvmChainId.ChainId", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _chainIdTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> ChainIdTypedStorage
        {
            get
            {
                return _chainIdTypedStorage;
            }
            set
            {
                _chainIdTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await ChainIdTypedStorage.InitializeAsync("EvmChainId", "ChainId");
        }
        
        /// <summary>
        /// Implements any storage change for EvmChainId.ChainId
        /// </summary>
        [StorageChange("EvmChainId", "ChainId")]
        public void OnUpdateChainId(string data)
        {
            ChainIdTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> ChainId
        ///  The EVM chain ID.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 GetChainId()
        {
            return ChainIdTypedStorage.Get();
        }
    }
}
