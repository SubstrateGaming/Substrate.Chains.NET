//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Moonsama.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IMaintenanceModeStorage interface definition.
    /// </summary>
    public interface IMaintenanceModeStorage : IStorage
    {
        
        /// <summary>
        /// >> MaintenanceMode
        ///  Whether the site is in maintenance mode
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.Bool GetMaintenanceMode();
    }
    
    /// <summary>
    /// MaintenanceModeStorage class definition.
    /// </summary>
    public sealed class MaintenanceModeStorage : IMaintenanceModeStorage
    {
        
        /// <summary>
        /// _maintenanceModeTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.Bool> _maintenanceModeTypedStorage;
        
        /// <summary>
        /// MaintenanceModeStorage constructor.
        /// </summary>
        public MaintenanceModeStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.MaintenanceModeTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.Bool>("MaintenanceMode.MaintenanceMode", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _maintenanceModeTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.Bool> MaintenanceModeTypedStorage
        {
            get
            {
                return _maintenanceModeTypedStorage;
            }
            set
            {
                _maintenanceModeTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await MaintenanceModeTypedStorage.InitializeAsync("MaintenanceMode", "MaintenanceMode");
        }
        
        /// <summary>
        /// Implements any storage change for MaintenanceMode.MaintenanceMode
        /// </summary>
        [StorageChange("MaintenanceMode", "MaintenanceMode")]
        public void OnUpdateMaintenanceMode(string data)
        {
            MaintenanceModeTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> MaintenanceMode
        ///  Whether the site is in maintenance mode
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.Bool GetMaintenanceMode()
        {
            return MaintenanceModeTypedStorage.Get();
        }
    }
}
