//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Moonsama.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IRolesManagementStorage interface definition.
    /// </summary>
    public interface IRolesManagementStorage : IStorage
    {
        
        /// <summary>
        /// >> RoleOf
        ///  Stores pallet roles as per account.
        /// </summary>
        Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_roles_management.types.BitFlags GetRoleOf(string key);
    }
    
    /// <summary>
    /// RolesManagementStorage class definition.
    /// </summary>
    public sealed class RolesManagementStorage : IRolesManagementStorage
    {
        
        /// <summary>
        /// _roleOfTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_roles_management.types.BitFlags> _roleOfTypedStorage;
        
        /// <summary>
        /// RolesManagementStorage constructor.
        /// </summary>
        public RolesManagementStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.RoleOfTypedStorage = new TypedMapStorage<Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_roles_management.types.BitFlags>("RolesManagement.RoleOf", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _roleOfTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_roles_management.types.BitFlags> RoleOfTypedStorage
        {
            get
            {
                return _roleOfTypedStorage;
            }
            set
            {
                _roleOfTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await RoleOfTypedStorage.InitializeAsync("RolesManagement", "RoleOf");
        }
        
        /// <summary>
        /// Implements any storage change for RolesManagement.RoleOf
        /// </summary>
        [StorageChange("RolesManagement", "RoleOf")]
        public void OnUpdateRoleOf(string key, string data)
        {
            RoleOfTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> RoleOf
        ///  Stores pallet roles as per account.
        /// </summary>
        public Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_roles_management.types.BitFlags GetRoleOf(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (RoleOfTypedStorage.Dictionary.TryGetValue(key, out Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_roles_management.types.BitFlags result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
