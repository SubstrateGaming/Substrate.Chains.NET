//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Moonsama.NET.NetApiExt.Generated.Storage
{
    
    
    public sealed class RolesManagementStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public RolesManagementStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("RolesManagement", "RoleOf"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20), typeof(Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_roles_management.types.BitFlags)));
        }
        
        /// <summary>
        /// >> RoleOfParams
        ///  Stores pallet roles as per account.
        /// </summary>
        public static string RoleOfParams(Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20 key)
        {
            return RequestGenerator.GetStorage("RolesManagement", "RoleOf", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> RoleOfDefault
        /// Default value as hex string
        /// </summary>
        public static string RoleOfDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> RoleOf
        ///  Stores pallet roles as per account.
        /// </summary>
        public async Task<Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_roles_management.types.BitFlags> RoleOf(Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20 key, CancellationToken token)
        {
            string parameters = RolesManagementStorage.RoleOfParams(key);
            var result = await _client.GetStorageAsync<Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_roles_management.types.BitFlags>(parameters, token);
            return result;
        }
    }
    
    public sealed class RolesManagementCalls
    {
        
        /// <summary>
        /// >> grant_role
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method GrantRole(Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20 who, Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_roles_management.types.EnumRole role)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(who.Encode());
            byteArray.AddRange(role.Encode());
            return new Method(57, "RolesManagement", 0, "grant_role", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> revoke_role
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method RevokeRole(Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20 who, Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_roles_management.types.EnumRole role)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(who.Encode());
            byteArray.AddRange(role.Encode());
            return new Method(57, "RolesManagement", 1, "revoke_role", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> renounce_role
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method RenounceRole(Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20 who, Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_roles_management.types.EnumRole role)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(who.Encode());
            byteArray.AddRange(role.Encode());
            return new Method(57, "RolesManagement", 2, "renounce_role", byteArray.ToArray());
        }
    }
    
    public sealed class RolesManagementConstants
    {
    }
    
    public enum RolesManagementErrors
    {
        
        /// <summary>
        /// >> WrongOrigin
        /// </summary>
        WrongOrigin,
        
        /// <summary>
        /// >> NoPermission
        /// </summary>
        NoPermission,
    }
}
