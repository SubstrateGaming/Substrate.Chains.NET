//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Moonsama.NET.RestClient.Mockup.Generated.Interfaces
{
   using System;
   using System.Threading.Tasks;
   using Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_multi_token.types;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.Moonsama.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec;
   using Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.Moonsama.NET.NetApiExt.Generated.Model.bounded_collections.bounded_btree_set;
   
   public interface IMultiTokenControllerMockupClient
   {
      Task<bool> SetCollection(CollectionDetails value, U128 key);
      Task<bool> SetOwnershipAcceptance(U128 value, AccountId20 key);
      Task<bool> SetAccount(AccountData value, BaseTuple<AccountId20, U128, U128> key);
      Task<bool> SetHolds(BoundedVecT29 value, BaseTuple<AccountId20, U128, U128> key);
      Task<bool> SetNftOwners(AccountId20 value, BaseTuple<U128, U128> key);
      Task<bool> SetCollectionAccount(BaseTuple value, BaseTuple<AccountId20, U128> key);
      Task<bool> SetCollectionRoleOf(BitFlagsT3 value, BaseTuple<U128, AccountId20> key);
      Task<bool> SetItem(ItemDetails value, BaseTuple<U128, U128> key);
      Task<bool> SetCollectionMetadataOf(CollectionMetadata value, U128 key);
      Task<bool> SetItemMetadataOf(ItemMetadata value, BaseTuple<U128, U128> key);
      Task<bool> SetAttribute(BaseTuple<BoundedVecT6, AttributeDeposit> value, BaseTuple<U128, BaseOpt<U128>, EnumAttributeNamespace, BoundedVecT5> key);
      Task<bool> SetItemAttributesApprovalsOf(BoundedBTreeSet value, BaseTuple<U128, U128> key);
      Task<bool> SetNextCollectionId(U128 value);
      Task<bool> SetNextItemId(U128 value, U128 key);
      Task<bool> SetCollectionConfigOf(CollectionConfig value, U128 key);
      Task<bool> SetItemConfigOf(ItemConfig value, BaseTuple<U128, U128> key);
      Task<bool> SetApprovals(BaseTuple<BaseOpt<U32>, U128> value, BaseTuple<U128, U128, AccountId20, AccountId20> key);
      Task<bool> SetApprovalsForAll(Bool value, BaseTuple<AccountId20, AccountId20> key);
      Task<bool> SetSoulboundPermissionedDestination(Bool value, BaseTuple<AccountId20, U128, U128> key);
      Task<bool> SetSoulboundGlobalPermissioned(AllowedAsSourceOrDest value, BaseTuple<AccountId20, U128> key);
   }
}
