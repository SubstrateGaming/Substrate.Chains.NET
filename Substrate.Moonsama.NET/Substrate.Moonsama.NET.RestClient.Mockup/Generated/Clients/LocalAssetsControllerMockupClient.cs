//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Moonsama.NET.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Moonsama.NET.NetApiExt.Generated.Model.pallet_assets.types;
   using Substrate.Moonsama.NET.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class LocalAssetsControllerMockupClient : MockupBaseClient, ILocalAssetsControllerMockupClient
   {
      private HttpClient _httpClient;
      public LocalAssetsControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetAsset(AssetDetails value, Substrate.NetApi.Model.Types.Primitive.U128 key)
      {
         return await SendMockupRequestAsync(_httpClient, "LocalAssets/Asset", value.Encode(), Substrate.Moonsama.NET.NetApiExt.Generated.Storage.LocalAssetsStorage.AssetParams(key));
      }
      public async Task<bool> SetAccount(AssetAccount value, Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U128, Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20> key)
      {
         return await SendMockupRequestAsync(_httpClient, "LocalAssets/Account", value.Encode(), Substrate.Moonsama.NET.NetApiExt.Generated.Storage.LocalAssetsStorage.AccountParams(key));
      }
      public async Task<bool> SetApprovals(Approval value, Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U128, Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20, Substrate.Moonsama.NET.NetApiExt.Generated.Model.fp_account.AccountId20> key)
      {
         return await SendMockupRequestAsync(_httpClient, "LocalAssets/Approvals", value.Encode(), Substrate.Moonsama.NET.NetApiExt.Generated.Storage.LocalAssetsStorage.ApprovalsParams(key));
      }
      public async Task<bool> SetMetadata(AssetMetadata value, Substrate.NetApi.Model.Types.Primitive.U128 key)
      {
         return await SendMockupRequestAsync(_httpClient, "LocalAssets/Metadata", value.Encode(), Substrate.Moonsama.NET.NetApiExt.Generated.Storage.LocalAssetsStorage.MetadataParams(key));
      }
   }
}
