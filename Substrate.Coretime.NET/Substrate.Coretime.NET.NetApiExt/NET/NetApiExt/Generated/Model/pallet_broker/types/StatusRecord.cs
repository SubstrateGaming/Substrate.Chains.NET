//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace Substrate.Coretime.NET.NetApiExt.Generated.Model.pallet_broker.types
{
    
    
    /// <summary>
    /// >> 366 - Composite[pallet_broker.types.StatusRecord]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class StatusRecord : BaseType
    {
        
        /// <summary>
        /// >> core_count
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U16 CoreCount { get; set; }
        /// <summary>
        /// >> private_pool_size
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 PrivatePoolSize { get; set; }
        /// <summary>
        /// >> system_pool_size
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 SystemPoolSize { get; set; }
        /// <summary>
        /// >> last_committed_timeslice
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 LastCommittedTimeslice { get; set; }
        /// <summary>
        /// >> last_timeslice
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 LastTimeslice { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "StatusRecord";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(CoreCount.Encode());
            result.AddRange(PrivatePoolSize.Encode());
            result.AddRange(SystemPoolSize.Encode());
            result.AddRange(LastCommittedTimeslice.Encode());
            result.AddRange(LastTimeslice.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            CoreCount = new Substrate.NetApi.Model.Types.Primitive.U16();
            CoreCount.Decode(byteArray, ref p);
            PrivatePoolSize = new Substrate.NetApi.Model.Types.Primitive.U32();
            PrivatePoolSize.Decode(byteArray, ref p);
            SystemPoolSize = new Substrate.NetApi.Model.Types.Primitive.U32();
            SystemPoolSize.Decode(byteArray, ref p);
            LastCommittedTimeslice = new Substrate.NetApi.Model.Types.Primitive.U32();
            LastCommittedTimeslice.Decode(byteArray, ref p);
            LastTimeslice = new Substrate.NetApi.Model.Types.Primitive.U32();
            LastTimeslice.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
