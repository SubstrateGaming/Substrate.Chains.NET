//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Polkadot.NET.RestClient.Test.Generated
{
   using System;
   using NUnit.Framework;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Polkadot.NET.RestClient.Mockup.Generated.Clients;
   using Substrate.Polkadot.NET.RestClient.Generated.Clients;
   using Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.NetApi.Model.Types.Primitive;
   
   public class ConfigurationControllerClientTest : ClientTestBase
   {
      private System.Net.Http.HttpClient _httpClient;
      [SetUp()]
      public void Setup()
      {
         _httpClient = CreateHttpClient();
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration GetTestValue2()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration();
         result.MaxCodeSize = this.GetTestValueU32();
         result.MaxHeadDataSize = this.GetTestValueU32();
         result.MaxUpwardQueueCount = this.GetTestValueU32();
         result.MaxUpwardQueueSize = this.GetTestValueU32();
         result.MaxUpwardMessageSize = this.GetTestValueU32();
         result.MaxUpwardMessageNumPerCandidate = this.GetTestValueU32();
         result.HrmpMaxMessageNumPerCandidate = this.GetTestValueU32();
         result.ValidationUpgradeCooldown = this.GetTestValueU32();
         result.ValidationUpgradeDelay = this.GetTestValueU32();
         result.AsyncBackingParams = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.vstaging.AsyncBackingParams();
         result.AsyncBackingParams = this.GetTestValue3();
         result.MaxPovSize = this.GetTestValueU32();
         result.MaxDownwardMessageSize = this.GetTestValueU32();
         result.HrmpMaxParachainOutboundChannels = this.GetTestValueU32();
         result.HrmpSenderDeposit = this.GetTestValueU128();
         result.HrmpRecipientDeposit = this.GetTestValueU128();
         result.HrmpChannelMaxCapacity = this.GetTestValueU32();
         result.HrmpChannelMaxTotalSize = this.GetTestValueU32();
         result.HrmpMaxParachainInboundChannels = this.GetTestValueU32();
         result.HrmpChannelMaxMessageSize = this.GetTestValueU32();
         result.ExecutorParams = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.ExecutorParams();
         result.ExecutorParams = this.GetTestValue4();
         result.CodeRetentionPeriod = this.GetTestValueU32();
         result.OnDemandCores = this.GetTestValueU32();
         result.OnDemandRetries = this.GetTestValueU32();
         result.OnDemandQueueMaxSize = this.GetTestValueU32();
         result.OnDemandTargetQueueUtilization = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill();
         result.OnDemandTargetQueueUtilization = this.GetTestValue6();
         result.OnDemandFeeVariability = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill();
         result.OnDemandFeeVariability = this.GetTestValue7();
         result.OnDemandBaseFee = this.GetTestValueU128();
         result.OnDemandTtl = this.GetTestValueU32();
         result.GroupRotationFrequency = this.GetTestValueU32();
         result.ParasAvailabilityPeriod = this.GetTestValueU32();
         result.SchedulingLookahead = this.GetTestValueU32();
         result.MaxValidatorsPerCore = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
         result.MaxValidatorsPerCore.Create(this.GetTestValueU32());
         result.MaxValidators = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
         result.MaxValidators.Create(this.GetTestValueU32());
         result.DisputePeriod = this.GetTestValueU32();
         result.DisputePostConclusionAcceptancePeriod = this.GetTestValueU32();
         result.NoShowSlots = this.GetTestValueU32();
         result.NDelayTranches = this.GetTestValueU32();
         result.ZerothDelayTrancheWidth = this.GetTestValueU32();
         result.NeededApprovals = this.GetTestValueU32();
         result.RelayVrfModuloSamples = this.GetTestValueU32();
         result.PvfVotingTtl = this.GetTestValueU32();
         result.MinimumValidationUpgradeDelay = this.GetTestValueU32();
         result.MinimumBackingVotes = this.GetTestValueU32();
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.vstaging.AsyncBackingParams GetTestValue3()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.vstaging.AsyncBackingParams result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.vstaging.AsyncBackingParams();
         result.MaxCandidateDepth = this.GetTestValueU32();
         result.AllowedAncestryLen = this.GetTestValueU32();
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.ExecutorParams GetTestValue4()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.ExecutorParams result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.ExecutorParams();
         result.Value = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.EnumExecutorParam>();
         result.Value.Create(new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.EnumExecutorParam[] {
                  this.GetTestValue5()});
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.EnumExecutorParam GetTestValue5()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.EnumExecutorParam result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.EnumExecutorParam();
         result.Create(this.GetTestValueEnum<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.ExecutorParam>(), this.GetTestValueBaseVoid());
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill GetTestValue6()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill();
         result.Value = this.GetTestValueU32();
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill GetTestValue7()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill();
         result.Value = this.GetTestValueU32();
         return result;
      }
      [Test()]
      public async System.Threading.Tasks.Task TestActiveConfig()
      {
         // Construct new Mockup client to test with.
         ConfigurationControllerMockupClient mockupClient = new ConfigurationControllerMockupClient(_httpClient);

         // Construct new subscription client to test with.
         var subscriptionClient = CreateSubscriptionClient();

         // Construct new RPC client to test with.
         ConfigurationControllerClient rpcClient = new ConfigurationControllerClient(_httpClient, subscriptionClient);
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration mockupValue = this.GetTestValue2();


         Assert.IsTrue(await rpcClient.SubscribeActiveConfig());

         // Save the previously generated mockup value in RPC service storage.
         bool mockupSetResult = await mockupClient.SetActiveConfig(mockupValue);

         // Test that the expected mockup value was handled successfully from RPC service.
         Assert.IsTrue(mockupSetResult);
         var cts = new System.Threading.CancellationTokenSource(TimeSpan.FromSeconds(1));
         Assert.IsTrue(await subscriptionClient.ReceiveNextAsync(cts.Token));

         Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration rpcResult = await rpcClient.GetActiveConfig();

         // Test that the expected mockup value matches the actual result from RPC service.
         Assert.AreEqual(mockupValue.Encode(), rpcResult.Encode());
      }
      public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration>> GetTestValue9()
      {
         Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration>> result;
         result = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration>>();
         result.Create(new Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration>[] {
                  this.GetTestValue10()});
         return result;
      }
      public Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration> GetTestValue10()
      {
         Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration> result;
         result = new Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration>();
         result.Create(this.GetTestValueU32(), this.GetTestValue11());
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration GetTestValue11()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration();
         result.MaxCodeSize = this.GetTestValueU32();
         result.MaxHeadDataSize = this.GetTestValueU32();
         result.MaxUpwardQueueCount = this.GetTestValueU32();
         result.MaxUpwardQueueSize = this.GetTestValueU32();
         result.MaxUpwardMessageSize = this.GetTestValueU32();
         result.MaxUpwardMessageNumPerCandidate = this.GetTestValueU32();
         result.HrmpMaxMessageNumPerCandidate = this.GetTestValueU32();
         result.ValidationUpgradeCooldown = this.GetTestValueU32();
         result.ValidationUpgradeDelay = this.GetTestValueU32();
         result.AsyncBackingParams = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.vstaging.AsyncBackingParams();
         result.AsyncBackingParams = this.GetTestValue12();
         result.MaxPovSize = this.GetTestValueU32();
         result.MaxDownwardMessageSize = this.GetTestValueU32();
         result.HrmpMaxParachainOutboundChannels = this.GetTestValueU32();
         result.HrmpSenderDeposit = this.GetTestValueU128();
         result.HrmpRecipientDeposit = this.GetTestValueU128();
         result.HrmpChannelMaxCapacity = this.GetTestValueU32();
         result.HrmpChannelMaxTotalSize = this.GetTestValueU32();
         result.HrmpMaxParachainInboundChannels = this.GetTestValueU32();
         result.HrmpChannelMaxMessageSize = this.GetTestValueU32();
         result.ExecutorParams = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.ExecutorParams();
         result.ExecutorParams = this.GetTestValue13();
         result.CodeRetentionPeriod = this.GetTestValueU32();
         result.OnDemandCores = this.GetTestValueU32();
         result.OnDemandRetries = this.GetTestValueU32();
         result.OnDemandQueueMaxSize = this.GetTestValueU32();
         result.OnDemandTargetQueueUtilization = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill();
         result.OnDemandTargetQueueUtilization = this.GetTestValue15();
         result.OnDemandFeeVariability = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill();
         result.OnDemandFeeVariability = this.GetTestValue16();
         result.OnDemandBaseFee = this.GetTestValueU128();
         result.OnDemandTtl = this.GetTestValueU32();
         result.GroupRotationFrequency = this.GetTestValueU32();
         result.ParasAvailabilityPeriod = this.GetTestValueU32();
         result.SchedulingLookahead = this.GetTestValueU32();
         result.MaxValidatorsPerCore = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
         result.MaxValidatorsPerCore.Create(this.GetTestValueU32());
         result.MaxValidators = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
         result.MaxValidators.Create(this.GetTestValueU32());
         result.DisputePeriod = this.GetTestValueU32();
         result.DisputePostConclusionAcceptancePeriod = this.GetTestValueU32();
         result.NoShowSlots = this.GetTestValueU32();
         result.NDelayTranches = this.GetTestValueU32();
         result.ZerothDelayTrancheWidth = this.GetTestValueU32();
         result.NeededApprovals = this.GetTestValueU32();
         result.RelayVrfModuloSamples = this.GetTestValueU32();
         result.PvfVotingTtl = this.GetTestValueU32();
         result.MinimumValidationUpgradeDelay = this.GetTestValueU32();
         result.MinimumBackingVotes = this.GetTestValueU32();
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.vstaging.AsyncBackingParams GetTestValue12()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.vstaging.AsyncBackingParams result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.vstaging.AsyncBackingParams();
         result.MaxCandidateDepth = this.GetTestValueU32();
         result.AllowedAncestryLen = this.GetTestValueU32();
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.ExecutorParams GetTestValue13()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.ExecutorParams result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.ExecutorParams();
         result.Value = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.EnumExecutorParam>();
         result.Value.Create(new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.EnumExecutorParam[] {
                  this.GetTestValue14()});
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.EnumExecutorParam GetTestValue14()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.EnumExecutorParam result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.EnumExecutorParam();
         result.Create(this.GetTestValueEnum<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.executor_params.ExecutorParam>(), this.GetTestValueBaseVoid());
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill GetTestValue15()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill();
         result.Value = this.GetTestValueU32();
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill GetTestValue16()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill();
         result.Value = this.GetTestValueU32();
         return result;
      }
      [Test()]
      public async System.Threading.Tasks.Task TestPendingConfigs()
      {
         // Construct new Mockup client to test with.
         ConfigurationControllerMockupClient mockupClient = new ConfigurationControllerMockupClient(_httpClient);

         // Construct new subscription client to test with.
         var subscriptionClient = CreateSubscriptionClient();

         // Construct new RPC client to test with.
         ConfigurationControllerClient rpcClient = new ConfigurationControllerClient(_httpClient, subscriptionClient);
         Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration>> mockupValue = this.GetTestValue9();


         Assert.IsTrue(await rpcClient.SubscribePendingConfigs());

         // Save the previously generated mockup value in RPC service storage.
         bool mockupSetResult = await mockupClient.SetPendingConfigs(mockupValue);

         // Test that the expected mockup value was handled successfully from RPC service.
         Assert.IsTrue(mockupSetResult);
         var cts = new System.Threading.CancellationTokenSource(TimeSpan.FromSeconds(1));
         Assert.IsTrue(await subscriptionClient.ReceiveNextAsync(cts.Token));

         Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration>> rpcResult = await rpcClient.GetPendingConfigs();

         // Test that the expected mockup value matches the actual result from RPC service.
         Assert.AreEqual(mockupValue.Encode(), rpcResult.Encode());
      }
      [Test()]
      public async System.Threading.Tasks.Task TestBypassConsistencyCheck()
      {
         // Construct new Mockup client to test with.
         ConfigurationControllerMockupClient mockupClient = new ConfigurationControllerMockupClient(_httpClient);

         // Construct new subscription client to test with.
         var subscriptionClient = CreateSubscriptionClient();

         // Construct new RPC client to test with.
         ConfigurationControllerClient rpcClient = new ConfigurationControllerClient(_httpClient, subscriptionClient);
         Substrate.NetApi.Model.Types.Primitive.Bool mockupValue = this.GetTestValueBool();


         Assert.IsTrue(await rpcClient.SubscribeBypassConsistencyCheck());

         // Save the previously generated mockup value in RPC service storage.
         bool mockupSetResult = await mockupClient.SetBypassConsistencyCheck(mockupValue);

         // Test that the expected mockup value was handled successfully from RPC service.
         Assert.IsTrue(mockupSetResult);
         var cts = new System.Threading.CancellationTokenSource(TimeSpan.FromSeconds(1));
         Assert.IsTrue(await subscriptionClient.ReceiveNextAsync(cts.Token));

         Substrate.NetApi.Model.Types.Primitive.Bool rpcResult = await rpcClient.GetBypassConsistencyCheck();

         // Test that the expected mockup value matches the actual result from RPC service.
         Assert.AreEqual(mockupValue.Encode(), rpcResult.Encode());
      }
   }
}
