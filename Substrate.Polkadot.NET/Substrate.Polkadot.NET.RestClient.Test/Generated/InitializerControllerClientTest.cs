//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Polkadot.NET.RestClient.Test.Generated
{
   using System;
   using NUnit.Framework;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Polkadot.NET.RestClient.Mockup.Generated.Clients;
   using Substrate.Polkadot.NET.RestClient.Generated.Clients;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.initializer;
   
   public class InitializerControllerClientTest : ClientTestBase
   {
      private System.Net.Http.HttpClient _httpClient;
      [SetUp()]
      public void Setup()
      {
         _httpClient = CreateHttpClient();
      }
      public Substrate.NetApi.Model.Types.Base.BaseTuple GetTestValue2()
      {
         Substrate.NetApi.Model.Types.Base.BaseTuple result;
         result = new Substrate.NetApi.Model.Types.Base.BaseTuple();
         return result;
      }
      [Test()]
      public async System.Threading.Tasks.Task TestHasInitialized()
      {
         // Construct new Mockup client to test with.
         InitializerControllerMockupClient mockupClient = new InitializerControllerMockupClient(_httpClient);

         // Construct new subscription client to test with.
         var subscriptionClient = CreateSubscriptionClient();

         // Construct new RPC client to test with.
         InitializerControllerClient rpcClient = new InitializerControllerClient(_httpClient, subscriptionClient);
         Substrate.NetApi.Model.Types.Base.BaseTuple mockupValue = this.GetTestValue2();


         Assert.IsTrue(await rpcClient.SubscribeHasInitialized());

         // Save the previously generated mockup value in RPC service storage.
         bool mockupSetResult = await mockupClient.SetHasInitialized(mockupValue);

         // Test that the expected mockup value was handled successfully from RPC service.
         Assert.IsTrue(mockupSetResult);
         var cts = new System.Threading.CancellationTokenSource(TimeSpan.FromSeconds(1));
         Assert.IsTrue(await subscriptionClient.ReceiveNextAsync(cts.Token));

         Substrate.NetApi.Model.Types.Base.BaseTuple rpcResult = await rpcClient.GetHasInitialized();

         // Test that the expected mockup value matches the actual result from RPC service.
         Assert.AreEqual(mockupValue.Encode(), rpcResult.Encode());
      }
      public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.initializer.BufferedSessionChange> GetTestValue4()
      {
         Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.initializer.BufferedSessionChange> result;
         result = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.initializer.BufferedSessionChange>();
         result.Create(new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.initializer.BufferedSessionChange[] {
                  this.GetTestValue5()});
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.initializer.BufferedSessionChange GetTestValue5()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.initializer.BufferedSessionChange result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.initializer.BufferedSessionChange();
         result.Validators = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.validator_app.Public>();
         result.Validators.Create(new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.validator_app.Public[] {
                  this.GetTestValue6()});
         result.Queued = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.validator_app.Public>();
         result.Queued.Create(new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.validator_app.Public[] {
                  this.GetTestValue8()});
         result.SessionIndex = this.GetTestValueU32();
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.validator_app.Public GetTestValue6()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.validator_app.Public result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.validator_app.Public();
         result.Value = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_core.sr25519.Public();
         result.Value = this.GetTestValue7();
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_core.sr25519.Public GetTestValue7()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_core.sr25519.Public result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_core.sr25519.Public();
         result.Value = new Substrate.Polkadot.NET.NetApiExt.Generated.Types.Base.Arr32U8();
         throw new System.InvalidOperationException("Generator could not deduct array initializer element type!");
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.validator_app.Public GetTestValue8()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.validator_app.Public result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v5.validator_app.Public();
         result.Value = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_core.sr25519.Public();
         result.Value = this.GetTestValue9();
         return result;
      }
      public Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_core.sr25519.Public GetTestValue9()
      {
         Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_core.sr25519.Public result;
         result = new Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_core.sr25519.Public();
         result.Value = new Substrate.Polkadot.NET.NetApiExt.Generated.Types.Base.Arr32U8();
         throw new System.InvalidOperationException("Generator could not deduct array initializer element type!");
         return result;
      }
      [Test()]
      public async System.Threading.Tasks.Task TestBufferedSessionChanges()
      {
         // Construct new Mockup client to test with.
         InitializerControllerMockupClient mockupClient = new InitializerControllerMockupClient(_httpClient);

         // Construct new subscription client to test with.
         var subscriptionClient = CreateSubscriptionClient();

         // Construct new RPC client to test with.
         InitializerControllerClient rpcClient = new InitializerControllerClient(_httpClient, subscriptionClient);
         Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.initializer.BufferedSessionChange> mockupValue = this.GetTestValue4();


         Assert.IsTrue(await rpcClient.SubscribeBufferedSessionChanges());

         // Save the previously generated mockup value in RPC service storage.
         bool mockupSetResult = await mockupClient.SetBufferedSessionChanges(mockupValue);

         // Test that the expected mockup value was handled successfully from RPC service.
         Assert.IsTrue(mockupSetResult);
         var cts = new System.Threading.CancellationTokenSource(TimeSpan.FromSeconds(1));
         Assert.IsTrue(await subscriptionClient.ReceiveNextAsync(cts.Token));

         Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.initializer.BufferedSessionChange> rpcResult = await rpcClient.GetBufferedSessionChanges();

         // Test that the expected mockup value matches the actual result from RPC service.
         Assert.AreEqual(mockupValue.Encode(), rpcResult.Encode());
      }
   }
}
