//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Polkadot.NET.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.Polkadot.NET.NetApiExt.Generated.Model.pallet_child_bounties;
   using Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_core.bounded.bounded_vec;
   using Substrate.Polkadot.NET.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class ChildBountiesControllerMockupClient : MockupBaseClient, IChildBountiesControllerMockupClient
   {
      private HttpClient _httpClient;
      public ChildBountiesControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetChildBountyCount(U32 value)
      {
         return await SendMockupRequestAsync(_httpClient, "ChildBounties/ChildBountyCount", value.Encode(), Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ChildBountiesStorage.ChildBountyCountParams());
      }
      public async Task<bool> SetParentChildBounties(U32 value, U32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "ChildBounties/ParentChildBounties", value.Encode(), Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ChildBountiesStorage.ParentChildBountiesParams(key));
      }
      public async Task<bool> SetChildBounties(ChildBounty value, Substrate.NetApi.Model.Types.Base.BaseTuple<U32, U32> key)
      {
         return await SendMockupRequestAsync(_httpClient, "ChildBounties/ChildBounties", value.Encode(), Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ChildBountiesStorage.ChildBountiesParams(key));
      }
      public async Task<bool> SetChildBountyDescriptions(BoundedVecT25 value, U32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "ChildBounties/ChildBountyDescriptions", value.Encode(), Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ChildBountiesStorage.ChildBountyDescriptionsParams(key));
      }
      public async Task<bool> SetChildrenCuratorFees(U128 value, U32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "ChildBounties/ChildrenCuratorFees", value.Encode(), Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ChildBountiesStorage.ChildrenCuratorFeesParams(key));
      }
   }
}
