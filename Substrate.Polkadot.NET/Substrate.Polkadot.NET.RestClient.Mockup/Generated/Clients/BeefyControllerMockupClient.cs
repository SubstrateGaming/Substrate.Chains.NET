//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Polkadot.NET.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Polkadot.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.Polkadot.NET.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class BeefyControllerMockupClient : MockupBaseClient, IBeefyControllerMockupClient
   {
      private HttpClient _httpClient;
      public BeefyControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetAuthorities(BoundedVecT45 value)
      {
         return await SendMockupRequestAsync(_httpClient, "Beefy/Authorities", value.Encode(), Substrate.Polkadot.NET.NetApiExt.Generated.Storage.BeefyStorage.AuthoritiesParams());
      }
      public async Task<bool> SetValidatorSetId(U64 value)
      {
         return await SendMockupRequestAsync(_httpClient, "Beefy/ValidatorSetId", value.Encode(), Substrate.Polkadot.NET.NetApiExt.Generated.Storage.BeefyStorage.ValidatorSetIdParams());
      }
      public async Task<bool> SetNextAuthorities(BoundedVecT45 value)
      {
         return await SendMockupRequestAsync(_httpClient, "Beefy/NextAuthorities", value.Encode(), Substrate.Polkadot.NET.NetApiExt.Generated.Storage.BeefyStorage.NextAuthoritiesParams());
      }
      public async Task<bool> SetSetIdSession(U32 value, U64 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Beefy/SetIdSession", value.Encode(), Substrate.Polkadot.NET.NetApiExt.Generated.Storage.BeefyStorage.SetIdSessionParams(key));
      }
      public async Task<bool> SetGenesisBlock(BaseOpt<U32> value)
      {
         return await SendMockupRequestAsync(_httpClient, "Beefy/GenesisBlock", value.Encode(), Substrate.Polkadot.NET.NetApiExt.Generated.Storage.BeefyStorage.GenesisBlockParams());
      }
   }
}
