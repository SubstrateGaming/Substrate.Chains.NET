//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.NetApi.Model.Types.Base;
using Substrate.Polkadot.NET.RestService.Generated.Storage;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Polkadot.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// AssetRateController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class AssetRateController : ControllerBase
    {
        
        private IAssetRateStorage _assetRateStorage;
        
        /// <summary>
        /// AssetRateController constructor.
        /// </summary>
        public AssetRateController(IAssetRateStorage assetRateStorage)
        {
            _assetRateStorage = assetRateStorage;
        }
        
        /// <summary>
        /// >> ConversionRateToNative
        ///  Maps an asset to its fixed point representation in the native balance.
        /// 
        ///  E.g. `native_amount = asset_amount * ConversionRateToNative::<T>::get(asset_kind)`
        /// </summary>
        [HttpGet("ConversionRateToNative")]
        [ProducesResponseType(typeof(Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.fixed_point.FixedU128), 200)]
        [StorageKeyBuilder(typeof(Substrate.Polkadot.NET.NetApiExt.Generated.Storage.AssetRateStorage), "ConversionRateToNativeParams", typeof(Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_common.impls.EnumVersionedLocatableAsset))]
        public IActionResult GetConversionRateToNative(string key)
        {
            return this.Ok(_assetRateStorage.GetConversionRateToNative(key));
        }
    }
}
