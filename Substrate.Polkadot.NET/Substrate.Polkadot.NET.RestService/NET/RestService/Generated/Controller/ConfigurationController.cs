//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.NetApi.Model.Types.Base;
using Substrate.Polkadot.NET.RestService.Generated.Storage;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Polkadot.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// ConfigurationController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class ConfigurationController : ControllerBase
    {
        
        private IConfigurationStorage _configurationStorage;
        
        /// <summary>
        /// ConfigurationController constructor.
        /// </summary>
        public ConfigurationController(IConfigurationStorage configurationStorage)
        {
            _configurationStorage = configurationStorage;
        }
        
        /// <summary>
        /// >> ActiveConfig
        ///  The active configuration for the current session.
        /// </summary>
        [HttpGet("ActiveConfig")]
        [ProducesResponseType(typeof(Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration), 200)]
        [StorageKeyBuilder(typeof(Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ConfigurationStorage), "ActiveConfigParams")]
        public IActionResult GetActiveConfig()
        {
            return this.Ok(_configurationStorage.GetActiveConfig());
        }
        
        /// <summary>
        /// >> PendingConfigs
        ///  Pending configuration changes.
        /// 
        ///  This is a list of configuration changes, each with a session index at which it should
        ///  be applied.
        /// 
        ///  The list is sorted ascending by session index. Also, this list can only contain at most
        ///  2 items: for the next session and for the `scheduled_session`.
        /// </summary>
        [HttpGet("PendingConfigs")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.configuration.HostConfiguration>>), 200)]
        [StorageKeyBuilder(typeof(Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ConfigurationStorage), "PendingConfigsParams")]
        public IActionResult GetPendingConfigs()
        {
            return this.Ok(_configurationStorage.GetPendingConfigs());
        }
        
        /// <summary>
        /// >> BypassConsistencyCheck
        ///  If this is set, then the configuration setters will bypass the consistency checks. This
        ///  is meant to be used only as the last resort.
        /// </summary>
        [HttpGet("BypassConsistencyCheck")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.Bool), 200)]
        [StorageKeyBuilder(typeof(Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ConfigurationStorage), "BypassConsistencyCheckParams")]
        public IActionResult GetBypassConsistencyCheck()
        {
            return this.Ok(_configurationStorage.GetBypassConsistencyCheck());
        }
    }
}
