//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Polkadot.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IDmpStorage interface definition.
    /// </summary>
    public interface IDmpStorage : IStorage
    {
        
        /// <summary>
        /// >> DownwardMessageQueues
        ///  The downward messages addressed for a certain para.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_core_primitives.InboundDownwardMessage> GetDownwardMessageQueues(string key);
        
        /// <summary>
        /// >> DownwardMessageQueueHeads
        ///  A mapping that stores the downward message queue MQC head for each para.
        /// 
        ///  Each link in this chain has a form:
        ///  `(prev_head, B, H(M))`, where
        ///  - `prev_head`: is the previous head hash or zero if none.
        ///  - `B`: is the relay-chain block number in which a message was appended.
        ///  - `H(M)`: is the hash of the message being appended.
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.primitive_types.H256 GetDownwardMessageQueueHeads(string key);
        
        /// <summary>
        /// >> DeliveryFeeFactor
        ///  The number to multiply the base delivery fee by.
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.fixed_point.FixedU128 GetDeliveryFeeFactor(string key);
    }
    
    /// <summary>
    /// DmpStorage class definition.
    /// </summary>
    public sealed class DmpStorage : IDmpStorage
    {
        
        /// <summary>
        /// _downwardMessageQueuesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_core_primitives.InboundDownwardMessage>> _downwardMessageQueuesTypedStorage;
        
        /// <summary>
        /// _downwardMessageQueueHeadsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.primitive_types.H256> _downwardMessageQueueHeadsTypedStorage;
        
        /// <summary>
        /// _deliveryFeeFactorTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.fixed_point.FixedU128> _deliveryFeeFactorTypedStorage;
        
        /// <summary>
        /// DmpStorage constructor.
        /// </summary>
        public DmpStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.DownwardMessageQueuesTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_core_primitives.InboundDownwardMessage>>("Dmp.DownwardMessageQueues", storageDataProvider, storageChangeDelegates);
            this.DownwardMessageQueueHeadsTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.primitive_types.H256>("Dmp.DownwardMessageQueueHeads", storageDataProvider, storageChangeDelegates);
            this.DeliveryFeeFactorTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.fixed_point.FixedU128>("Dmp.DeliveryFeeFactor", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _downwardMessageQueuesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_core_primitives.InboundDownwardMessage>> DownwardMessageQueuesTypedStorage
        {
            get
            {
                return _downwardMessageQueuesTypedStorage;
            }
            set
            {
                _downwardMessageQueuesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _downwardMessageQueueHeadsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.primitive_types.H256> DownwardMessageQueueHeadsTypedStorage
        {
            get
            {
                return _downwardMessageQueueHeadsTypedStorage;
            }
            set
            {
                _downwardMessageQueueHeadsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _deliveryFeeFactorTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.fixed_point.FixedU128> DeliveryFeeFactorTypedStorage
        {
            get
            {
                return _deliveryFeeFactorTypedStorage;
            }
            set
            {
                _deliveryFeeFactorTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await DownwardMessageQueuesTypedStorage.InitializeAsync("Dmp", "DownwardMessageQueues");
            await DownwardMessageQueueHeadsTypedStorage.InitializeAsync("Dmp", "DownwardMessageQueueHeads");
            await DeliveryFeeFactorTypedStorage.InitializeAsync("Dmp", "DeliveryFeeFactor");
        }
        
        /// <summary>
        /// Implements any storage change for Dmp.DownwardMessageQueues
        /// </summary>
        [StorageChange("Dmp", "DownwardMessageQueues")]
        public void OnUpdateDownwardMessageQueues(string key, string data)
        {
            DownwardMessageQueuesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> DownwardMessageQueues
        ///  The downward messages addressed for a certain para.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_core_primitives.InboundDownwardMessage> GetDownwardMessageQueues(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (DownwardMessageQueuesTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_core_primitives.InboundDownwardMessage> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Dmp.DownwardMessageQueueHeads
        /// </summary>
        [StorageChange("Dmp", "DownwardMessageQueueHeads")]
        public void OnUpdateDownwardMessageQueueHeads(string key, string data)
        {
            DownwardMessageQueueHeadsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> DownwardMessageQueueHeads
        ///  A mapping that stores the downward message queue MQC head for each para.
        /// 
        ///  Each link in this chain has a form:
        ///  `(prev_head, B, H(M))`, where
        ///  - `prev_head`: is the previous head hash or zero if none.
        ///  - `B`: is the relay-chain block number in which a message was appended.
        ///  - `H(M)`: is the hash of the message being appended.
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.primitive_types.H256 GetDownwardMessageQueueHeads(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (DownwardMessageQueueHeadsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.primitive_types.H256 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Dmp.DeliveryFeeFactor
        /// </summary>
        [StorageChange("Dmp", "DeliveryFeeFactor")]
        public void OnUpdateDeliveryFeeFactor(string key, string data)
        {
            DeliveryFeeFactorTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> DeliveryFeeFactor
        ///  The number to multiply the base delivery fee by.
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.fixed_point.FixedU128 GetDeliveryFeeFactor(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (DeliveryFeeFactorTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_arithmetic.fixed_point.FixedU128 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
