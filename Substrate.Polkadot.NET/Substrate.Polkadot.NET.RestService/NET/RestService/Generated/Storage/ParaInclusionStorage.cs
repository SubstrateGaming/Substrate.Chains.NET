//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Polkadot.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IParaInclusionStorage interface definition.
    /// </summary>
    public interface IParaInclusionStorage : IStorage
    {
        
        /// <summary>
        /// >> AvailabilityBitfields
        ///  The latest bitfield for each validator, referred to by their index in the validator set.
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.AvailabilityBitfieldRecord GetAvailabilityBitfields(string key);
        
        /// <summary>
        /// >> PendingAvailability
        ///  Candidates pending availability by `ParaId`.
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.CandidatePendingAvailability GetPendingAvailability(string key);
        
        /// <summary>
        /// >> PendingAvailabilityCommitments
        ///  The commitments of candidates pending availability, by `ParaId`.
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v4.CandidateCommitments GetPendingAvailabilityCommitments(string key);
    }
    
    /// <summary>
    /// ParaInclusionStorage class definition.
    /// </summary>
    public sealed class ParaInclusionStorage : IParaInclusionStorage
    {
        
        /// <summary>
        /// _availabilityBitfieldsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.AvailabilityBitfieldRecord> _availabilityBitfieldsTypedStorage;
        
        /// <summary>
        /// _pendingAvailabilityTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.CandidatePendingAvailability> _pendingAvailabilityTypedStorage;
        
        /// <summary>
        /// _pendingAvailabilityCommitmentsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v4.CandidateCommitments> _pendingAvailabilityCommitmentsTypedStorage;
        
        /// <summary>
        /// ParaInclusionStorage constructor.
        /// </summary>
        public ParaInclusionStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.AvailabilityBitfieldsTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.AvailabilityBitfieldRecord>("ParaInclusion.AvailabilityBitfields", storageDataProvider, storageChangeDelegates);
            this.PendingAvailabilityTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.CandidatePendingAvailability>("ParaInclusion.PendingAvailability", storageDataProvider, storageChangeDelegates);
            this.PendingAvailabilityCommitmentsTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v4.CandidateCommitments>("ParaInclusion.PendingAvailabilityCommitments", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _availabilityBitfieldsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.AvailabilityBitfieldRecord> AvailabilityBitfieldsTypedStorage
        {
            get
            {
                return _availabilityBitfieldsTypedStorage;
            }
            set
            {
                _availabilityBitfieldsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _pendingAvailabilityTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.CandidatePendingAvailability> PendingAvailabilityTypedStorage
        {
            get
            {
                return _pendingAvailabilityTypedStorage;
            }
            set
            {
                _pendingAvailabilityTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _pendingAvailabilityCommitmentsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v4.CandidateCommitments> PendingAvailabilityCommitmentsTypedStorage
        {
            get
            {
                return _pendingAvailabilityCommitmentsTypedStorage;
            }
            set
            {
                _pendingAvailabilityCommitmentsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await AvailabilityBitfieldsTypedStorage.InitializeAsync("ParaInclusion", "AvailabilityBitfields");
            await PendingAvailabilityTypedStorage.InitializeAsync("ParaInclusion", "PendingAvailability");
            await PendingAvailabilityCommitmentsTypedStorage.InitializeAsync("ParaInclusion", "PendingAvailabilityCommitments");
        }
        
        /// <summary>
        /// Implements any storage change for ParaInclusion.AvailabilityBitfields
        /// </summary>
        [StorageChange("ParaInclusion", "AvailabilityBitfields")]
        public void OnUpdateAvailabilityBitfields(string key, string data)
        {
            AvailabilityBitfieldsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> AvailabilityBitfields
        ///  The latest bitfield for each validator, referred to by their index in the validator set.
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.AvailabilityBitfieldRecord GetAvailabilityBitfields(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AvailabilityBitfieldsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.AvailabilityBitfieldRecord result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParaInclusion.PendingAvailability
        /// </summary>
        [StorageChange("ParaInclusion", "PendingAvailability")]
        public void OnUpdatePendingAvailability(string key, string data)
        {
            PendingAvailabilityTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> PendingAvailability
        ///  Candidates pending availability by `ParaId`.
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.CandidatePendingAvailability GetPendingAvailability(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PendingAvailabilityTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.CandidatePendingAvailability result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ParaInclusion.PendingAvailabilityCommitments
        /// </summary>
        [StorageChange("ParaInclusion", "PendingAvailabilityCommitments")]
        public void OnUpdatePendingAvailabilityCommitments(string key, string data)
        {
            PendingAvailabilityCommitmentsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> PendingAvailabilityCommitments
        ///  The commitments of candidates pending availability, by `ParaId`.
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v4.CandidateCommitments GetPendingAvailabilityCommitments(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PendingAvailabilityCommitmentsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v4.CandidateCommitments result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
