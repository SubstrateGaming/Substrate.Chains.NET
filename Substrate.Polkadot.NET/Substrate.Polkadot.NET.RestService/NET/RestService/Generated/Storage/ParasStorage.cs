//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Polkadot.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IParasStorage interface definition.
    /// </summary>
    public interface IParasStorage : IStorage
    {
        
        /// <summary>
        /// >> PvfActiveVoteMap
        ///  All currently active PVF pre-checking votes.
        /// 
        ///  Invariant:
        ///  - There are no PVF pre-checking votes that exists in list but not in the set and vice versa.
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.PvfCheckActiveVoteState GetPvfActiveVoteMap(string key);
        
        /// <summary>
        /// >> PvfActiveVoteList
        ///  The list of all currently active PVF votes. Auxiliary to `PvfActiveVoteMap`.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash> GetPvfActiveVoteList();
        
        /// <summary>
        /// >> Parachains
        ///  All parachains. Ordered ascending by `ParaId`. Parathreads are not included.
        /// 
        ///  Consider using the [`ParachainsCache`] type of modifying.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id> GetParachains();
        
        /// <summary>
        /// >> ParaLifecycles
        ///  The current lifecycle of a all known Para IDs.
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.EnumParaLifecycle GetParaLifecycles(string key);
        
        /// <summary>
        /// >> Heads
        ///  The head-data of every registered para.
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HeadData GetHeads(string key);
        
        /// <summary>
        /// >> CurrentCodeHash
        ///  The validation code hash of every live para.
        /// 
        ///  Corresponding code can be retrieved with [`CodeByHash`].
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash GetCurrentCodeHash(string key);
        
        /// <summary>
        /// >> PastCodeHash
        ///  Actual past code hash, indicated by the para id as well as the block number at which it
        ///  became outdated.
        /// 
        ///  Corresponding code can be retrieved with [`CodeByHash`].
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash GetPastCodeHash(string key);
        
        /// <summary>
        /// >> PastCodeMeta
        ///  Past code of parachains. The parachains themselves may not be registered anymore,
        ///  but we also keep their code on-chain for the same amount of time as outdated code
        ///  to keep it available for approval checkers.
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.ParaPastCodeMeta GetPastCodeMeta(string key);
        
        /// <summary>
        /// >> PastCodePruning
        ///  Which paras have past code that needs pruning and the relay-chain block at which the code was replaced.
        ///  Note that this is the actual height of the included block, not the expected height at which the
        ///  code upgrade would be applied, although they may be equal.
        ///  This is to ensure the entire acceptance period is covered, not an offset acceptance period starting
        ///  from the time at which the parachain perceives a code upgrade as having occurred.
        ///  Multiple entries for a single para are permitted. Ordered ascending by block number.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>> GetPastCodePruning();
        
        /// <summary>
        /// >> FutureCodeUpgrades
        ///  The block number at which the planned code change is expected for a para.
        ///  The change will be applied after the first parablock for this ID included which executes
        ///  in the context of a relay chain block with a number >= `expected_at`.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetFutureCodeUpgrades(string key);
        
        /// <summary>
        /// >> FutureCodeHash
        ///  The actual future code hash of a para.
        /// 
        ///  Corresponding code can be retrieved with [`CodeByHash`].
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash GetFutureCodeHash(string key);
        
        /// <summary>
        /// >> UpgradeGoAheadSignal
        ///  This is used by the relay-chain to communicate to a parachain a go-ahead with in the upgrade procedure.
        /// 
        ///  This value is absent when there are no upgrades scheduled or during the time the relay chain
        ///  performs the checks. It is set at the first relay-chain block when the corresponding parachain
        ///  can switch its upgrade function. As soon as the parachain's block is included, the value
        ///  gets reset to `None`.
        /// 
        ///  NOTE that this field is used by parachains via merkle storage proofs, therefore changing
        ///  the format will require migration of parachains.
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v2.EnumUpgradeGoAhead GetUpgradeGoAheadSignal(string key);
        
        /// <summary>
        /// >> UpgradeRestrictionSignal
        ///  This is used by the relay-chain to communicate that there are restrictions for performing
        ///  an upgrade for this parachain.
        /// 
        ///  This may be a because the parachain waits for the upgrade cooldown to expire. Another
        ///  potential use case is when we want to perform some maintenance (such as storage migration)
        ///  we could restrict upgrades to make the process simpler.
        /// 
        ///  NOTE that this field is used by parachains via merkle storage proofs, therefore changing
        ///  the format will require migration of parachains.
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v2.EnumUpgradeRestriction GetUpgradeRestrictionSignal(string key);
        
        /// <summary>
        /// >> UpgradeCooldowns
        ///  The list of parachains that are awaiting for their upgrade restriction to cooldown.
        /// 
        ///  Ordered ascending by block number.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>> GetUpgradeCooldowns();
        
        /// <summary>
        /// >> UpcomingUpgrades
        ///  The list of upcoming code upgrades. Each item is a pair of which para performs a code
        ///  upgrade and at which relay-chain block it is expected at.
        /// 
        ///  Ordered ascending by block number.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>> GetUpcomingUpgrades();
        
        /// <summary>
        /// >> ActionsQueue
        ///  The actions to perform during the start of a specific session index.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id> GetActionsQueue(string key);
        
        /// <summary>
        /// >> UpcomingParasGenesis
        ///  Upcoming paras instantiation arguments.
        /// 
        ///  NOTE that after PVF pre-checking is enabled the para genesis arg will have it's code set
        ///  to empty. Instead, the code will be saved into the storage right away via `CodeByHash`.
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.ParaGenesisArgs GetUpcomingParasGenesis(string key);
        
        /// <summary>
        /// >> CodeByHashRefs
        ///  The number of reference on the validation code in [`CodeByHash`] storage.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetCodeByHashRefs(string key);
        
        /// <summary>
        /// >> CodeByHash
        ///  Validation code stored by its hash.
        /// 
        ///  This storage is consistent with [`FutureCodeHash`], [`CurrentCodeHash`] and
        ///  [`PastCodeHash`].
        /// </summary>
        Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCode GetCodeByHash(string key);
    }
    
    /// <summary>
    /// ParasStorage class definition.
    /// </summary>
    public sealed class ParasStorage : IParasStorage
    {
        
        /// <summary>
        /// _pvfActiveVoteMapTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.PvfCheckActiveVoteState> _pvfActiveVoteMapTypedStorage;
        
        /// <summary>
        /// _pvfActiveVoteListTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash>> _pvfActiveVoteListTypedStorage;
        
        /// <summary>
        /// _parachainsTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>> _parachainsTypedStorage;
        
        /// <summary>
        /// _paraLifecyclesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.EnumParaLifecycle> _paraLifecyclesTypedStorage;
        
        /// <summary>
        /// _headsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HeadData> _headsTypedStorage;
        
        /// <summary>
        /// _currentCodeHashTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash> _currentCodeHashTypedStorage;
        
        /// <summary>
        /// _pastCodeHashTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash> _pastCodeHashTypedStorage;
        
        /// <summary>
        /// _pastCodeMetaTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.ParaPastCodeMeta> _pastCodeMetaTypedStorage;
        
        /// <summary>
        /// _pastCodePruningTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>>> _pastCodePruningTypedStorage;
        
        /// <summary>
        /// _futureCodeUpgradesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> _futureCodeUpgradesTypedStorage;
        
        /// <summary>
        /// _futureCodeHashTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash> _futureCodeHashTypedStorage;
        
        /// <summary>
        /// _upgradeGoAheadSignalTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v2.EnumUpgradeGoAhead> _upgradeGoAheadSignalTypedStorage;
        
        /// <summary>
        /// _upgradeRestrictionSignalTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v2.EnumUpgradeRestriction> _upgradeRestrictionSignalTypedStorage;
        
        /// <summary>
        /// _upgradeCooldownsTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>>> _upgradeCooldownsTypedStorage;
        
        /// <summary>
        /// _upcomingUpgradesTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>>> _upcomingUpgradesTypedStorage;
        
        /// <summary>
        /// _actionsQueueTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>> _actionsQueueTypedStorage;
        
        /// <summary>
        /// _upcomingParasGenesisTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.ParaGenesisArgs> _upcomingParasGenesisTypedStorage;
        
        /// <summary>
        /// _codeByHashRefsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> _codeByHashRefsTypedStorage;
        
        /// <summary>
        /// _codeByHashTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCode> _codeByHashTypedStorage;
        
        /// <summary>
        /// ParasStorage constructor.
        /// </summary>
        public ParasStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.PvfActiveVoteMapTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.PvfCheckActiveVoteState>("Paras.PvfActiveVoteMap", storageDataProvider, storageChangeDelegates);
            this.PvfActiveVoteListTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash>>("Paras.PvfActiveVoteList", storageDataProvider, storageChangeDelegates);
            this.ParachainsTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>>("Paras.Parachains", storageDataProvider, storageChangeDelegates);
            this.ParaLifecyclesTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.EnumParaLifecycle>("Paras.ParaLifecycles", storageDataProvider, storageChangeDelegates);
            this.HeadsTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HeadData>("Paras.Heads", storageDataProvider, storageChangeDelegates);
            this.CurrentCodeHashTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash>("Paras.CurrentCodeHash", storageDataProvider, storageChangeDelegates);
            this.PastCodeHashTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash>("Paras.PastCodeHash", storageDataProvider, storageChangeDelegates);
            this.PastCodeMetaTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.ParaPastCodeMeta>("Paras.PastCodeMeta", storageDataProvider, storageChangeDelegates);
            this.PastCodePruningTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>>>("Paras.PastCodePruning", storageDataProvider, storageChangeDelegates);
            this.FutureCodeUpgradesTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Paras.FutureCodeUpgrades", storageDataProvider, storageChangeDelegates);
            this.FutureCodeHashTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash>("Paras.FutureCodeHash", storageDataProvider, storageChangeDelegates);
            this.UpgradeGoAheadSignalTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v2.EnumUpgradeGoAhead>("Paras.UpgradeGoAheadSignal", storageDataProvider, storageChangeDelegates);
            this.UpgradeRestrictionSignalTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v2.EnumUpgradeRestriction>("Paras.UpgradeRestrictionSignal", storageDataProvider, storageChangeDelegates);
            this.UpgradeCooldownsTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>>>("Paras.UpgradeCooldowns", storageDataProvider, storageChangeDelegates);
            this.UpcomingUpgradesTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>>>("Paras.UpcomingUpgrades", storageDataProvider, storageChangeDelegates);
            this.ActionsQueueTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>>("Paras.ActionsQueue", storageDataProvider, storageChangeDelegates);
            this.UpcomingParasGenesisTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.ParaGenesisArgs>("Paras.UpcomingParasGenesis", storageDataProvider, storageChangeDelegates);
            this.CodeByHashRefsTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Paras.CodeByHashRefs", storageDataProvider, storageChangeDelegates);
            this.CodeByHashTypedStorage = new TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCode>("Paras.CodeByHash", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _pvfActiveVoteMapTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.PvfCheckActiveVoteState> PvfActiveVoteMapTypedStorage
        {
            get
            {
                return _pvfActiveVoteMapTypedStorage;
            }
            set
            {
                _pvfActiveVoteMapTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _pvfActiveVoteListTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash>> PvfActiveVoteListTypedStorage
        {
            get
            {
                return _pvfActiveVoteListTypedStorage;
            }
            set
            {
                _pvfActiveVoteListTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _parachainsTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>> ParachainsTypedStorage
        {
            get
            {
                return _parachainsTypedStorage;
            }
            set
            {
                _parachainsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _paraLifecyclesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.EnumParaLifecycle> ParaLifecyclesTypedStorage
        {
            get
            {
                return _paraLifecyclesTypedStorage;
            }
            set
            {
                _paraLifecyclesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _headsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HeadData> HeadsTypedStorage
        {
            get
            {
                return _headsTypedStorage;
            }
            set
            {
                _headsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _currentCodeHashTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash> CurrentCodeHashTypedStorage
        {
            get
            {
                return _currentCodeHashTypedStorage;
            }
            set
            {
                _currentCodeHashTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _pastCodeHashTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash> PastCodeHashTypedStorage
        {
            get
            {
                return _pastCodeHashTypedStorage;
            }
            set
            {
                _pastCodeHashTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _pastCodeMetaTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.ParaPastCodeMeta> PastCodeMetaTypedStorage
        {
            get
            {
                return _pastCodeMetaTypedStorage;
            }
            set
            {
                _pastCodeMetaTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _pastCodePruningTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>>> PastCodePruningTypedStorage
        {
            get
            {
                return _pastCodePruningTypedStorage;
            }
            set
            {
                _pastCodePruningTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _futureCodeUpgradesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> FutureCodeUpgradesTypedStorage
        {
            get
            {
                return _futureCodeUpgradesTypedStorage;
            }
            set
            {
                _futureCodeUpgradesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _futureCodeHashTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash> FutureCodeHashTypedStorage
        {
            get
            {
                return _futureCodeHashTypedStorage;
            }
            set
            {
                _futureCodeHashTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _upgradeGoAheadSignalTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v2.EnumUpgradeGoAhead> UpgradeGoAheadSignalTypedStorage
        {
            get
            {
                return _upgradeGoAheadSignalTypedStorage;
            }
            set
            {
                _upgradeGoAheadSignalTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _upgradeRestrictionSignalTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v2.EnumUpgradeRestriction> UpgradeRestrictionSignalTypedStorage
        {
            get
            {
                return _upgradeRestrictionSignalTypedStorage;
            }
            set
            {
                _upgradeRestrictionSignalTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _upgradeCooldownsTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>>> UpgradeCooldownsTypedStorage
        {
            get
            {
                return _upgradeCooldownsTypedStorage;
            }
            set
            {
                _upgradeCooldownsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _upcomingUpgradesTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>>> UpcomingUpgradesTypedStorage
        {
            get
            {
                return _upcomingUpgradesTypedStorage;
            }
            set
            {
                _upcomingUpgradesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _actionsQueueTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id>> ActionsQueueTypedStorage
        {
            get
            {
                return _actionsQueueTypedStorage;
            }
            set
            {
                _actionsQueueTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _upcomingParasGenesisTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.ParaGenesisArgs> UpcomingParasGenesisTypedStorage
        {
            get
            {
                return _upcomingParasGenesisTypedStorage;
            }
            set
            {
                _upcomingParasGenesisTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _codeByHashRefsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> CodeByHashRefsTypedStorage
        {
            get
            {
                return _codeByHashRefsTypedStorage;
            }
            set
            {
                _codeByHashRefsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _codeByHashTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCode> CodeByHashTypedStorage
        {
            get
            {
                return _codeByHashTypedStorage;
            }
            set
            {
                _codeByHashTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await PvfActiveVoteMapTypedStorage.InitializeAsync("Paras", "PvfActiveVoteMap");
            await PvfActiveVoteListTypedStorage.InitializeAsync("Paras", "PvfActiveVoteList");
            await ParachainsTypedStorage.InitializeAsync("Paras", "Parachains");
            await ParaLifecyclesTypedStorage.InitializeAsync("Paras", "ParaLifecycles");
            await HeadsTypedStorage.InitializeAsync("Paras", "Heads");
            await CurrentCodeHashTypedStorage.InitializeAsync("Paras", "CurrentCodeHash");
            await PastCodeHashTypedStorage.InitializeAsync("Paras", "PastCodeHash");
            await PastCodeMetaTypedStorage.InitializeAsync("Paras", "PastCodeMeta");
            await PastCodePruningTypedStorage.InitializeAsync("Paras", "PastCodePruning");
            await FutureCodeUpgradesTypedStorage.InitializeAsync("Paras", "FutureCodeUpgrades");
            await FutureCodeHashTypedStorage.InitializeAsync("Paras", "FutureCodeHash");
            await UpgradeGoAheadSignalTypedStorage.InitializeAsync("Paras", "UpgradeGoAheadSignal");
            await UpgradeRestrictionSignalTypedStorage.InitializeAsync("Paras", "UpgradeRestrictionSignal");
            await UpgradeCooldownsTypedStorage.InitializeAsync("Paras", "UpgradeCooldowns");
            await UpcomingUpgradesTypedStorage.InitializeAsync("Paras", "UpcomingUpgrades");
            await ActionsQueueTypedStorage.InitializeAsync("Paras", "ActionsQueue");
            await UpcomingParasGenesisTypedStorage.InitializeAsync("Paras", "UpcomingParasGenesis");
            await CodeByHashRefsTypedStorage.InitializeAsync("Paras", "CodeByHashRefs");
            await CodeByHashTypedStorage.InitializeAsync("Paras", "CodeByHash");
        }
        
        /// <summary>
        /// Implements any storage change for Paras.PvfActiveVoteMap
        /// </summary>
        [StorageChange("Paras", "PvfActiveVoteMap")]
        public void OnUpdatePvfActiveVoteMap(string key, string data)
        {
            PvfActiveVoteMapTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> PvfActiveVoteMap
        ///  All currently active PVF pre-checking votes.
        /// 
        ///  Invariant:
        ///  - There are no PVF pre-checking votes that exists in list but not in the set and vice versa.
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.PvfCheckActiveVoteState GetPvfActiveVoteMap(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PvfActiveVoteMapTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.PvfCheckActiveVoteState result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Paras.PvfActiveVoteList
        /// </summary>
        [StorageChange("Paras", "PvfActiveVoteList")]
        public void OnUpdatePvfActiveVoteList(string data)
        {
            PvfActiveVoteListTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> PvfActiveVoteList
        ///  The list of all currently active PVF votes. Auxiliary to `PvfActiveVoteMap`.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash> GetPvfActiveVoteList()
        {
            return PvfActiveVoteListTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Paras.Parachains
        /// </summary>
        [StorageChange("Paras", "Parachains")]
        public void OnUpdateParachains(string data)
        {
            ParachainsTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Parachains
        ///  All parachains. Ordered ascending by `ParaId`. Parathreads are not included.
        /// 
        ///  Consider using the [`ParachainsCache`] type of modifying.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id> GetParachains()
        {
            return ParachainsTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Paras.ParaLifecycles
        /// </summary>
        [StorageChange("Paras", "ParaLifecycles")]
        public void OnUpdateParaLifecycles(string key, string data)
        {
            ParaLifecyclesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ParaLifecycles
        ///  The current lifecycle of a all known Para IDs.
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.EnumParaLifecycle GetParaLifecycles(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ParaLifecyclesTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.EnumParaLifecycle result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Paras.Heads
        /// </summary>
        [StorageChange("Paras", "Heads")]
        public void OnUpdateHeads(string key, string data)
        {
            HeadsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Heads
        ///  The head-data of every registered para.
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HeadData GetHeads(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (HeadsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.HeadData result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Paras.CurrentCodeHash
        /// </summary>
        [StorageChange("Paras", "CurrentCodeHash")]
        public void OnUpdateCurrentCodeHash(string key, string data)
        {
            CurrentCodeHashTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> CurrentCodeHash
        ///  The validation code hash of every live para.
        /// 
        ///  Corresponding code can be retrieved with [`CodeByHash`].
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash GetCurrentCodeHash(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (CurrentCodeHashTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Paras.PastCodeHash
        /// </summary>
        [StorageChange("Paras", "PastCodeHash")]
        public void OnUpdatePastCodeHash(string key, string data)
        {
            PastCodeHashTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> PastCodeHash
        ///  Actual past code hash, indicated by the para id as well as the block number at which it
        ///  became outdated.
        /// 
        ///  Corresponding code can be retrieved with [`CodeByHash`].
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash GetPastCodeHash(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PastCodeHashTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Paras.PastCodeMeta
        /// </summary>
        [StorageChange("Paras", "PastCodeMeta")]
        public void OnUpdatePastCodeMeta(string key, string data)
        {
            PastCodeMetaTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> PastCodeMeta
        ///  Past code of parachains. The parachains themselves may not be registered anymore,
        ///  but we also keep their code on-chain for the same amount of time as outdated code
        ///  to keep it available for approval checkers.
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.ParaPastCodeMeta GetPastCodeMeta(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PastCodeMetaTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.ParaPastCodeMeta result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Paras.PastCodePruning
        /// </summary>
        [StorageChange("Paras", "PastCodePruning")]
        public void OnUpdatePastCodePruning(string data)
        {
            PastCodePruningTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> PastCodePruning
        ///  Which paras have past code that needs pruning and the relay-chain block at which the code was replaced.
        ///  Note that this is the actual height of the included block, not the expected height at which the
        ///  code upgrade would be applied, although they may be equal.
        ///  This is to ensure the entire acceptance period is covered, not an offset acceptance period starting
        ///  from the time at which the parachain perceives a code upgrade as having occurred.
        ///  Multiple entries for a single para are permitted. Ordered ascending by block number.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>> GetPastCodePruning()
        {
            return PastCodePruningTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Paras.FutureCodeUpgrades
        /// </summary>
        [StorageChange("Paras", "FutureCodeUpgrades")]
        public void OnUpdateFutureCodeUpgrades(string key, string data)
        {
            FutureCodeUpgradesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> FutureCodeUpgrades
        ///  The block number at which the planned code change is expected for a para.
        ///  The change will be applied after the first parablock for this ID included which executes
        ///  in the context of a relay chain block with a number >= `expected_at`.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetFutureCodeUpgrades(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (FutureCodeUpgradesTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Paras.FutureCodeHash
        /// </summary>
        [StorageChange("Paras", "FutureCodeHash")]
        public void OnUpdateFutureCodeHash(string key, string data)
        {
            FutureCodeHashTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> FutureCodeHash
        ///  The actual future code hash of a para.
        /// 
        ///  Corresponding code can be retrieved with [`CodeByHash`].
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash GetFutureCodeHash(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (FutureCodeHashTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCodeHash result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Paras.UpgradeGoAheadSignal
        /// </summary>
        [StorageChange("Paras", "UpgradeGoAheadSignal")]
        public void OnUpdateUpgradeGoAheadSignal(string key, string data)
        {
            UpgradeGoAheadSignalTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> UpgradeGoAheadSignal
        ///  This is used by the relay-chain to communicate to a parachain a go-ahead with in the upgrade procedure.
        /// 
        ///  This value is absent when there are no upgrades scheduled or during the time the relay chain
        ///  performs the checks. It is set at the first relay-chain block when the corresponding parachain
        ///  can switch its upgrade function. As soon as the parachain's block is included, the value
        ///  gets reset to `None`.
        /// 
        ///  NOTE that this field is used by parachains via merkle storage proofs, therefore changing
        ///  the format will require migration of parachains.
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v2.EnumUpgradeGoAhead GetUpgradeGoAheadSignal(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (UpgradeGoAheadSignalTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v2.EnumUpgradeGoAhead result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Paras.UpgradeRestrictionSignal
        /// </summary>
        [StorageChange("Paras", "UpgradeRestrictionSignal")]
        public void OnUpdateUpgradeRestrictionSignal(string key, string data)
        {
            UpgradeRestrictionSignalTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> UpgradeRestrictionSignal
        ///  This is used by the relay-chain to communicate that there are restrictions for performing
        ///  an upgrade for this parachain.
        /// 
        ///  This may be a because the parachain waits for the upgrade cooldown to expire. Another
        ///  potential use case is when we want to perform some maintenance (such as storage migration)
        ///  we could restrict upgrades to make the process simpler.
        /// 
        ///  NOTE that this field is used by parachains via merkle storage proofs, therefore changing
        ///  the format will require migration of parachains.
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v2.EnumUpgradeRestriction GetUpgradeRestrictionSignal(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (UpgradeRestrictionSignalTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v2.EnumUpgradeRestriction result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Paras.UpgradeCooldowns
        /// </summary>
        [StorageChange("Paras", "UpgradeCooldowns")]
        public void OnUpdateUpgradeCooldowns(string data)
        {
            UpgradeCooldownsTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> UpgradeCooldowns
        ///  The list of parachains that are awaiting for their upgrade restriction to cooldown.
        /// 
        ///  Ordered ascending by block number.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>> GetUpgradeCooldowns()
        {
            return UpgradeCooldownsTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Paras.UpcomingUpgrades
        /// </summary>
        [StorageChange("Paras", "UpcomingUpgrades")]
        public void OnUpdateUpcomingUpgrades(string data)
        {
            UpcomingUpgradesTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> UpcomingUpgrades
        ///  The list of upcoming code upgrades. Each item is a pair of which para performs a code
        ///  upgrade and at which relay-chain block it is expected at.
        /// 
        ///  Ordered ascending by block number.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id, Substrate.NetApi.Model.Types.Primitive.U32>> GetUpcomingUpgrades()
        {
            return UpcomingUpgradesTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Paras.ActionsQueue
        /// </summary>
        [StorageChange("Paras", "ActionsQueue")]
        public void OnUpdateActionsQueue(string key, string data)
        {
            ActionsQueueTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ActionsQueue
        ///  The actions to perform during the start of a specific session index.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id> GetActionsQueue(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ActionsQueueTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.Id> result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Paras.UpcomingParasGenesis
        /// </summary>
        [StorageChange("Paras", "UpcomingParasGenesis")]
        public void OnUpdateUpcomingParasGenesis(string key, string data)
        {
            UpcomingParasGenesisTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> UpcomingParasGenesis
        ///  Upcoming paras instantiation arguments.
        /// 
        ///  NOTE that after PVF pre-checking is enabled the para genesis arg will have it's code set
        ///  to empty. Instead, the code will be saved into the storage right away via `CodeByHash`.
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.ParaGenesisArgs GetUpcomingParasGenesis(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (UpcomingParasGenesisTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras.ParaGenesisArgs result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Paras.CodeByHashRefs
        /// </summary>
        [StorageChange("Paras", "CodeByHashRefs")]
        public void OnUpdateCodeByHashRefs(string key, string data)
        {
            CodeByHashRefsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> CodeByHashRefs
        ///  The number of reference on the validation code in [`CodeByHash`] storage.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetCodeByHashRefs(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (CodeByHashRefsTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Paras.CodeByHash
        /// </summary>
        [StorageChange("Paras", "CodeByHash")]
        public void OnUpdateCodeByHash(string key, string data)
        {
            CodeByHashTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> CodeByHash
        ///  Validation code stored by its hash.
        /// 
        ///  This storage is consistent with [`FutureCodeHash`], [`CurrentCodeHash`] and
        ///  [`PastCodeHash`].
        /// </summary>
        public Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCode GetCodeByHash(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (CodeByHashTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives.ValidationCode result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
