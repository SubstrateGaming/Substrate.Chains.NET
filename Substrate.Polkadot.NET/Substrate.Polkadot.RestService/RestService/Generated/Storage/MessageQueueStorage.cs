//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Polkadot.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IMessageQueueStorage interface definition.
    /// </summary>
    public interface IMessageQueueStorage : IStorage
    {
        
        /// <summary>
        /// >> BookStateFor
        ///  The index of the first and last (non-empty) pages.
        /// </summary>
        Substrate.Polkadot.NetApiExt.Generated.Model.pallet_message_queue.BookState GetBookStateFor(string key);
        
        /// <summary>
        /// >> ServiceHead
        ///  The origin at which we should begin servicing.
        /// </summary>
        Substrate.Polkadot.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.EnumAggregateMessageOrigin GetServiceHead();
        
        /// <summary>
        /// >> Pages
        ///  The map of page indices to pages.
        /// </summary>
        Substrate.Polkadot.NetApiExt.Generated.Model.pallet_message_queue.Page GetPages(string key);
    }
    
    /// <summary>
    /// MessageQueueStorage class definition.
    /// </summary>
    public sealed class MessageQueueStorage : IMessageQueueStorage
    {
        
        /// <summary>
        /// _bookStateForTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NetApiExt.Generated.Model.pallet_message_queue.BookState> _bookStateForTypedStorage;
        
        /// <summary>
        /// _serviceHeadTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Polkadot.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.EnumAggregateMessageOrigin> _serviceHeadTypedStorage;
        
        /// <summary>
        /// _pagesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Polkadot.NetApiExt.Generated.Model.pallet_message_queue.Page> _pagesTypedStorage;
        
        /// <summary>
        /// MessageQueueStorage constructor.
        /// </summary>
        public MessageQueueStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.BookStateForTypedStorage = new TypedMapStorage<Substrate.Polkadot.NetApiExt.Generated.Model.pallet_message_queue.BookState>("MessageQueue.BookStateFor", storageDataProvider, storageChangeDelegates);
            this.ServiceHeadTypedStorage = new TypedStorage<Substrate.Polkadot.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.EnumAggregateMessageOrigin>("MessageQueue.ServiceHead", storageDataProvider, storageChangeDelegates);
            this.PagesTypedStorage = new TypedMapStorage<Substrate.Polkadot.NetApiExt.Generated.Model.pallet_message_queue.Page>("MessageQueue.Pages", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _bookStateForTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NetApiExt.Generated.Model.pallet_message_queue.BookState> BookStateForTypedStorage
        {
            get
            {
                return _bookStateForTypedStorage;
            }
            set
            {
                _bookStateForTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _serviceHeadTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Polkadot.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.EnumAggregateMessageOrigin> ServiceHeadTypedStorage
        {
            get
            {
                return _serviceHeadTypedStorage;
            }
            set
            {
                _serviceHeadTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _pagesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Polkadot.NetApiExt.Generated.Model.pallet_message_queue.Page> PagesTypedStorage
        {
            get
            {
                return _pagesTypedStorage;
            }
            set
            {
                _pagesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await BookStateForTypedStorage.InitializeAsync("MessageQueue", "BookStateFor");
            await ServiceHeadTypedStorage.InitializeAsync("MessageQueue", "ServiceHead");
            await PagesTypedStorage.InitializeAsync("MessageQueue", "Pages");
        }
        
        /// <summary>
        /// Implements any storage change for MessageQueue.BookStateFor
        /// </summary>
        [StorageChange("MessageQueue", "BookStateFor")]
        public void OnUpdateBookStateFor(string key, string data)
        {
            BookStateForTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> BookStateFor
        ///  The index of the first and last (non-empty) pages.
        /// </summary>
        public Substrate.Polkadot.NetApiExt.Generated.Model.pallet_message_queue.BookState GetBookStateFor(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (BookStateForTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NetApiExt.Generated.Model.pallet_message_queue.BookState result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for MessageQueue.ServiceHead
        /// </summary>
        [StorageChange("MessageQueue", "ServiceHead")]
        public void OnUpdateServiceHead(string data)
        {
            ServiceHeadTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> ServiceHead
        ///  The origin at which we should begin servicing.
        /// </summary>
        public Substrate.Polkadot.NetApiExt.Generated.Model.polkadot_runtime_parachains.inclusion.EnumAggregateMessageOrigin GetServiceHead()
        {
            return ServiceHeadTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for MessageQueue.Pages
        /// </summary>
        [StorageChange("MessageQueue", "Pages")]
        public void OnUpdatePages(string key, string data)
        {
            PagesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Pages
        ///  The map of page indices to pages.
        /// </summary>
        public Substrate.Polkadot.NetApiExt.Generated.Model.pallet_message_queue.Page GetPages(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PagesTypedStorage.Dictionary.TryGetValue(key, out Substrate.Polkadot.NetApiExt.Generated.Model.pallet_message_queue.Page result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
