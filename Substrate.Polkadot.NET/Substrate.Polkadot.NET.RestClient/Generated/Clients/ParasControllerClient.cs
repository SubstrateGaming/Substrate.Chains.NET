//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Polkadot.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_runtime_parachains.paras;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_parachain.primitives;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.Polkadot.NET.NetApiExt.Generated.Model.polkadot_primitives.v4;
   using Substrate.Polkadot.NET.RestClient.Generated.Interfaces;
   
   public sealed class ParasControllerClient : BaseClient, IParasControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public ParasControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<PvfCheckActiveVoteState> GetPvfActiveVoteMap(ValidationCodeHash key)
      {
         return await SendRequestAsync<PvfCheckActiveVoteState>(_httpClient, "paras/pvfactivevotemap", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.PvfActiveVoteMapParams(key));
      }
      public async Task<bool> SubscribePvfActiveVoteMap(ValidationCodeHash key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.PvfActiveVoteMap", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.PvfActiveVoteMapParams(key));
      }
      public async Task<BaseVec<ValidationCodeHash>> GetPvfActiveVoteList()
      {
         return await SendRequestAsync<BaseVec<ValidationCodeHash>>(_httpClient, "paras/pvfactivevotelist");
      }
      public async Task<bool> SubscribePvfActiveVoteList()
      {
         return await _subscriptionClient.SubscribeAsync("Paras.PvfActiveVoteList");
      }
      public async Task<BaseVec<Id>> GetParachains()
      {
         return await SendRequestAsync<BaseVec<Id>>(_httpClient, "paras/parachains");
      }
      public async Task<bool> SubscribeParachains()
      {
         return await _subscriptionClient.SubscribeAsync("Paras.Parachains");
      }
      public async Task<EnumParaLifecycle> GetParaLifecycles(Id key)
      {
         return await SendRequestAsync<EnumParaLifecycle>(_httpClient, "paras/paralifecycles", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.ParaLifecyclesParams(key));
      }
      public async Task<bool> SubscribeParaLifecycles(Id key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.ParaLifecycles", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.ParaLifecyclesParams(key));
      }
      public async Task<HeadData> GetHeads(Id key)
      {
         return await SendRequestAsync<HeadData>(_httpClient, "paras/heads", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.HeadsParams(key));
      }
      public async Task<bool> SubscribeHeads(Id key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.Heads", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.HeadsParams(key));
      }
      public async Task<ValidationCodeHash> GetCurrentCodeHash(Id key)
      {
         return await SendRequestAsync<ValidationCodeHash>(_httpClient, "paras/currentcodehash", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.CurrentCodeHashParams(key));
      }
      public async Task<bool> SubscribeCurrentCodeHash(Id key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.CurrentCodeHash", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.CurrentCodeHashParams(key));
      }
      public async Task<ValidationCodeHash> GetPastCodeHash(BaseTuple<Id, U32> key)
      {
         return await SendRequestAsync<ValidationCodeHash>(_httpClient, "paras/pastcodehash", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.PastCodeHashParams(key));
      }
      public async Task<bool> SubscribePastCodeHash(BaseTuple<Id, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.PastCodeHash", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.PastCodeHashParams(key));
      }
      public async Task<ParaPastCodeMeta> GetPastCodeMeta(Id key)
      {
         return await SendRequestAsync<ParaPastCodeMeta>(_httpClient, "paras/pastcodemeta", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.PastCodeMetaParams(key));
      }
      public async Task<bool> SubscribePastCodeMeta(Id key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.PastCodeMeta", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.PastCodeMetaParams(key));
      }
      public async Task<BaseVec<BaseTuple<Id, U32>>> GetPastCodePruning()
      {
         return await SendRequestAsync<BaseVec<BaseTuple<Id, U32>>>(_httpClient, "paras/pastcodepruning");
      }
      public async Task<bool> SubscribePastCodePruning()
      {
         return await _subscriptionClient.SubscribeAsync("Paras.PastCodePruning");
      }
      public async Task<U32> GetFutureCodeUpgrades(Id key)
      {
         return await SendRequestAsync<U32>(_httpClient, "paras/futurecodeupgrades", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.FutureCodeUpgradesParams(key));
      }
      public async Task<bool> SubscribeFutureCodeUpgrades(Id key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.FutureCodeUpgrades", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.FutureCodeUpgradesParams(key));
      }
      public async Task<ValidationCodeHash> GetFutureCodeHash(Id key)
      {
         return await SendRequestAsync<ValidationCodeHash>(_httpClient, "paras/futurecodehash", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.FutureCodeHashParams(key));
      }
      public async Task<bool> SubscribeFutureCodeHash(Id key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.FutureCodeHash", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.FutureCodeHashParams(key));
      }
      public async Task<EnumUpgradeGoAhead> GetUpgradeGoAheadSignal(Id key)
      {
         return await SendRequestAsync<EnumUpgradeGoAhead>(_httpClient, "paras/upgradegoaheadsignal", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.UpgradeGoAheadSignalParams(key));
      }
      public async Task<bool> SubscribeUpgradeGoAheadSignal(Id key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.UpgradeGoAheadSignal", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.UpgradeGoAheadSignalParams(key));
      }
      public async Task<EnumUpgradeRestriction> GetUpgradeRestrictionSignal(Id key)
      {
         return await SendRequestAsync<EnumUpgradeRestriction>(_httpClient, "paras/upgraderestrictionsignal", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.UpgradeRestrictionSignalParams(key));
      }
      public async Task<bool> SubscribeUpgradeRestrictionSignal(Id key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.UpgradeRestrictionSignal", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.UpgradeRestrictionSignalParams(key));
      }
      public async Task<BaseVec<BaseTuple<Id, U32>>> GetUpgradeCooldowns()
      {
         return await SendRequestAsync<BaseVec<BaseTuple<Id, U32>>>(_httpClient, "paras/upgradecooldowns");
      }
      public async Task<bool> SubscribeUpgradeCooldowns()
      {
         return await _subscriptionClient.SubscribeAsync("Paras.UpgradeCooldowns");
      }
      public async Task<BaseVec<BaseTuple<Id, U32>>> GetUpcomingUpgrades()
      {
         return await SendRequestAsync<BaseVec<BaseTuple<Id, U32>>>(_httpClient, "paras/upcomingupgrades");
      }
      public async Task<bool> SubscribeUpcomingUpgrades()
      {
         return await _subscriptionClient.SubscribeAsync("Paras.UpcomingUpgrades");
      }
      public async Task<BaseVec<Id>> GetActionsQueue(U32 key)
      {
         return await SendRequestAsync<BaseVec<Id>>(_httpClient, "paras/actionsqueue", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.ActionsQueueParams(key));
      }
      public async Task<bool> SubscribeActionsQueue(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.ActionsQueue", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.ActionsQueueParams(key));
      }
      public async Task<ParaGenesisArgs> GetUpcomingParasGenesis(Id key)
      {
         return await SendRequestAsync<ParaGenesisArgs>(_httpClient, "paras/upcomingparasgenesis", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.UpcomingParasGenesisParams(key));
      }
      public async Task<bool> SubscribeUpcomingParasGenesis(Id key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.UpcomingParasGenesis", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.UpcomingParasGenesisParams(key));
      }
      public async Task<U32> GetCodeByHashRefs(ValidationCodeHash key)
      {
         return await SendRequestAsync<U32>(_httpClient, "paras/codebyhashrefs", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.CodeByHashRefsParams(key));
      }
      public async Task<bool> SubscribeCodeByHashRefs(ValidationCodeHash key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.CodeByHashRefs", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.CodeByHashRefsParams(key));
      }
      public async Task<ValidationCode> GetCodeByHash(ValidationCodeHash key)
      {
         return await SendRequestAsync<ValidationCode>(_httpClient, "paras/codebyhash", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.CodeByHashParams(key));
      }
      public async Task<bool> SubscribeCodeByHash(ValidationCodeHash key)
      {
         return await _subscriptionClient.SubscribeAsync("Paras.CodeByHash", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ParasStorage.CodeByHashParams(key));
      }
   }
}
