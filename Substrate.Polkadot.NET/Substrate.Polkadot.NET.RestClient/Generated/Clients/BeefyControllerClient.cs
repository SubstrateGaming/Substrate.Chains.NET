//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Polkadot.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Polkadot.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.Polkadot.NET.RestClient.Generated.Interfaces;
   
   public sealed class BeefyControllerClient : BaseClient, IBeefyControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public BeefyControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<BoundedVecT45> GetAuthorities()
      {
         return await SendRequestAsync<BoundedVecT45>(_httpClient, "beefy/authorities");
      }
      public async Task<bool> SubscribeAuthorities()
      {
         return await _subscriptionClient.SubscribeAsync("Beefy.Authorities");
      }
      public async Task<U64> GetValidatorSetId()
      {
         return await SendRequestAsync<U64>(_httpClient, "beefy/validatorsetid");
      }
      public async Task<bool> SubscribeValidatorSetId()
      {
         return await _subscriptionClient.SubscribeAsync("Beefy.ValidatorSetId");
      }
      public async Task<BoundedVecT45> GetNextAuthorities()
      {
         return await SendRequestAsync<BoundedVecT45>(_httpClient, "beefy/nextauthorities");
      }
      public async Task<bool> SubscribeNextAuthorities()
      {
         return await _subscriptionClient.SubscribeAsync("Beefy.NextAuthorities");
      }
      public async Task<U32> GetSetIdSession(U64 key)
      {
         return await SendRequestAsync<U32>(_httpClient, "beefy/setidsession", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.BeefyStorage.SetIdSessionParams(key));
      }
      public async Task<bool> SubscribeSetIdSession(U64 key)
      {
         return await _subscriptionClient.SubscribeAsync("Beefy.SetIdSession", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.BeefyStorage.SetIdSessionParams(key));
      }
      public async Task<BaseOpt<U32>> GetGenesisBlock()
      {
         return await SendRequestAsync<BaseOpt<U32>>(_httpClient, "beefy/genesisblock");
      }
      public async Task<bool> SubscribeGenesisBlock()
      {
         return await _subscriptionClient.SubscribeAsync("Beefy.GenesisBlock");
      }
   }
}
