//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Polkadot.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.Polkadot.NET.NetApiExt.Generated.Model.bounded_collections.weak_bounded_vec;
   using Substrate.Polkadot.NET.RestClient.Generated.Interfaces;
   
   public sealed class ImOnlineControllerClient : BaseClient, IImOnlineControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public ImOnlineControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<U32> GetHeartbeatAfter()
      {
         return await SendRequestAsync<U32>(_httpClient, "imonline/heartbeatafter");
      }
      public async Task<bool> SubscribeHeartbeatAfter()
      {
         return await _subscriptionClient.SubscribeAsync("ImOnline.HeartbeatAfter");
      }
      public async Task<WeakBoundedVecT5> GetKeys()
      {
         return await SendRequestAsync<WeakBoundedVecT5>(_httpClient, "imonline/keys");
      }
      public async Task<bool> SubscribeKeys()
      {
         return await _subscriptionClient.SubscribeAsync("ImOnline.Keys");
      }
      public async Task<Bool> GetReceivedHeartbeats(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, U32> key)
      {
         return await SendRequestAsync<Bool>(_httpClient, "imonline/receivedheartbeats", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ImOnlineStorage.ReceivedHeartbeatsParams(key));
      }
      public async Task<bool> SubscribeReceivedHeartbeats(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("ImOnline.ReceivedHeartbeats", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ImOnlineStorage.ReceivedHeartbeatsParams(key));
      }
      public async Task<U32> GetAuthoredBlocks(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> key)
      {
         return await SendRequestAsync<U32>(_httpClient, "imonline/authoredblocks", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ImOnlineStorage.AuthoredBlocksParams(key));
      }
      public async Task<bool> SubscribeAuthoredBlocks(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, Substrate.Polkadot.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> key)
      {
         return await _subscriptionClient.SubscribeAsync("ImOnline.AuthoredBlocks", Substrate.Polkadot.NET.NetApiExt.Generated.Storage.ImOnlineStorage.AuthoredBlocksParams(key));
      }
   }
}
