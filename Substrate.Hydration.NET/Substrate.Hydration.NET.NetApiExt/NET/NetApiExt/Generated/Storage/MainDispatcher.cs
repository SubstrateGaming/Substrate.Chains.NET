//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Hydration.NET.NetApiExt.Generated.Storage
{
    
    
    /// <summary>
    /// >> DispatcherStorage
    /// </summary>
    public sealed class DispatcherStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> DispatcherStorage Constructor
        /// </summary>
        public DispatcherStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Dispatcher", "AaveManagerAccount"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.Hydration.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Dispatcher", "ExtraGas"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
        }
        
        /// <summary>
        /// >> AaveManagerAccountParams
        /// </summary>
        public static string AaveManagerAccountParams()
        {
            return RequestGenerator.GetStorage("Dispatcher", "AaveManagerAccount", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> AaveManagerAccountDefault
        /// Default value as hex string
        /// </summary>
        public static string AaveManagerAccountDefault()
        {
            return "0xAA7E0000000000000000000000000000000AA7E0000000000000000000000000";
        }
        
        /// <summary>
        /// >> AaveManagerAccount
        /// </summary>
        public async Task<Substrate.Hydration.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> AaveManagerAccount(string blockhash, CancellationToken token)
        {
            string parameters = DispatcherStorage.AaveManagerAccountParams();
            var result = await _client.GetStorageAsync<Substrate.Hydration.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> ExtraGasParams
        /// </summary>
        public static string ExtraGasParams()
        {
            return RequestGenerator.GetStorage("Dispatcher", "ExtraGas", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> ExtraGasDefault
        /// Default value as hex string
        /// </summary>
        public static string ExtraGasDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> ExtraGas
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> ExtraGas(string blockhash, CancellationToken token)
        {
            string parameters = DispatcherStorage.ExtraGasParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> DispatcherCalls
    /// </summary>
    public sealed class DispatcherCalls
    {
        
        /// <summary>
        /// >> dispatch_as_treasury
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method DispatchAsTreasury(Substrate.Hydration.NET.NetApiExt.Generated.Model.hydradx_runtime.EnumRuntimeCall call)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(call.Encode());
            return new Method(40, "Dispatcher", 0, "dispatch_as_treasury", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> dispatch_as_aave_manager
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method DispatchAsAaveManager(Substrate.Hydration.NET.NetApiExt.Generated.Model.hydradx_runtime.EnumRuntimeCall call)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(call.Encode());
            return new Method(40, "Dispatcher", 1, "dispatch_as_aave_manager", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> note_aave_manager
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method NoteAaveManager(Substrate.Hydration.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 account)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(account.Encode());
            return new Method(40, "Dispatcher", 2, "note_aave_manager", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> dispatch_with_extra_gas
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method DispatchWithExtraGas(Substrate.Hydration.NET.NetApiExt.Generated.Model.hydradx_runtime.EnumRuntimeCall call, Substrate.NetApi.Model.Types.Primitive.U64 extra_gas)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(call.Encode());
            byteArray.AddRange(extra_gas.Encode());
            return new Method(40, "Dispatcher", 3, "dispatch_with_extra_gas", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> DispatcherConstants
    /// </summary>
    public sealed class DispatcherConstants
    {
    }
}
