//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Hydration.NET.NetApiExt.Generated.Storage
{
    
    
    /// <summary>
    /// >> LiquidationStorage
    /// </summary>
    public sealed class LiquidationStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> LiquidationStorage Constructor
        /// </summary>
        public LiquidationStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Liquidation", "BorrowingContract"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.Hydration.NET.NetApiExt.Generated.Model.primitive_types.H160)));
        }
        
        /// <summary>
        /// >> BorrowingContractParams
        ///  Borrowing market contract address
        /// </summary>
        public static string BorrowingContractParams()
        {
            return RequestGenerator.GetStorage("Liquidation", "BorrowingContract", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> BorrowingContractDefault
        /// Default value as hex string
        /// </summary>
        public static string BorrowingContractDefault()
        {
            return "0x1B02E051683B5CFAC5929C25E84ADB26ECF87B38";
        }
        
        /// <summary>
        /// >> BorrowingContract
        ///  Borrowing market contract address
        /// </summary>
        public async Task<Substrate.Hydration.NET.NetApiExt.Generated.Model.primitive_types.H160> BorrowingContract(string blockhash, CancellationToken token)
        {
            string parameters = LiquidationStorage.BorrowingContractParams();
            var result = await _client.GetStorageAsync<Substrate.Hydration.NET.NetApiExt.Generated.Model.primitive_types.H160>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> LiquidationCalls
    /// </summary>
    public sealed class LiquidationCalls
    {
        
        /// <summary>
        /// >> liquidate
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Liquidate(Substrate.NetApi.Model.Types.Primitive.U32 collateral_asset, Substrate.NetApi.Model.Types.Primitive.U32 debt_asset, Substrate.Hydration.NET.NetApiExt.Generated.Model.primitive_types.H160 user, Substrate.NetApi.Model.Types.Primitive.U128 debt_to_cover, Substrate.Hydration.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT11 route)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(collateral_asset.Encode());
            byteArray.AddRange(debt_asset.Encode());
            byteArray.AddRange(user.Encode());
            byteArray.AddRange(debt_to_cover.Encode());
            byteArray.AddRange(route.Encode());
            return new Method(76, "Liquidation", 0, "liquidate", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_borrowing_contract
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SetBorrowingContract(Substrate.Hydration.NET.NetApiExt.Generated.Model.primitive_types.H160 contract)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(contract.Encode());
            return new Method(76, "Liquidation", 1, "set_borrowing_contract", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> LiquidationConstants
    /// </summary>
    public sealed class LiquidationConstants
    {
        
        /// <summary>
        /// >> GasLimit
        ///  The gas limit for the execution of the liquidation call.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 GasLimit()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U64();
            result.Create("0x00093D0000000000");
            return result;
        }
        
        /// <summary>
        /// >> ProfitReceiver
        ///  Account who receives the profit.
        /// </summary>
        public Substrate.Hydration.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 ProfitReceiver()
        {
            var result = new Substrate.Hydration.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32();
            result.Create("0x6D6F646C70792F74727372790000000000000000000000000000000000000000");
            return result;
        }
    }
    
    /// <summary>
    /// >> LiquidationErrors
    /// </summary>
    public enum LiquidationErrors
    {
        
        /// <summary>
        /// >> AssetConversionFailed
        /// AssetId to EVM address conversion failed
        /// </summary>
        AssetConversionFailed,
        
        /// <summary>
        /// >> LiquidationCallFailed
        /// Liquidation call failed
        /// </summary>
        LiquidationCallFailed,
        
        /// <summary>
        /// >> InvalidRoute
        /// Provided route doesn't match the existing route
        /// </summary>
        InvalidRoute,
        
        /// <summary>
        /// >> NotProfitable
        /// Liquidation was not profitable enough to repay flash loan
        /// </summary>
        NotProfitable,
    }
}
