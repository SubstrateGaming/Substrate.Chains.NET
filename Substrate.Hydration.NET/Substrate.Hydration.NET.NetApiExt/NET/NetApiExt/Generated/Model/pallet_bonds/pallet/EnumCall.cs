//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_bonds.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> issue
        /// Issue new fungible bonds.
        /// New asset id is registered and assigned to the bonds.
        /// The number of bonds the issuer receives is 1:1 to the `amount` of the underlying asset
        /// minus the protocol fee.
        /// The bond asset is registered with the empty string for the asset name,
        /// and with the same existential deposit as of the underlying asset.
        /// Bonds can be redeemed for the underlying asset once mature.
        /// Protocol fee is applied to the amount, and transferred to `T::FeeReceiver`.
        /// When issuing new bonds with the underlying asset and maturity that matches existing bonds,
        /// new amount of these existing bonds is issued, instead of registering new bonds.
        /// It's possible to issue new bonds for bonds that are already mature.
        /// 
        /// Parameters:
        /// - `origin`: issuer of new bonds, needs to be `T::IssueOrigin`
        /// - `asset_id`: underlying asset id
        /// - `amount`: the amount of the underlying asset
        /// - `maturity`: Unix time in milliseconds, when the bonds will be mature.
        /// 
        /// Emits `BondTokenCreated` event when successful and new bonds were registered.
        /// Emits `BondsIssued` event when successful.
        /// 
        /// </summary>
        issue = 0,
        
        /// <summary>
        /// >> redeem
        /// Redeem bonds for the underlying asset.
        /// The amount of the underlying asset the `origin` receives is 1:1 to the `amount` of the bonds.
        /// Anyone who holds the bonds is able to redeem them.
        /// Bonds can be both partially or fully redeemed.
        /// 
        /// Parameters:
        /// - `origin`: account id
        /// - `asset_id`: bond asset id
        /// - `amount`: the amount of the bonds to redeem for the underlying asset
        /// 
        /// Emits `BondsRedeemed` event when successful.
        /// 
        /// </summary>
        redeem = 1,
    }
    
    /// <summary>
    /// >> 248 - Variant[pallet_bonds.pallet.Call]
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public sealed class EnumCall : BaseEnumRust<Call>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumCall()
        {
				AddTypeDecoder<BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U128, Substrate.NetApi.Model.Types.Primitive.U64>>(Call.issue);
				AddTypeDecoder<BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U128>>(Call.redeem);
        }
    }
}
