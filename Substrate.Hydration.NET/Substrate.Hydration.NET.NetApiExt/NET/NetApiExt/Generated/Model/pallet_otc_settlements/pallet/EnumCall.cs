//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_otc_settlements.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> settle_otc_order
        /// Close an existing OTC arbitrage opportunity.
        /// 
        /// Executes a trade between an OTC order and some route.
        /// If the OTC order is partially fillable, the extrinsic fails if the existing arbitrage
        /// opportunity is not closed or reduced after the trade.
        /// If the OTC order is not partially fillable, fails if there is no profit after the trade.
        /// 
        /// `Origin` calling this extrinsic is not paying or receiving anything.
        /// 
        /// The profit made by closing the arbitrage is transferred to `FeeReceiver`.
        /// 
        /// Parameters:
        /// - `origin`: Signed or unsigned origin. Unsigned origin doesn't pay the TX fee,
        /// 			but can be submitted only by a collator.
        /// - `otc_id`: ID of the OTC order with existing arbitrage opportunity.
        /// - `amount`: Amount necessary to close the arb.
        /// - `route`: The route we trade against. Required for the fee calculation.
        /// 
        /// Emits `Executed` event when successful.
        /// 
        /// </summary>
        settle_otc_order = 0,
    }
    
    /// <summary>
    /// >> 249 - Variant[pallet_otc_settlements.pallet.Call]
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public sealed class EnumCall : BaseEnumRust<Call>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumCall()
        {
				AddTypeDecoder<BaseTuple<Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U128, Substrate.Hydration.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT11>>(Call.settle_otc_order);
        }
    }
}
