//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Hydration.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IStableswapStorage interface definition.
    /// </summary>
    public interface IStableswapStorage : IStorage
    {
        
        /// <summary>
        /// >> Pools
        ///  Existing pools
        /// </summary>
        Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.PoolInfo GetPools(string key);
        
        /// <summary>
        /// >> PoolPegs
        ///  Pool peg info.
        /// </summary>
        Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.PoolPegInfo GetPoolPegs(string key);
        
        /// <summary>
        /// >> AssetTradability
        ///  Tradability state of pool assets.
        /// </summary>
        Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.Tradability GetAssetTradability(string key);
    }
    
    /// <summary>
    /// StableswapStorage class definition.
    /// </summary>
    public sealed class StableswapStorage : IStableswapStorage
    {
        
        /// <summary>
        /// _poolsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.PoolInfo> _poolsTypedStorage;
        
        /// <summary>
        /// _poolPegsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.PoolPegInfo> _poolPegsTypedStorage;
        
        /// <summary>
        /// _assetTradabilityTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.Tradability> _assetTradabilityTypedStorage;
        
        /// <summary>
        /// StableswapStorage constructor.
        /// </summary>
        public StableswapStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.PoolsTypedStorage = new TypedMapStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.PoolInfo>("Stableswap.Pools", storageDataProvider, storageChangeDelegates);
            this.PoolPegsTypedStorage = new TypedMapStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.PoolPegInfo>("Stableswap.PoolPegs", storageDataProvider, storageChangeDelegates);
            this.AssetTradabilityTypedStorage = new TypedMapStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.Tradability>("Stableswap.AssetTradability", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _poolsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.PoolInfo> PoolsTypedStorage
        {
            get
            {
                return _poolsTypedStorage;
            }
            set
            {
                _poolsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _poolPegsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.PoolPegInfo> PoolPegsTypedStorage
        {
            get
            {
                return _poolPegsTypedStorage;
            }
            set
            {
                _poolPegsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _assetTradabilityTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.Tradability> AssetTradabilityTypedStorage
        {
            get
            {
                return _assetTradabilityTypedStorage;
            }
            set
            {
                _assetTradabilityTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await PoolsTypedStorage.InitializeAsync("Stableswap", "Pools");
            await PoolPegsTypedStorage.InitializeAsync("Stableswap", "PoolPegs");
            await AssetTradabilityTypedStorage.InitializeAsync("Stableswap", "AssetTradability");
        }
        
        /// <summary>
        /// Implements any storage change for Stableswap.Pools
        /// </summary>
        [StorageChange("Stableswap", "Pools")]
        public void OnUpdatePools(string key, string data)
        {
            PoolsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Pools
        ///  Existing pools
        /// </summary>
        public Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.PoolInfo GetPools(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PoolsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.PoolInfo result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Stableswap.PoolPegs
        /// </summary>
        [StorageChange("Stableswap", "PoolPegs")]
        public void OnUpdatePoolPegs(string key, string data)
        {
            PoolPegsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> PoolPegs
        ///  Pool peg info.
        /// </summary>
        public Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.PoolPegInfo GetPoolPegs(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PoolPegsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.PoolPegInfo result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for Stableswap.AssetTradability
        /// </summary>
        [StorageChange("Stableswap", "AssetTradability")]
        public void OnUpdateAssetTradability(string key, string data)
        {
            AssetTradabilityTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> AssetTradability
        ///  Tradability state of pool assets.
        /// </summary>
        public Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.Tradability GetAssetTradability(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AssetTradabilityTypedStorage.Dictionary.TryGetValue(key, out Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_stableswap.types.Tradability result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
