//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Hydration.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IDispatcherStorage interface definition.
    /// </summary>
    public interface IDispatcherStorage : IStorage
    {
        
        /// <summary>
        /// >> AaveManagerAccount
        /// </summary>
        Substrate.Hydration.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetAaveManagerAccount();
        
        /// <summary>
        /// >> ExtraGas
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U64 GetExtraGas();
    }
    
    /// <summary>
    /// DispatcherStorage class definition.
    /// </summary>
    public sealed class DispatcherStorage : IDispatcherStorage
    {
        
        /// <summary>
        /// _aaveManagerAccountTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> _aaveManagerAccountTypedStorage;
        
        /// <summary>
        /// _extraGasTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> _extraGasTypedStorage;
        
        /// <summary>
        /// DispatcherStorage constructor.
        /// </summary>
        public DispatcherStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.AaveManagerAccountTypedStorage = new TypedStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>("Dispatcher.AaveManagerAccount", storageDataProvider, storageChangeDelegates);
            this.ExtraGasTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64>("Dispatcher.ExtraGas", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _aaveManagerAccountTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> AaveManagerAccountTypedStorage
        {
            get
            {
                return _aaveManagerAccountTypedStorage;
            }
            set
            {
                _aaveManagerAccountTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _extraGasTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> ExtraGasTypedStorage
        {
            get
            {
                return _extraGasTypedStorage;
            }
            set
            {
                _extraGasTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await AaveManagerAccountTypedStorage.InitializeAsync("Dispatcher", "AaveManagerAccount");
            await ExtraGasTypedStorage.InitializeAsync("Dispatcher", "ExtraGas");
        }
        
        /// <summary>
        /// Implements any storage change for Dispatcher.AaveManagerAccount
        /// </summary>
        [StorageChange("Dispatcher", "AaveManagerAccount")]
        public void OnUpdateAaveManagerAccount(string data)
        {
            AaveManagerAccountTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> AaveManagerAccount
        /// </summary>
        public Substrate.Hydration.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetAaveManagerAccount()
        {
            return AaveManagerAccountTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Dispatcher.ExtraGas
        /// </summary>
        [StorageChange("Dispatcher", "ExtraGas")]
        public void OnUpdateExtraGas(string data)
        {
            ExtraGasTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> ExtraGas
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 GetExtraGas()
        {
            return ExtraGasTypedStorage.Get();
        }
    }
}
