//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Hydration.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// ILiquidationStorage interface definition.
    /// </summary>
    public interface ILiquidationStorage : IStorage
    {
        
        /// <summary>
        /// >> BorrowingContract
        ///  Borrowing market contract address
        /// </summary>
        Substrate.Hydration.NET.NetApiExt.Generated.Model.primitive_types.H160 GetBorrowingContract();
    }
    
    /// <summary>
    /// LiquidationStorage class definition.
    /// </summary>
    public sealed class LiquidationStorage : ILiquidationStorage
    {
        
        /// <summary>
        /// _borrowingContractTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.primitive_types.H160> _borrowingContractTypedStorage;
        
        /// <summary>
        /// LiquidationStorage constructor.
        /// </summary>
        public LiquidationStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.BorrowingContractTypedStorage = new TypedStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.primitive_types.H160>("Liquidation.BorrowingContract", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _borrowingContractTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.Hydration.NET.NetApiExt.Generated.Model.primitive_types.H160> BorrowingContractTypedStorage
        {
            get
            {
                return _borrowingContractTypedStorage;
            }
            set
            {
                _borrowingContractTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await BorrowingContractTypedStorage.InitializeAsync("Liquidation", "BorrowingContract");
        }
        
        /// <summary>
        /// Implements any storage change for Liquidation.BorrowingContract
        /// </summary>
        [StorageChange("Liquidation", "BorrowingContract")]
        public void OnUpdateBorrowingContract(string data)
        {
            BorrowingContractTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> BorrowingContract
        ///  Borrowing market contract address
        /// </summary>
        public Substrate.Hydration.NET.NetApiExt.Generated.Model.primitive_types.H160 GetBorrowingContract()
        {
            return BorrowingContractTypedStorage.Get();
        }
    }
}
