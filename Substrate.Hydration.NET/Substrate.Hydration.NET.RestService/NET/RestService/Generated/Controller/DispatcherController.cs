//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.Hydration.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Hydration.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// DispatcherController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class DispatcherController : ControllerBase
    {
        
        private IDispatcherStorage _dispatcherStorage;
        
        /// <summary>
        /// DispatcherController constructor.
        /// </summary>
        public DispatcherController(IDispatcherStorage dispatcherStorage)
        {
            _dispatcherStorage = dispatcherStorage;
        }
        
        /// <summary>
        /// >> AaveManagerAccount
        /// </summary>
        [HttpGet("AaveManagerAccount")]
        [ProducesResponseType(typeof(Substrate.Hydration.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32), 200)]
        [StorageKeyBuilder(typeof(Substrate.Hydration.NET.NetApiExt.Generated.Storage.DispatcherStorage), "AaveManagerAccountParams")]
        public IActionResult GetAaveManagerAccount()
        {
            return this.Ok(_dispatcherStorage.GetAaveManagerAccount());
        }
        
        /// <summary>
        /// >> ExtraGas
        /// </summary>
        [HttpGet("ExtraGas")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U64), 200)]
        [StorageKeyBuilder(typeof(Substrate.Hydration.NET.NetApiExt.Generated.Storage.DispatcherStorage), "ExtraGasParams")]
        public IActionResult GetExtraGas()
        {
            return this.Ok(_dispatcherStorage.GetExtraGas());
        }
    }
}
