//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.Hydration.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Hydration.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// TransactionPauseController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class TransactionPauseController : ControllerBase
    {
        
        private ITransactionPauseStorage _transactionPauseStorage;
        
        /// <summary>
        /// TransactionPauseController constructor.
        /// </summary>
        public TransactionPauseController(ITransactionPauseStorage transactionPauseStorage)
        {
            _transactionPauseStorage = transactionPauseStorage;
        }
        
        /// <summary>
        /// >> PausedTransactions
        ///  The paused transaction map
        /// 
        ///  map (PalletNameBytes, FunctionNameBytes) => Option<()>
        /// </summary>
        [HttpGet("PausedTransactions")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseTuple), 200)]
        [StorageKeyBuilder(typeof(Substrate.Hydration.NET.NetApiExt.Generated.Storage.TransactionPauseStorage), "PausedTransactionsParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Hydration.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT45, Substrate.Hydration.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT45>))]
        public IActionResult GetPausedTransactions(string key)
        {
            return this.Ok(_transactionPauseStorage.GetPausedTransactions(key));
        }
    }
}
