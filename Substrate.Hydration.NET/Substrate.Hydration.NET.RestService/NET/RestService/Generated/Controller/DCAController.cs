//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.Hydration.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Hydration.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// DCAController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class DCAController : ControllerBase
    {
        
        private IDCAStorage _dCAStorage;
        
        /// <summary>
        /// DCAController constructor.
        /// </summary>
        public DCAController(IDCAStorage dCAStorage)
        {
            _dCAStorage = dCAStorage;
        }
        
        /// <summary>
        /// >> ScheduleIdSequencer
        ///  Id sequencer for schedules
        /// </summary>
        [HttpGet("ScheduleIdSequencer")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.Hydration.NET.NetApiExt.Generated.Storage.DCAStorage), "ScheduleIdSequencerParams")]
        public IActionResult GetScheduleIdSequencer()
        {
            return this.Ok(_dCAStorage.GetScheduleIdSequencer());
        }
        
        /// <summary>
        /// >> Schedules
        ///  Storing schedule details
        /// </summary>
        [HttpGet("Schedules")]
        [ProducesResponseType(typeof(Substrate.Hydration.NET.NetApiExt.Generated.Model.pallet_dca.types.Schedule), 200)]
        [StorageKeyBuilder(typeof(Substrate.Hydration.NET.NetApiExt.Generated.Storage.DCAStorage), "SchedulesParams", typeof(Substrate.NetApi.Model.Types.Primitive.U32))]
        public IActionResult GetSchedules(string key)
        {
            return this.Ok(_dCAStorage.GetSchedules(key));
        }
        
        /// <summary>
        /// >> ScheduleOwnership
        ///  Storing schedule ownership
        /// </summary>
        [HttpGet("ScheduleOwnership")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseTuple), 200)]
        [StorageKeyBuilder(typeof(Substrate.Hydration.NET.NetApiExt.Generated.Storage.DCAStorage), "ScheduleOwnershipParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Hydration.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.NetApi.Model.Types.Primitive.U32>))]
        public IActionResult GetScheduleOwnership(string key)
        {
            return this.Ok(_dCAStorage.GetScheduleOwnership(key));
        }
        
        /// <summary>
        /// >> RemainingAmounts
        ///  Keep tracking the remaining amounts to spend for DCA schedules
        /// </summary>
        [HttpGet("RemainingAmounts")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.Hydration.NET.NetApiExt.Generated.Storage.DCAStorage), "RemainingAmountsParams", typeof(Substrate.NetApi.Model.Types.Primitive.U32))]
        public IActionResult GetRemainingAmounts(string key)
        {
            return this.Ok(_dCAStorage.GetRemainingAmounts(key));
        }
        
        /// <summary>
        /// >> RetriesOnError
        ///  Keep tracking the retry on error flag for DCA schedules
        /// </summary>
        [HttpGet("RetriesOnError")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U8), 200)]
        [StorageKeyBuilder(typeof(Substrate.Hydration.NET.NetApiExt.Generated.Storage.DCAStorage), "RetriesOnErrorParams", typeof(Substrate.NetApi.Model.Types.Primitive.U32))]
        public IActionResult GetRetriesOnError(string key)
        {
            return this.Ok(_dCAStorage.GetRetriesOnError(key));
        }
        
        /// <summary>
        /// >> ScheduleExecutionBlock
        ///  Keep tracking the blocknumber when the schedule is planned to be executed
        /// </summary>
        [HttpGet("ScheduleExecutionBlock")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.Hydration.NET.NetApiExt.Generated.Storage.DCAStorage), "ScheduleExecutionBlockParams", typeof(Substrate.NetApi.Model.Types.Primitive.U32))]
        public IActionResult GetScheduleExecutionBlock(string key)
        {
            return this.Ok(_dCAStorage.GetScheduleExecutionBlock(key));
        }
        
        /// <summary>
        /// >> ScheduleIdsPerBlock
        ///  Keep tracking of the schedule ids to be executed in the block
        /// </summary>
        [HttpGet("ScheduleIdsPerBlock")]
        [ProducesResponseType(typeof(Substrate.Hydration.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT52), 200)]
        [StorageKeyBuilder(typeof(Substrate.Hydration.NET.NetApiExt.Generated.Storage.DCAStorage), "ScheduleIdsPerBlockParams", typeof(Substrate.NetApi.Model.Types.Primitive.U32))]
        public IActionResult GetScheduleIdsPerBlock(string key)
        {
            return this.Ok(_dCAStorage.GetScheduleIdsPerBlock(key));
        }
    }
}
