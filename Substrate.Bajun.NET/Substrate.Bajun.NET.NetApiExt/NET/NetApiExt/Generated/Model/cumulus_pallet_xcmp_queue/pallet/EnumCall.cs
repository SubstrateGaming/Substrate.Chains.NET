//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Bajun.NET.NetApiExt.Generated.Model.cumulus_pallet_xcmp_queue.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains one variant per dispatchable that can be called by an extrinsic.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> service_overweight
        /// Services a single overweight XCM.
        /// 
        /// - `origin`: Must pass `ExecuteOverweightOrigin`.
        /// - `index`: The index of the overweight XCM to service
        /// - `weight_limit`: The amount of weight that XCM execution may take.
        /// 
        /// Errors:
        /// - `BadOverweightIndex`: XCM under `index` is not found in the `Overweight` storage map.
        /// - `BadXcm`: XCM under `index` cannot be properly decoded into a valid XCM format.
        /// - `WeightOverLimit`: XCM execution may use greater `weight_limit`.
        /// 
        /// Events:
        /// - `OverweightServiced`: On success.
        /// </summary>
        service_overweight = 0,
        
        /// <summary>
        /// >> suspend_xcm_execution
        /// Suspends all XCM executions for the XCMP queue, regardless of the sender's origin.
        /// 
        /// - `origin`: Must pass `ControllerOrigin`.
        /// </summary>
        suspend_xcm_execution = 1,
        
        /// <summary>
        /// >> resume_xcm_execution
        /// Resumes all XCM executions for the XCMP queue.
        /// 
        /// Note that this function doesn't change the status of the in/out bound channels.
        /// 
        /// - `origin`: Must pass `ControllerOrigin`.
        /// </summary>
        resume_xcm_execution = 2,
        
        /// <summary>
        /// >> update_suspend_threshold
        /// Overwrites the number of pages of messages which must be in the queue for the other side to be told to
        /// suspend their sending.
        /// 
        /// - `origin`: Must pass `Root`.
        /// - `new`: Desired value for `QueueConfigData.suspend_value`
        /// </summary>
        update_suspend_threshold = 3,
        
        /// <summary>
        /// >> update_drop_threshold
        /// Overwrites the number of pages of messages which must be in the queue after which we drop any further
        /// messages from the channel.
        /// 
        /// - `origin`: Must pass `Root`.
        /// - `new`: Desired value for `QueueConfigData.drop_threshold`
        /// </summary>
        update_drop_threshold = 4,
        
        /// <summary>
        /// >> update_resume_threshold
        /// Overwrites the number of pages of messages which the queue must be reduced to before it signals that
        /// message sending may recommence after it has been suspended.
        /// 
        /// - `origin`: Must pass `Root`.
        /// - `new`: Desired value for `QueueConfigData.resume_threshold`
        /// </summary>
        update_resume_threshold = 5,
        
        /// <summary>
        /// >> update_threshold_weight
        /// Overwrites the amount of remaining weight under which we stop processing messages.
        /// 
        /// - `origin`: Must pass `Root`.
        /// - `new`: Desired value for `QueueConfigData.threshold_weight`
        /// </summary>
        update_threshold_weight = 6,
        
        /// <summary>
        /// >> update_weight_restrict_decay
        /// Overwrites the speed to which the available weight approaches the maximum weight.
        /// A lower number results in a faster progression. A value of 1 makes the entire weight available initially.
        /// 
        /// - `origin`: Must pass `Root`.
        /// - `new`: Desired value for `QueueConfigData.weight_restrict_decay`.
        /// </summary>
        update_weight_restrict_decay = 7,
        
        /// <summary>
        /// >> update_xcmp_max_individual_weight
        /// Overwrite the maximum amount of weight any individual message may consume.
        /// Messages above this weight go into the overweight queue and may only be serviced explicitly.
        /// 
        /// - `origin`: Must pass `Root`.
        /// - `new`: Desired value for `QueueConfigData.xcmp_max_individual_weight`.
        /// </summary>
        update_xcmp_max_individual_weight = 8,
    }
    
    /// <summary>
    /// >> 271 - Variant[cumulus_pallet_xcmp_queue.pallet.Call]
    /// Contains one variant per dispatchable that can be called by an extrinsic.
    /// </summary>
    public sealed class EnumCall : BaseEnumExt<Call, BaseTuple<Substrate.NetApi.Model.Types.Primitive.U64, Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_weights.weight_v2.Weight>, BaseVoid, BaseVoid, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.NetApi.Model.Types.Primitive.U32, Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_weights.weight_v2.Weight, Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_weights.weight_v2.Weight, Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_weights.weight_v2.Weight>
    {
    }
}
