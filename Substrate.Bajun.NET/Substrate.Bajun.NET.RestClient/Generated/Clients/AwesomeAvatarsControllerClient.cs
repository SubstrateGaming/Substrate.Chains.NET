//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Bajun.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_core.crypto;
   using Substrate.Bajun.NET.NetApiExt.Generated.Model.pallet_ajuna_awesome_avatars.types.season;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.Bajun.NET.NetApiExt.Generated.Model.pallet_ajuna_awesome_avatars.types.config;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.Bajun.NET.NetApiExt.Generated.Model.pallet_ajuna_awesome_avatars.types.avatar;
   using Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec;
   using Substrate.Bajun.NET.NetApiExt.Generated.Model.pallet_ajuna_awesome_avatars.types.account;
   using Substrate.Bajun.NET.RestClient.Generated.Interfaces;
   
   public sealed class AwesomeAvatarsControllerClient : BaseClient, IAwesomeAvatarsControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public AwesomeAvatarsControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<AccountId32> GetOrganizer()
      {
         return await SendRequestAsync<AccountId32>(_httpClient, "awesomeavatars/organizer");
      }
      public async Task<bool> SubscribeOrganizer()
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.Organizer");
      }
      public async Task<AccountId32> GetTreasurer(U16 key)
      {
         return await SendRequestAsync<AccountId32>(_httpClient, "awesomeavatars/treasurer", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.TreasurerParams(key));
      }
      public async Task<bool> SubscribeTreasurer(U16 key)
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.Treasurer", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.TreasurerParams(key));
      }
      public async Task<SeasonStatus> GetCurrentSeasonStatus()
      {
         return await SendRequestAsync<SeasonStatus>(_httpClient, "awesomeavatars/currentseasonstatus");
      }
      public async Task<bool> SubscribeCurrentSeasonStatus()
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.CurrentSeasonStatus");
      }
      public async Task<Season> GetSeasons(U16 key)
      {
         return await SendRequestAsync<Season>(_httpClient, "awesomeavatars/seasons", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.SeasonsParams(key));
      }
      public async Task<bool> SubscribeSeasons(U16 key)
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.Seasons", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.SeasonsParams(key));
      }
      public async Task<U128> GetTreasury(U16 key)
      {
         return await SendRequestAsync<U128>(_httpClient, "awesomeavatars/treasury", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.TreasuryParams(key));
      }
      public async Task<bool> SubscribeTreasury(U16 key)
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.Treasury", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.TreasuryParams(key));
      }
      public async Task<GlobalConfig> GetGlobalConfigs()
      {
         return await SendRequestAsync<GlobalConfig>(_httpClient, "awesomeavatars/globalconfigs");
      }
      public async Task<bool> SubscribeGlobalConfigs()
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.GlobalConfigs");
      }
      public async Task<BaseTuple<AccountId32, Avatar>> GetAvatars(Substrate.Bajun.NET.NetApiExt.Generated.Model.primitive_types.H256 key)
      {
         return await SendRequestAsync<BaseTuple<AccountId32, Avatar>>(_httpClient, "awesomeavatars/avatars", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.AvatarsParams(key));
      }
      public async Task<bool> SubscribeAvatars(Substrate.Bajun.NET.NetApiExt.Generated.Model.primitive_types.H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.Avatars", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.AvatarsParams(key));
      }
      public async Task<BoundedVecT49> GetOwners(BaseTuple<AccountId32, U16> key)
      {
         return await SendRequestAsync<BoundedVecT49>(_httpClient, "awesomeavatars/owners", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.OwnersParams(key));
      }
      public async Task<bool> SubscribeOwners(BaseTuple<AccountId32, U16> key)
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.Owners", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.OwnersParams(key));
      }
      public async Task<BaseTuple> GetLockedAvatars(Substrate.Bajun.NET.NetApiExt.Generated.Model.primitive_types.H256 key)
      {
         return await SendRequestAsync<BaseTuple>(_httpClient, "awesomeavatars/lockedavatars", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.LockedAvatarsParams(key));
      }
      public async Task<bool> SubscribeLockedAvatars(Substrate.Bajun.NET.NetApiExt.Generated.Model.primitive_types.H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.LockedAvatars", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.LockedAvatarsParams(key));
      }
      public async Task<U32> GetCollectionId()
      {
         return await SendRequestAsync<U32>(_httpClient, "awesomeavatars/collectionid");
      }
      public async Task<bool> SubscribeCollectionId()
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.CollectionId");
      }
      public async Task<PlayerConfig> GetPlayerConfigs(AccountId32 key)
      {
         return await SendRequestAsync<PlayerConfig>(_httpClient, "awesomeavatars/playerconfigs", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.PlayerConfigsParams(key));
      }
      public async Task<bool> SubscribePlayerConfigs(AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.PlayerConfigs", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.PlayerConfigsParams(key));
      }
      public async Task<PlayerSeasonConfig> GetPlayerSeasonConfigs(BaseTuple<AccountId32, U16> key)
      {
         return await SendRequestAsync<PlayerSeasonConfig>(_httpClient, "awesomeavatars/playerseasonconfigs", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.PlayerSeasonConfigsParams(key));
      }
      public async Task<bool> SubscribePlayerSeasonConfigs(BaseTuple<AccountId32, U16> key)
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.PlayerSeasonConfigs", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.PlayerSeasonConfigsParams(key));
      }
      public async Task<SeasonInfo> GetSeasonStats(BaseTuple<U16, AccountId32> key)
      {
         return await SendRequestAsync<SeasonInfo>(_httpClient, "awesomeavatars/seasonstats", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.SeasonStatsParams(key));
      }
      public async Task<bool> SubscribeSeasonStats(BaseTuple<U16, AccountId32> key)
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.SeasonStats", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.SeasonStatsParams(key));
      }
      public async Task<U128> GetTrade(BaseTuple<U16, Substrate.Bajun.NET.NetApiExt.Generated.Model.primitive_types.H256> key)
      {
         return await SendRequestAsync<U128>(_httpClient, "awesomeavatars/trade", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.TradeParams(key));
      }
      public async Task<bool> SubscribeTrade(BaseTuple<U16, Substrate.Bajun.NET.NetApiExt.Generated.Model.primitive_types.H256> key)
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.Trade", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.TradeParams(key));
      }
      public async Task<AccountId32> GetServiceAccount()
      {
         return await SendRequestAsync<AccountId32>(_httpClient, "awesomeavatars/serviceaccount");
      }
      public async Task<bool> SubscribeServiceAccount()
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.ServiceAccount");
      }
      public async Task<BoundedVecT10> GetPreparation(Substrate.Bajun.NET.NetApiExt.Generated.Model.primitive_types.H256 key)
      {
         return await SendRequestAsync<BoundedVecT10>(_httpClient, "awesomeavatars/preparation", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.PreparationParams(key));
      }
      public async Task<bool> SubscribePreparation(Substrate.Bajun.NET.NetApiExt.Generated.Model.primitive_types.H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("AwesomeAvatars.Preparation", Substrate.Bajun.NET.NetApiExt.Generated.Storage.AwesomeAvatarsStorage.PreparationParams(key));
      }
   }
}
