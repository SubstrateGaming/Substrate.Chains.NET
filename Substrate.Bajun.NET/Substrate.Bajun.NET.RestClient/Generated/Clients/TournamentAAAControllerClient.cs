//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Bajun.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.Bajun.NET.NetApiExt.Generated.Model.pallet_ajuna_tournament.config;
   using Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_core.crypto;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec;
   using Substrate.Bajun.NET.RestClient.Generated.Interfaces;
   
   public sealed class TournamentAAAControllerClient : BaseClient, ITournamentAAAControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public TournamentAAAControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<EnumTournamentScheduledAction> GetTournamentSchedules(U32 key)
      {
         return await SendRequestAsync<EnumTournamentScheduledAction>(_httpClient, "tournamentaaa/tournamentschedules", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.TournamentSchedulesParams(key));
      }
      public async Task<bool> SubscribeTournamentSchedules(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("TournamentAAA.TournamentSchedules", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.TournamentSchedulesParams(key));
      }
      public async Task<AccountId32> GetTreasuryAccountsCache(U16 key)
      {
         return await SendRequestAsync<AccountId32>(_httpClient, "tournamentaaa/treasuryaccountscache", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.TreasuryAccountsCacheParams(key));
      }
      public async Task<bool> SubscribeTreasuryAccountsCache(U16 key)
      {
         return await _subscriptionClient.SubscribeAsync("TournamentAAA.TreasuryAccountsCache", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.TreasuryAccountsCacheParams(key));
      }
      public async Task<U32> GetNextTournamentIds(U16 key)
      {
         return await SendRequestAsync<U32>(_httpClient, "tournamentaaa/nexttournamentids", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.NextTournamentIdsParams(key));
      }
      public async Task<bool> SubscribeNextTournamentIds(U16 key)
      {
         return await _subscriptionClient.SubscribeAsync("TournamentAAA.NextTournamentIds", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.NextTournamentIdsParams(key));
      }
      public async Task<TournamentConfig> GetTournaments(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await SendRequestAsync<TournamentConfig>(_httpClient, "tournamentaaa/tournaments", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.TournamentsParams(key));
      }
      public async Task<bool> SubscribeTournaments(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("TournamentAAA.Tournaments", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.TournamentsParams(key));
      }
      public async Task<EnumTournamentState> GetActiveTournaments(U16 key)
      {
         return await SendRequestAsync<EnumTournamentState>(_httpClient, "tournamentaaa/activetournaments", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.ActiveTournamentsParams(key));
      }
      public async Task<bool> SubscribeActiveTournaments(U16 key)
      {
         return await _subscriptionClient.SubscribeAsync("TournamentAAA.ActiveTournaments", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.ActiveTournamentsParams(key));
      }
      public async Task<BoundedVecT54> GetTournamentRankings(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await SendRequestAsync<BoundedVecT54>(_httpClient, "tournamentaaa/tournamentrankings", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.TournamentRankingsParams(key));
      }
      public async Task<bool> SubscribeTournamentRankings(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("TournamentAAA.TournamentRankings", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.TournamentRankingsParams(key));
      }
      public async Task<EnumRewardClaimState> GetTournamentRewardClaims(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32, U32> key)
      {
         return await SendRequestAsync<EnumRewardClaimState>(_httpClient, "tournamentaaa/tournamentrewardclaims", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.TournamentRewardClaimsParams(key));
      }
      public async Task<bool> SubscribeTournamentRewardClaims(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("TournamentAAA.TournamentRewardClaims", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.TournamentRewardClaimsParams(key));
      }
      public async Task<EnumGoldenDuckState> GetGoldenDucks(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await SendRequestAsync<EnumGoldenDuckState>(_httpClient, "tournamentaaa/goldenducks", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.GoldenDucksParams(key));
      }
      public async Task<bool> SubscribeGoldenDucks(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("TournamentAAA.GoldenDucks", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.GoldenDucksParams(key));
      }
      public async Task<EnumRewardClaimState> GetGoldenDuckRewardClaims(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await SendRequestAsync<EnumRewardClaimState>(_httpClient, "tournamentaaa/goldenduckrewardclaims", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.GoldenDuckRewardClaimsParams(key));
      }
      public async Task<bool> SubscribeGoldenDuckRewardClaims(Substrate.NetApi.Model.Types.Base.BaseTuple<U16, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("TournamentAAA.GoldenDuckRewardClaims", Substrate.Bajun.NET.NetApiExt.Generated.Storage.TournamentAAAStorage.GoldenDuckRewardClaimsParams(key));
      }
   }
}
