//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Bajun.NET.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.Bajun.NET.NetApiExt.Generated.Model.pallet_xcm.pallet;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_weights.weight_v2;
   using Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec;
   using Substrate.Bajun.NET.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class PolkadotXcmControllerMockupClient : MockupBaseClient, IPolkadotXcmControllerMockupClient
   {
      private HttpClient _httpClient;
      public PolkadotXcmControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetQueryCounter(U64 value)
      {
         return await SendMockupRequestAsync(_httpClient, "PolkadotXcm/QueryCounter", value.Encode(), Substrate.Bajun.NET.NetApiExt.Generated.Storage.PolkadotXcmStorage.QueryCounterParams());
      }
      public async Task<bool> SetQueries(EnumQueryStatus value, U64 key)
      {
         return await SendMockupRequestAsync(_httpClient, "PolkadotXcm/Queries", value.Encode(), Substrate.Bajun.NET.NetApiExt.Generated.Storage.PolkadotXcmStorage.QueriesParams(key));
      }
      public async Task<bool> SetAssetTraps(U32 value, Substrate.Bajun.NET.NetApiExt.Generated.Model.primitive_types.H256 key)
      {
         return await SendMockupRequestAsync(_httpClient, "PolkadotXcm/AssetTraps", value.Encode(), Substrate.Bajun.NET.NetApiExt.Generated.Storage.PolkadotXcmStorage.AssetTrapsParams(key));
      }
      public async Task<bool> SetSafeXcmVersion(U32 value)
      {
         return await SendMockupRequestAsync(_httpClient, "PolkadotXcm/SafeXcmVersion", value.Encode(), Substrate.Bajun.NET.NetApiExt.Generated.Storage.PolkadotXcmStorage.SafeXcmVersionParams());
      }
      public async Task<bool> SetSupportedVersion(U32 value, BaseTuple<U32, Substrate.Bajun.NET.NetApiExt.Generated.Model.xcm.EnumVersionedLocation> key)
      {
         return await SendMockupRequestAsync(_httpClient, "PolkadotXcm/SupportedVersion", value.Encode(), Substrate.Bajun.NET.NetApiExt.Generated.Storage.PolkadotXcmStorage.SupportedVersionParams(key));
      }
      public async Task<bool> SetVersionNotifiers(U64 value, BaseTuple<U32, Substrate.Bajun.NET.NetApiExt.Generated.Model.xcm.EnumVersionedLocation> key)
      {
         return await SendMockupRequestAsync(_httpClient, "PolkadotXcm/VersionNotifiers", value.Encode(), Substrate.Bajun.NET.NetApiExt.Generated.Storage.PolkadotXcmStorage.VersionNotifiersParams(key));
      }
      public async Task<bool> SetVersionNotifyTargets(BaseTuple<U64, Weight, U32> value, BaseTuple<U32, Substrate.Bajun.NET.NetApiExt.Generated.Model.xcm.EnumVersionedLocation> key)
      {
         return await SendMockupRequestAsync(_httpClient, "PolkadotXcm/VersionNotifyTargets", value.Encode(), Substrate.Bajun.NET.NetApiExt.Generated.Storage.PolkadotXcmStorage.VersionNotifyTargetsParams(key));
      }
      public async Task<bool> SetVersionDiscoveryQueue(BoundedVecT40 value)
      {
         return await SendMockupRequestAsync(_httpClient, "PolkadotXcm/VersionDiscoveryQueue", value.Encode(), Substrate.Bajun.NET.NetApiExt.Generated.Storage.PolkadotXcmStorage.VersionDiscoveryQueueParams());
      }
      public async Task<bool> SetCurrentMigration(EnumVersionMigrationStage value)
      {
         return await SendMockupRequestAsync(_httpClient, "PolkadotXcm/CurrentMigration", value.Encode(), Substrate.Bajun.NET.NetApiExt.Generated.Storage.PolkadotXcmStorage.CurrentMigrationParams());
      }
      public async Task<bool> SetRemoteLockedFungibles(RemoteLockedFungibleRecord value, BaseTuple<U32, Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.Bajun.NET.NetApiExt.Generated.Model.xcm.EnumVersionedAssetId> key)
      {
         return await SendMockupRequestAsync(_httpClient, "PolkadotXcm/RemoteLockedFungibles", value.Encode(), Substrate.Bajun.NET.NetApiExt.Generated.Storage.PolkadotXcmStorage.RemoteLockedFungiblesParams(key));
      }
      public async Task<bool> SetLockedFungibles(BoundedVecT42 value, Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "PolkadotXcm/LockedFungibles", value.Encode(), Substrate.Bajun.NET.NetApiExt.Generated.Storage.PolkadotXcmStorage.LockedFungiblesParams(key));
      }
      public async Task<bool> SetXcmExecutionSuspended(Bool value)
      {
         return await SendMockupRequestAsync(_httpClient, "PolkadotXcm/XcmExecutionSuspended", value.Encode(), Substrate.Bajun.NET.NetApiExt.Generated.Storage.PolkadotXcmStorage.XcmExecutionSuspendedParams());
      }
   }
}
