//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Bajun.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IAffiliatesAAAStorage interface definition.
    /// </summary>
    public interface IAffiliatesAAAStorage : IStorage
    {
        
        /// <summary>
        /// >> Affiliatees
        ///  Stores the affiliated accounts from the perspectives of the affiliatee
        /// </summary>
        Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT53 GetAffiliatees(string key);
        
        /// <summary>
        /// >> Affiliators
        ///  Store affiliators aka accounts that have affilatees and earn rewards from them.
        ///  Such accounts can't be affiliatees anymore.
        /// </summary>
        Substrate.Bajun.NET.NetApiExt.Generated.Model.pallet_ajuna_affiliates.traits.AffiliatorState GetAffiliators(string key);
        
        /// <summary>
        /// >> AffiliateRules
        ///  Stores the affiliate logic rules
        /// </summary>
        Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT21 GetAffiliateRules(string key);
        
        /// <summary>
        /// >> NextAffiliateId
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetNextAffiliateId();
        
        /// <summary>
        /// >> AffiliateIdMapping
        /// </summary>
        Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetAffiliateIdMapping(string key);
    }
    
    /// <summary>
    /// AffiliatesAAAStorage class definition.
    /// </summary>
    public sealed class AffiliatesAAAStorage : IAffiliatesAAAStorage
    {
        
        /// <summary>
        /// _affiliateesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT53> _affiliateesTypedStorage;
        
        /// <summary>
        /// _affiliatorsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Bajun.NET.NetApiExt.Generated.Model.pallet_ajuna_affiliates.traits.AffiliatorState> _affiliatorsTypedStorage;
        
        /// <summary>
        /// _affiliateRulesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT21> _affiliateRulesTypedStorage;
        
        /// <summary>
        /// _nextAffiliateIdTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _nextAffiliateIdTypedStorage;
        
        /// <summary>
        /// _affiliateIdMappingTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> _affiliateIdMappingTypedStorage;
        
        /// <summary>
        /// AffiliatesAAAStorage constructor.
        /// </summary>
        public AffiliatesAAAStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.AffiliateesTypedStorage = new TypedMapStorage<Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT53>("AffiliatesAAA.Affiliatees", storageDataProvider, storageChangeDelegates);
            this.AffiliatorsTypedStorage = new TypedMapStorage<Substrate.Bajun.NET.NetApiExt.Generated.Model.pallet_ajuna_affiliates.traits.AffiliatorState>("AffiliatesAAA.Affiliators", storageDataProvider, storageChangeDelegates);
            this.AffiliateRulesTypedStorage = new TypedMapStorage<Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT21>("AffiliatesAAA.AffiliateRules", storageDataProvider, storageChangeDelegates);
            this.NextAffiliateIdTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("AffiliatesAAA.NextAffiliateId", storageDataProvider, storageChangeDelegates);
            this.AffiliateIdMappingTypedStorage = new TypedMapStorage<Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>("AffiliatesAAA.AffiliateIdMapping", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _affiliateesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT53> AffiliateesTypedStorage
        {
            get
            {
                return _affiliateesTypedStorage;
            }
            set
            {
                _affiliateesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _affiliatorsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Bajun.NET.NetApiExt.Generated.Model.pallet_ajuna_affiliates.traits.AffiliatorState> AffiliatorsTypedStorage
        {
            get
            {
                return _affiliatorsTypedStorage;
            }
            set
            {
                _affiliatorsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _affiliateRulesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT21> AffiliateRulesTypedStorage
        {
            get
            {
                return _affiliateRulesTypedStorage;
            }
            set
            {
                _affiliateRulesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _nextAffiliateIdTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> NextAffiliateIdTypedStorage
        {
            get
            {
                return _nextAffiliateIdTypedStorage;
            }
            set
            {
                _nextAffiliateIdTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _affiliateIdMappingTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> AffiliateIdMappingTypedStorage
        {
            get
            {
                return _affiliateIdMappingTypedStorage;
            }
            set
            {
                _affiliateIdMappingTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await AffiliateesTypedStorage.InitializeAsync("AffiliatesAAA", "Affiliatees");
            await AffiliatorsTypedStorage.InitializeAsync("AffiliatesAAA", "Affiliators");
            await AffiliateRulesTypedStorage.InitializeAsync("AffiliatesAAA", "AffiliateRules");
            await NextAffiliateIdTypedStorage.InitializeAsync("AffiliatesAAA", "NextAffiliateId");
            await AffiliateIdMappingTypedStorage.InitializeAsync("AffiliatesAAA", "AffiliateIdMapping");
        }
        
        /// <summary>
        /// Implements any storage change for AffiliatesAAA.Affiliatees
        /// </summary>
        [StorageChange("AffiliatesAAA", "Affiliatees")]
        public void OnUpdateAffiliatees(string key, string data)
        {
            AffiliateesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Affiliatees
        ///  Stores the affiliated accounts from the perspectives of the affiliatee
        /// </summary>
        public Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT53 GetAffiliatees(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AffiliateesTypedStorage.Dictionary.TryGetValue(key, out Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT53 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for AffiliatesAAA.Affiliators
        /// </summary>
        [StorageChange("AffiliatesAAA", "Affiliators")]
        public void OnUpdateAffiliators(string key, string data)
        {
            AffiliatorsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Affiliators
        ///  Store affiliators aka accounts that have affilatees and earn rewards from them.
        ///  Such accounts can't be affiliatees anymore.
        /// </summary>
        public Substrate.Bajun.NET.NetApiExt.Generated.Model.pallet_ajuna_affiliates.traits.AffiliatorState GetAffiliators(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AffiliatorsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Bajun.NET.NetApiExt.Generated.Model.pallet_ajuna_affiliates.traits.AffiliatorState result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for AffiliatesAAA.AffiliateRules
        /// </summary>
        [StorageChange("AffiliatesAAA", "AffiliateRules")]
        public void OnUpdateAffiliateRules(string key, string data)
        {
            AffiliateRulesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> AffiliateRules
        ///  Stores the affiliate logic rules
        /// </summary>
        public Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT21 GetAffiliateRules(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AffiliateRulesTypedStorage.Dictionary.TryGetValue(key, out Substrate.Bajun.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT21 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for AffiliatesAAA.NextAffiliateId
        /// </summary>
        [StorageChange("AffiliatesAAA", "NextAffiliateId")]
        public void OnUpdateNextAffiliateId(string data)
        {
            NextAffiliateIdTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> NextAffiliateId
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetNextAffiliateId()
        {
            return NextAffiliateIdTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for AffiliatesAAA.AffiliateIdMapping
        /// </summary>
        [StorageChange("AffiliatesAAA", "AffiliateIdMapping")]
        public void OnUpdateAffiliateIdMapping(string key, string data)
        {
            AffiliateIdMappingTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> AffiliateIdMapping
        /// </summary>
        public Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetAffiliateIdMapping(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AffiliateIdMappingTypedStorage.Dictionary.TryGetValue(key, out Substrate.Bajun.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
