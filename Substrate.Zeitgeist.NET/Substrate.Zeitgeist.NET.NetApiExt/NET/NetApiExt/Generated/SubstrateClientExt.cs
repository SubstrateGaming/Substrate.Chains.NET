//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types.Base;
using Substrate.Zeitgeist.NET.NetApiExt.Generated.Storage;
using System.Collections.Generic;


namespace Substrate.Zeitgeist.NET.NetApiExt.Generated
{
    
    
    /// <summary>
    /// >> Substrate Client Extension, including all Storage classes direct access.
    /// </summary>
    public sealed class SubstrateClientExt : Substrate.NetApi.SubstrateClient
    {
        
        /// <summary>
        /// StorageKeyDict for key definition informations.
        /// </summary>
        public System.Collections.Generic.Dictionary<System.Tuple<string, string>, System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>> StorageKeyDict;
        
        /// <summary>
        /// SystemStorage storage calls.
        /// </summary>
        public SystemStorage SystemStorage;
        
        /// <summary>
        /// TimestampStorage storage calls.
        /// </summary>
        public TimestampStorage TimestampStorage;
        
        /// <summary>
        /// RandomnessCollectiveFlipStorage storage calls.
        /// </summary>
        public RandomnessCollectiveFlipStorage RandomnessCollectiveFlipStorage;
        
        /// <summary>
        /// SchedulerStorage storage calls.
        /// </summary>
        public SchedulerStorage SchedulerStorage;
        
        /// <summary>
        /// PreimageStorage storage calls.
        /// </summary>
        public PreimageStorage PreimageStorage;
        
        /// <summary>
        /// BalancesStorage storage calls.
        /// </summary>
        public BalancesStorage BalancesStorage;
        
        /// <summary>
        /// TransactionPaymentStorage storage calls.
        /// </summary>
        public TransactionPaymentStorage TransactionPaymentStorage;
        
        /// <summary>
        /// TreasuryStorage storage calls.
        /// </summary>
        public TreasuryStorage TreasuryStorage;
        
        /// <summary>
        /// VestingStorage storage calls.
        /// </summary>
        public VestingStorage VestingStorage;
        
        /// <summary>
        /// MultisigStorage storage calls.
        /// </summary>
        public MultisigStorage MultisigStorage;
        
        /// <summary>
        /// BountiesStorage storage calls.
        /// </summary>
        public BountiesStorage BountiesStorage;
        
        /// <summary>
        /// AssetTxPaymentStorage storage calls.
        /// </summary>
        public AssetTxPaymentStorage AssetTxPaymentStorage;
        
        /// <summary>
        /// DemocracyStorage storage calls.
        /// </summary>
        public DemocracyStorage DemocracyStorage;
        
        /// <summary>
        /// AdvisoryCommitteeStorage storage calls.
        /// </summary>
        public AdvisoryCommitteeStorage AdvisoryCommitteeStorage;
        
        /// <summary>
        /// AdvisoryCommitteeMembershipStorage storage calls.
        /// </summary>
        public AdvisoryCommitteeMembershipStorage AdvisoryCommitteeMembershipStorage;
        
        /// <summary>
        /// CouncilStorage storage calls.
        /// </summary>
        public CouncilStorage CouncilStorage;
        
        /// <summary>
        /// CouncilMembershipStorage storage calls.
        /// </summary>
        public CouncilMembershipStorage CouncilMembershipStorage;
        
        /// <summary>
        /// TechnicalCommitteeStorage storage calls.
        /// </summary>
        public TechnicalCommitteeStorage TechnicalCommitteeStorage;
        
        /// <summary>
        /// TechnicalCommitteeMembershipStorage storage calls.
        /// </summary>
        public TechnicalCommitteeMembershipStorage TechnicalCommitteeMembershipStorage;
        
        /// <summary>
        /// IdentityStorage storage calls.
        /// </summary>
        public IdentityStorage IdentityStorage;
        
        /// <summary>
        /// UtilityStorage storage calls.
        /// </summary>
        public UtilityStorage UtilityStorage;
        
        /// <summary>
        /// ProxyStorage storage calls.
        /// </summary>
        public ProxyStorage ProxyStorage;
        
        /// <summary>
        /// ContractsStorage storage calls.
        /// </summary>
        public ContractsStorage ContractsStorage;
        
        /// <summary>
        /// AssetManagerStorage storage calls.
        /// </summary>
        public AssetManagerStorage AssetManagerStorage;
        
        /// <summary>
        /// TokensStorage storage calls.
        /// </summary>
        public TokensStorage TokensStorage;
        
        /// <summary>
        /// MarketCommonsStorage storage calls.
        /// </summary>
        public MarketCommonsStorage MarketCommonsStorage;
        
        /// <summary>
        /// AuthorizedStorage storage calls.
        /// </summary>
        public AuthorizedStorage AuthorizedStorage;
        
        /// <summary>
        /// CourtStorage storage calls.
        /// </summary>
        public CourtStorage CourtStorage;
        
        /// <summary>
        /// LiquidityMiningStorage storage calls.
        /// </summary>
        public LiquidityMiningStorage LiquidityMiningStorage;
        
        /// <summary>
        /// RikiddoSigmoidFeeMarketEmaStorage storage calls.
        /// </summary>
        public RikiddoSigmoidFeeMarketEmaStorage RikiddoSigmoidFeeMarketEmaStorage;
        
        /// <summary>
        /// SimpleDisputesStorage storage calls.
        /// </summary>
        public SimpleDisputesStorage SimpleDisputesStorage;
        
        /// <summary>
        /// SwapsStorage storage calls.
        /// </summary>
        public SwapsStorage SwapsStorage;
        
        /// <summary>
        /// PredictionMarketsStorage storage calls.
        /// </summary>
        public PredictionMarketsStorage PredictionMarketsStorage;
        
        /// <summary>
        /// StyxStorage storage calls.
        /// </summary>
        public StyxStorage StyxStorage;
        
        /// <summary>
        /// GlobalDisputesStorage storage calls.
        /// </summary>
        public GlobalDisputesStorage GlobalDisputesStorage;
        
        /// <summary>
        /// NeoSwapsStorage storage calls.
        /// </summary>
        public NeoSwapsStorage NeoSwapsStorage;
        
        /// <summary>
        /// OrderbookStorage storage calls.
        /// </summary>
        public OrderbookStorage OrderbookStorage;
        
        /// <summary>
        /// ParimutuelStorage storage calls.
        /// </summary>
        public ParimutuelStorage ParimutuelStorage;
        
        /// <summary>
        /// ParachainSystemStorage storage calls.
        /// </summary>
        public ParachainSystemStorage ParachainSystemStorage;
        
        /// <summary>
        /// ParachainInfoStorage storage calls.
        /// </summary>
        public ParachainInfoStorage ParachainInfoStorage;
        
        /// <summary>
        /// ParachainStakingStorage storage calls.
        /// </summary>
        public ParachainStakingStorage ParachainStakingStorage;
        
        /// <summary>
        /// AuthorInherentStorage storage calls.
        /// </summary>
        public AuthorInherentStorage AuthorInherentStorage;
        
        /// <summary>
        /// AuthorFilterStorage storage calls.
        /// </summary>
        public AuthorFilterStorage AuthorFilterStorage;
        
        /// <summary>
        /// AuthorMappingStorage storage calls.
        /// </summary>
        public AuthorMappingStorage AuthorMappingStorage;
        
        /// <summary>
        /// CumulusXcmStorage storage calls.
        /// </summary>
        public CumulusXcmStorage CumulusXcmStorage;
        
        /// <summary>
        /// DmpQueueStorage storage calls.
        /// </summary>
        public DmpQueueStorage DmpQueueStorage;
        
        /// <summary>
        /// PolkadotXcmStorage storage calls.
        /// </summary>
        public PolkadotXcmStorage PolkadotXcmStorage;
        
        /// <summary>
        /// XcmpQueueStorage storage calls.
        /// </summary>
        public XcmpQueueStorage XcmpQueueStorage;
        
        /// <summary>
        /// AssetRegistryStorage storage calls.
        /// </summary>
        public AssetRegistryStorage AssetRegistryStorage;
        
        /// <summary>
        /// UnknownTokensStorage storage calls.
        /// </summary>
        public UnknownTokensStorage UnknownTokensStorage;
        
        /// <summary>
        /// XTokensStorage storage calls.
        /// </summary>
        public XTokensStorage XTokensStorage;
        
        public SubstrateClientExt(System.Uri uri, Substrate.NetApi.Model.Extrinsics.ChargeType chargeType) : 
                base(uri, chargeType)
        {
            StorageKeyDict = new System.Collections.Generic.Dictionary<System.Tuple<string, string>, System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>>();
            this.SystemStorage = new SystemStorage(this);
            this.TimestampStorage = new TimestampStorage(this);
            this.RandomnessCollectiveFlipStorage = new RandomnessCollectiveFlipStorage(this);
            this.SchedulerStorage = new SchedulerStorage(this);
            this.PreimageStorage = new PreimageStorage(this);
            this.BalancesStorage = new BalancesStorage(this);
            this.TransactionPaymentStorage = new TransactionPaymentStorage(this);
            this.TreasuryStorage = new TreasuryStorage(this);
            this.VestingStorage = new VestingStorage(this);
            this.MultisigStorage = new MultisigStorage(this);
            this.BountiesStorage = new BountiesStorage(this);
            this.AssetTxPaymentStorage = new AssetTxPaymentStorage(this);
            this.DemocracyStorage = new DemocracyStorage(this);
            this.AdvisoryCommitteeStorage = new AdvisoryCommitteeStorage(this);
            this.AdvisoryCommitteeMembershipStorage = new AdvisoryCommitteeMembershipStorage(this);
            this.CouncilStorage = new CouncilStorage(this);
            this.CouncilMembershipStorage = new CouncilMembershipStorage(this);
            this.TechnicalCommitteeStorage = new TechnicalCommitteeStorage(this);
            this.TechnicalCommitteeMembershipStorage = new TechnicalCommitteeMembershipStorage(this);
            this.IdentityStorage = new IdentityStorage(this);
            this.UtilityStorage = new UtilityStorage(this);
            this.ProxyStorage = new ProxyStorage(this);
            this.ContractsStorage = new ContractsStorage(this);
            this.AssetManagerStorage = new AssetManagerStorage(this);
            this.TokensStorage = new TokensStorage(this);
            this.MarketCommonsStorage = new MarketCommonsStorage(this);
            this.AuthorizedStorage = new AuthorizedStorage(this);
            this.CourtStorage = new CourtStorage(this);
            this.LiquidityMiningStorage = new LiquidityMiningStorage(this);
            this.RikiddoSigmoidFeeMarketEmaStorage = new RikiddoSigmoidFeeMarketEmaStorage(this);
            this.SimpleDisputesStorage = new SimpleDisputesStorage(this);
            this.SwapsStorage = new SwapsStorage(this);
            this.PredictionMarketsStorage = new PredictionMarketsStorage(this);
            this.StyxStorage = new StyxStorage(this);
            this.GlobalDisputesStorage = new GlobalDisputesStorage(this);
            this.NeoSwapsStorage = new NeoSwapsStorage(this);
            this.OrderbookStorage = new OrderbookStorage(this);
            this.ParimutuelStorage = new ParimutuelStorage(this);
            this.ParachainSystemStorage = new ParachainSystemStorage(this);
            this.ParachainInfoStorage = new ParachainInfoStorage(this);
            this.ParachainStakingStorage = new ParachainStakingStorage(this);
            this.AuthorInherentStorage = new AuthorInherentStorage(this);
            this.AuthorFilterStorage = new AuthorFilterStorage(this);
            this.AuthorMappingStorage = new AuthorMappingStorage(this);
            this.CumulusXcmStorage = new CumulusXcmStorage(this);
            this.DmpQueueStorage = new DmpQueueStorage(this);
            this.PolkadotXcmStorage = new PolkadotXcmStorage(this);
            this.XcmpQueueStorage = new XcmpQueueStorage(this);
            this.AssetRegistryStorage = new AssetRegistryStorage(this);
            this.UnknownTokensStorage = new UnknownTokensStorage(this);
            this.XTokensStorage = new XTokensStorage(this);
        }
    }
}
