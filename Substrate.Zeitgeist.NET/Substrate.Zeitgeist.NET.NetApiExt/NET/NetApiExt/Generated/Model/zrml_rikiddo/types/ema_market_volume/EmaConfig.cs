//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_rikiddo.types.ema_market_volume
{
    
    
    /// <summary>
    /// >> 521 - Composite[zrml_rikiddo.types.ema_market_volume.EmaConfig]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class EmaConfig : BaseType
    {
        
        /// <summary>
        /// >> ema_period
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_rikiddo.types.EnumTimespan EmaPeriod { get; set; }
        /// <summary>
        /// >> ema_period_estimate_after
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_rikiddo.types.EnumTimespan> EmaPeriodEstimateAfter { get; set; }
        /// <summary>
        /// >> smoothing
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.substrate_fixed.FixedU128 Smoothing { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "EmaConfig";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(EmaPeriod.Encode());
            result.AddRange(EmaPeriodEstimateAfter.Encode());
            result.AddRange(Smoothing.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            EmaPeriod = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_rikiddo.types.EnumTimespan();
            EmaPeriod.Decode(byteArray, ref p);
            EmaPeriodEstimateAfter = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_rikiddo.types.EnumTimespan>();
            EmaPeriodEstimateAfter.Decode(byteArray, ref p);
            Smoothing = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.substrate_fixed.FixedU128();
            Smoothing.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
