//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_court.types
{
    
    
    /// <summary>
    /// >> 70 - Composite[zrml_court.types.CourtInfo]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class CourtInfo : BaseType
    {
        
        /// <summary>
        /// >> status
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_court.types.EnumCourtStatus Status { get; set; }
        /// <summary>
        /// >> appeals
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.sp_core.bounded.bounded_vec.BoundedVecT1 Appeals { get; set; }
        /// <summary>
        /// >> round_ends
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_court.types.RoundTiming RoundEnds { get; set; }
        /// <summary>
        /// >> vote_item_type
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_court.types.EnumVoteItemType VoteItemType { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "CourtInfo";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Status.Encode());
            result.AddRange(Appeals.Encode());
            result.AddRange(RoundEnds.Encode());
            result.AddRange(VoteItemType.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Status = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_court.types.EnumCourtStatus();
            Status.Decode(byteArray, ref p);
            Appeals = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.sp_core.bounded.bounded_vec.BoundedVecT1();
            Appeals.Decode(byteArray, ref p);
            RoundEnds = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_court.types.RoundTiming();
            RoundEnds.Decode(byteArray, ref p);
            VoteItemType = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_court.types.EnumVoteItemType();
            VoteItemType.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
