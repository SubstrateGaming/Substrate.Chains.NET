//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_court.pallet
{
    
    
    /// <summary>
    /// >> Error
    /// 
    ///			Custom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)
    ///			of this pallet.
    ///			
    /// </summary>
    public enum Error
    {
        
        /// <summary>
        /// >> JurorDoesNotExist
        /// An account id does not exist on the jurors storage.
        /// </summary>
        JurorDoesNotExist = 0,
        
        /// <summary>
        /// >> MarketDoesNotHaveCourtMechanism
        /// On dispute or resolution, someone tried to pass a non-court market type.
        /// </summary>
        MarketDoesNotHaveCourtMechanism = 1,
        
        /// <summary>
        /// >> MarketIsNotDisputed
        /// The market is not in a state where it can be disputed.
        /// </summary>
        MarketIsNotDisputed = 2,
        
        /// <summary>
        /// >> CallerIsNotACourtParticipant
        /// This operation requires the caller to be a juror or delegator.
        /// </summary>
        CallerIsNotACourtParticipant = 3,
        
        /// <summary>
        /// >> VoteAlreadyRevealed
        /// The vote is not commitment.
        /// </summary>
        VoteAlreadyRevealed = 4,
        
        /// <summary>
        /// >> CommitmentHashMismatch
        /// The vote item and salt reveal do not match the commitment vote.
        /// </summary>
        CommitmentHashMismatch = 5,
        
        /// <summary>
        /// >> CourtNotFound
        /// No court for this market id was found.
        /// </summary>
        CourtNotFound = 6,
        
        /// <summary>
        /// >> NotInVotingPeriod
        /// This operation is only allowed in the voting period.
        /// </summary>
        NotInVotingPeriod = 7,
        
        /// <summary>
        /// >> NotInAggregationPeriod
        /// This operation is only allowed in the aggregation period.
        /// </summary>
        NotInAggregationPeriod = 8,
        
        /// <summary>
        /// >> MaxAppealsReached
        /// The maximum number of appeals has been reached.
        /// </summary>
        MaxAppealsReached = 9,
        
        /// <summary>
        /// >> NotInAppealPeriod
        /// This operation is only allowed in the appeal period.
        /// </summary>
        NotInAppealPeriod = 10,
        
        /// <summary>
        /// >> InvalidVoteState
        /// The caller of this extrinsic needs to be drawn or in the commitment vote state.
        /// </summary>
        InvalidVoteState = 11,
        
        /// <summary>
        /// >> BelowMinJurorStake
        /// The amount is below the minimum required stake.
        /// </summary>
        BelowMinJurorStake = 12,
        
        /// <summary>
        /// >> MaxCourtParticipantsReached
        /// The maximum number of possible jurors has been reached.
        /// </summary>
        MaxCourtParticipantsReached = 13,
        
        /// <summary>
        /// >> AlreadyPreparedExit
        /// In order to exit the court the juror has to exit
        /// the pool first with `prepare_exit_court`.
        /// </summary>
        AlreadyPreparedExit = 14,
        
        /// <summary>
        /// >> JurorNotDrawn
        /// The juror was not randomly selected for the court.
        /// </summary>
        JurorNotDrawn = 15,
        
        /// <summary>
        /// >> JurorDidNotVote
        /// The juror was drawn but did not manage to commitmently vote within the court.
        /// </summary>
        JurorDidNotVote = 16,
        
        /// <summary>
        /// >> VoteAlreadyDenounced
        /// The juror was already denounced.
        /// </summary>
        VoteAlreadyDenounced = 17,
        
        /// <summary>
        /// >> CallerDenouncedItself
        /// A juror tried to denounce herself.
        /// </summary>
        CallerDenouncedItself = 18,
        
        /// <summary>
        /// >> CourtNotClosed
        /// The court is not in the closed state.
        /// </summary>
        CourtNotClosed = 19,
        
        /// <summary>
        /// >> CourtAlreadyReassigned
        /// The juror stakes of the court already got reassigned.
        /// </summary>
        CourtAlreadyReassigned = 20,
        
        /// <summary>
        /// >> NotEnoughJurorsAndDelegatorsStake
        /// There are not enough jurors in the pool.
        /// </summary>
        NotEnoughJurorsAndDelegatorsStake = 21,
        
        /// <summary>
        /// >> MarketReportNotFound
        /// The report of the market was not found.
        /// </summary>
        MarketReportNotFound = 22,
        
        /// <summary>
        /// >> MaxCourtIdReached
        /// The maximum number of court ids is reached.
        /// </summary>
        MaxCourtIdReached = 23,
        
        /// <summary>
        /// >> AmountExceedsBalance
        /// The caller has not enough funds to join the court with the specified amount.
        /// </summary>
        AmountExceedsBalance = 24,
        
        /// <summary>
        /// >> AmountBelowLastJoin
        /// After the first join of the court the amount has to be equal or higher than the current stake.
        /// This is to ensure the slashable amount in active court rounds
        /// is still smaller or equal to the stake.
        /// It is also necessary to calculate the `unconsumed` stake properly.
        /// Otherwise a juror could just reduce the probability to get selected whenever they want.
        /// But this has to be done by `prepare_exit_court` and `exit_court`.
        /// Additionally, the `join_court` and `delegate` extrinsics
        /// use `extend_lock` and not `set_lock` or `remove_lock`.
        /// This means those extrinsics are not meant to get out, but only to get into the court.
        /// </summary>
        AmountBelowLastJoin = 25,
        
        /// <summary>
        /// >> AmountBelowLowestJuror
        /// The amount is too low to kick the lowest juror out of the stake-weighted pool.
        /// </summary>
        AmountBelowLowestJuror = 26,
        
        /// <summary>
        /// >> CourtParticipantTwiceInPool
        /// This should not happen, because the juror account should only be once in a pool.
        /// </summary>
        CourtParticipantTwiceInPool = 27,
        
        /// <summary>
        /// >> CallerNotInSelectedDraws
        /// The caller of this function is not part of the juror draws.
        /// </summary>
        CallerNotInSelectedDraws = 28,
        
        /// <summary>
        /// >> AppealBondExceedsBalance
        /// The callers balance is lower than the appeal bond.
        /// </summary>
        AppealBondExceedsBalance = 29,
        
        /// <summary>
        /// >> PrematureExit
        /// The juror should at least wait one inflation period after the funds can be unstaked.
        /// Otherwise hopping in and out for inflation rewards is possible.
        /// </summary>
        PrematureExit = 30,
        
        /// <summary>
        /// >> PrepareExitAtNotPresent
        /// The `prepare_exit_at` field is not present.
        /// </summary>
        PrepareExitAtNotPresent = 31,
        
        /// <summary>
        /// >> MaxDelegationsReached
        /// The maximum number of delegations is reached for this account.
        /// </summary>
        MaxDelegationsReached = 32,
        
        /// <summary>
        /// >> JurorDelegated
        /// The juror decided to be a delegator.
        /// </summary>
        JurorDelegated = 33,
        
        /// <summary>
        /// >> SelfDelegationNotAllowed
        /// A delegation to the own account is not possible.
        /// </summary>
        SelfDelegationNotAllowed = 34,
        
        /// <summary>
        /// >> IdenticalDelegationsNotAllowed
        /// The set of delegations has to be distinct.
        /// </summary>
        IdenticalDelegationsNotAllowed = 35,
        
        /// <summary>
        /// >> NoDelegations
        /// The call to `delegate` is not valid if no delegations are provided.
        /// </summary>
        NoDelegations = 36,
        
        /// <summary>
        /// >> DelegatedToInvalidJuror
        /// The set of delegations should contain only valid and active juror accounts.
        /// </summary>
        DelegatedToInvalidJuror = 37,
        
        /// <summary>
        /// >> MarketIdToCourtIdNotFound
        /// The market id to court id mapping was not found.
        /// </summary>
        MarketIdToCourtIdNotFound = 38,
        
        /// <summary>
        /// >> CourtIdToMarketIdNotFound
        /// The court id to market id mapping was not found.
        /// </summary>
        CourtIdToMarketIdNotFound = 39,
        
        /// <summary>
        /// >> InvalidVoteItemForOutcomeCourt
        /// The vote item is not valid for this (outcome) court.
        /// </summary>
        InvalidVoteItemForOutcomeCourt = 40,
        
        /// <summary>
        /// >> InvalidVoteItemForBinaryCourt
        /// The vote item is not valid for this (binary) court.
        /// </summary>
        InvalidVoteItemForBinaryCourt = 41,
        
        /// <summary>
        /// >> AppealedVoteItemIsNoOutcome
        /// The appealed vote item is not an outcome.
        /// </summary>
        AppealedVoteItemIsNoOutcome = 42,
        
        /// <summary>
        /// >> WinnerVoteItemIsNoOutcome
        /// The winner vote item is not an outcome.
        /// </summary>
        WinnerVoteItemIsNoOutcome = 43,
        
        /// <summary>
        /// >> OutcomeMismatch
        /// The outcome does not match the market outcomes.
        /// </summary>
        OutcomeMismatch = 44,
        
        /// <summary>
        /// >> VoteItemIsNoOutcome
        /// The vote item was expected to be an outcome, but is actually not an outcome.
        /// </summary>
        VoteItemIsNoOutcome = 45,
        
        /// <summary>
        /// >> Unexpected
        /// Action cannot be completed because an unexpected error has occurred. This should be
        /// reported to protocol maintainers.
        /// </summary>
        Unexpected = 46,
        
        /// <summary>
        /// >> InflationExceedsMaxYearlyInflation
        /// The inflation rate is too high.
        /// </summary>
        InflationExceedsMaxYearlyInflation = 47,
    }
    
    /// <summary>
    /// >> 501 - Variant[zrml_court.pallet.Error]
    /// 
    ///			Custom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)
    ///			of this pallet.
    ///			
    /// </summary>
    public sealed class EnumError : BaseEnumExt<Error, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, BaseVoid, Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_court.pallet.EnumUnexpectedError, BaseVoid>
    {
    }
}
