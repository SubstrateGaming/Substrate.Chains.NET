//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market
{
    
    
    /// <summary>
    /// >> 104 - Composite[zeitgeist_primitives.market.Market]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class Market : BaseType
    {
        
        /// <summary>
        /// >> base_asset
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.asset.EnumAsset BaseAsset { get; set; }
        /// <summary>
        /// >> creator
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 Creator { get; set; }
        /// <summary>
        /// >> creation
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EnumMarketCreation Creation { get; set; }
        /// <summary>
        /// >> creator_fee
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill CreatorFee { get; set; }
        /// <summary>
        /// >> oracle
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 Oracle { get; set; }
        /// <summary>
        /// >> metadata
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8> Metadata { get; set; }
        /// <summary>
        /// >> market_type
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EnumMarketType MarketType { get; set; }
        /// <summary>
        /// >> period
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EnumMarketPeriod Period { get; set; }
        /// <summary>
        /// >> deadlines
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.Deadlines Deadlines { get; set; }
        /// <summary>
        /// >> scoring_rule
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EnumScoringRule ScoringRule { get; set; }
        /// <summary>
        /// >> status
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EnumMarketStatus Status { get; set; }
        /// <summary>
        /// >> report
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.Report> Report { get; set; }
        /// <summary>
        /// >> resolved_outcome
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.outcome_report.EnumOutcomeReport> ResolvedOutcome { get; set; }
        /// <summary>
        /// >> dispute_mechanism
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EnumMarketDisputeMechanism> DisputeMechanism { get; set; }
        /// <summary>
        /// >> bonds
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.MarketBonds Bonds { get; set; }
        /// <summary>
        /// >> early_close
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EarlyClose> EarlyClose { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "Market";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(BaseAsset.Encode());
            result.AddRange(Creator.Encode());
            result.AddRange(Creation.Encode());
            result.AddRange(CreatorFee.Encode());
            result.AddRange(Oracle.Encode());
            result.AddRange(Metadata.Encode());
            result.AddRange(MarketType.Encode());
            result.AddRange(Period.Encode());
            result.AddRange(Deadlines.Encode());
            result.AddRange(ScoringRule.Encode());
            result.AddRange(Status.Encode());
            result.AddRange(Report.Encode());
            result.AddRange(ResolvedOutcome.Encode());
            result.AddRange(DisputeMechanism.Encode());
            result.AddRange(Bonds.Encode());
            result.AddRange(EarlyClose.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            BaseAsset = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.asset.EnumAsset();
            BaseAsset.Decode(byteArray, ref p);
            Creator = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32();
            Creator.Decode(byteArray, ref p);
            Creation = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EnumMarketCreation();
            Creation.Decode(byteArray, ref p);
            CreatorFee = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Perbill();
            CreatorFee.Decode(byteArray, ref p);
            Oracle = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32();
            Oracle.Decode(byteArray, ref p);
            Metadata = new Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>();
            Metadata.Decode(byteArray, ref p);
            MarketType = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EnumMarketType();
            MarketType.Decode(byteArray, ref p);
            Period = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EnumMarketPeriod();
            Period.Decode(byteArray, ref p);
            Deadlines = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.Deadlines();
            Deadlines.Decode(byteArray, ref p);
            ScoringRule = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EnumScoringRule();
            ScoringRule.Decode(byteArray, ref p);
            Status = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EnumMarketStatus();
            Status.Decode(byteArray, ref p);
            Report = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.Report>();
            Report.Decode(byteArray, ref p);
            ResolvedOutcome = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.outcome_report.EnumOutcomeReport>();
            ResolvedOutcome.Decode(byteArray, ref p);
            DisputeMechanism = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EnumMarketDisputeMechanism>();
            DisputeMechanism.Decode(byteArray, ref p);
            Bonds = new Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.MarketBonds();
            Bonds.Decode(byteArray, ref p);
            EarlyClose = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.EarlyClose>();
            EarlyClose.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
