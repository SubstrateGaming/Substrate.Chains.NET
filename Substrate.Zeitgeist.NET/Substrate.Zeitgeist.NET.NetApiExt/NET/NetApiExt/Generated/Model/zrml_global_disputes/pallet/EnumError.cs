//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_global_disputes.pallet
{
    
    
    /// <summary>
    /// >> Error
    /// 
    ///			Custom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)
    ///			of this pallet.
    ///			
    /// </summary>
    public enum Error
    {
        
        /// <summary>
        /// >> AmountTooLow
        /// Sender tried to vote with an amount below a defined minimum.
        /// </summary>
        AmountTooLow = 0,
        
        /// <summary>
        /// >> InvalidGlobalDisputeStatus
        /// The global dispute status is invalid for this operation.
        /// </summary>
        InvalidGlobalDisputeStatus = 1,
        
        /// <summary>
        /// >> InsufficientAmount
        /// Sender does not have enough funds for the vote on an outcome.
        /// </summary>
        InsufficientAmount = 2,
        
        /// <summary>
        /// >> MaxOwnersReached
        /// The maximum amount of owners is reached.
        /// </summary>
        MaxOwnersReached = 3,
        
        /// <summary>
        /// >> MaxVotesReached
        /// The maximum number of votes for this account is reached.
        /// </summary>
        MaxVotesReached = 4,
        
        /// <summary>
        /// >> NoFundsToReward
        /// The amount in the reward pot is zero.
        /// </summary>
        NoFundsToReward = 5,
        
        /// <summary>
        /// >> GlobalDisputeNotFound
        /// No global dispute present at the moment.
        /// </summary>
        GlobalDisputeNotFound = 6,
        
        /// <summary>
        /// >> OutcomeAlreadyExists
        /// The voting outcome has been already added.
        /// </summary>
        OutcomeAlreadyExists = 7,
        
        /// <summary>
        /// >> OutcomeDoesNotExist
        /// The outcome specified is not present in the voting outcomes.
        /// </summary>
        OutcomeDoesNotExist = 8,
        
        /// <summary>
        /// >> OutcomeMismatch
        /// Submitted outcome does not match market type.
        /// </summary>
        OutcomeMismatch = 9,
        
        /// <summary>
        /// >> OutcomesNotFullyCleaned
        /// The outcomes are not fully cleaned yet.
        /// </summary>
        OutcomesNotFullyCleaned = 10,
        
        /// <summary>
        /// >> SharedPossessionRequired
        /// Only a shared possession is allowed.
        /// </summary>
        SharedPossessionRequired = 11,
        
        /// <summary>
        /// >> UnfinishedGlobalDispute
        /// The global dispute period is not over yet. The winner is not yet determined.
        /// </summary>
        UnfinishedGlobalDispute = 12,
        
        /// <summary>
        /// >> AddOutcomePeriodIsOver
        /// The period in which outcomes can be added is over.
        /// </summary>
        AddOutcomePeriodIsOver = 13,
        
        /// <summary>
        /// >> NotInGdVotingPeriod
        /// It is not inside the period in which votes are allowed.
        /// </summary>
        NotInGdVotingPeriod = 14,
        
        /// <summary>
        /// >> GlobalDisputeNotDestroyed
        /// The operation requires a global dispute in a destroyed state.
        /// </summary>
        GlobalDisputeNotDestroyed = 15,
        
        /// <summary>
        /// >> GlobalDisputeAlreadyExists
        /// The global dispute was already started.
        /// </summary>
        GlobalDisputeAlreadyExists = 16,
    }
    
    /// <summary>
    /// >> 549 - Variant[zrml_global_disputes.pallet.Error]
    /// 
    ///			Custom [dispatch errors](https://docs.substrate.io/main-docs/build/events-errors/)
    ///			of this pallet.
    ///			
    /// </summary>
    public sealed class EnumError : BaseEnum<Error>
    {
    }
}
