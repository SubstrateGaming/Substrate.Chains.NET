//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.pallet_author_mapping.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains one variant per dispatchable that can be called by an extrinsic.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> add_association
        /// Register your NimbusId onchain so blocks you author are associated with your account.
        /// 
        /// Users who have been (or will soon be) elected active collators in staking,
        /// should submit this extrinsic to have their blocks accepted and earn rewards.
        /// </summary>
        add_association = 0,
        
        /// <summary>
        /// >> update_association
        /// Change your Mapping.
        /// 
        /// This is useful for normal key rotation or for when switching from one physical collator
        /// machine to another. No new security deposit is required.
        /// This sets keys to new_nimbus_id.into() by default.
        /// </summary>
        update_association = 1,
        
        /// <summary>
        /// >> clear_association
        /// Clear your Mapping.
        /// 
        /// This is useful when you are no longer an author and would like to re-claim your security
        /// deposit.
        /// </summary>
        clear_association = 2,
        
        /// <summary>
        /// >> remove_keys
        /// Remove your Mapping.
        /// 
        /// This is useful when you are no longer an author and would like to re-claim your security
        /// deposit.
        /// </summary>
        remove_keys = 3,
        
        /// <summary>
        /// >> set_keys
        /// Set association and session keys at once.
        /// 
        /// This is useful for key rotation to update Nimbus and VRF keys in one call.
        /// No new security deposit is required. Will replace `update_association` which is kept
        /// now for backwards compatibility reasons.
        /// </summary>
        set_keys = 4,
    }
    
    /// <summary>
    /// >> 346 - Variant[pallet_author_mapping.pallet.Call]
    /// Contains one variant per dispatchable that can be called by an extrinsic.
    /// </summary>
    public sealed class EnumCall : BaseEnumExt<Call, Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.nimbus_primitives.nimbus_crypto.Public, BaseTuple<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.nimbus_primitives.nimbus_crypto.Public, Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.nimbus_primitives.nimbus_crypto.Public>, Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.nimbus_primitives.nimbus_crypto.Public, BaseVoid, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>
    {
    }
}
