//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.Zeitgeist.NET.RestService.Generated.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Zeitgeist.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// LiquidityMiningController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class LiquidityMiningController : ControllerBase
    {
        
        private ILiquidityMiningStorage _liquidityMiningStorage;
        
        /// <summary>
        /// LiquidityMiningController constructor.
        /// </summary>
        public LiquidityMiningController(ILiquidityMiningStorage liquidityMiningStorage)
        {
            _liquidityMiningStorage = liquidityMiningStorage;
        }
        
        /// <summary>
        /// >> BlockBoughtShares
        ///  Shares bought in the current block being constructed. Automatically *erased* after each finalized block.
        /// </summary>
        [HttpGet("BlockBoughtShares")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.Zeitgeist.NET.NetApiExt.Generated.Storage.LiquidityMiningStorage), "BlockBoughtSharesParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U128, Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>))]
        public IActionResult GetBlockBoughtShares(string key)
        {
            return this.Ok(_liquidityMiningStorage.GetBlockBoughtShares(key));
        }
        
        /// <summary>
        /// >> BlockSoldShares
        ///  Shares sold in the current block being constructed. Automatically *erased* after each finalized block.
        /// </summary>
        [HttpGet("BlockSoldShares")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.Zeitgeist.NET.NetApiExt.Generated.Storage.LiquidityMiningStorage), "BlockSoldSharesParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U128, Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>))]
        public IActionResult GetBlockSoldShares(string key)
        {
            return this.Ok(_liquidityMiningStorage.GetBlockSoldShares(key));
        }
        
        /// <summary>
        /// >> OwnedValues
        ///  Owned balances (not shares) that are going to be distributed as incentives. Automatically
        ///  *updated* after each finalized block.
        /// </summary>
        [HttpGet("OwnedValues")]
        [ProducesResponseType(typeof(Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_liquidity_mining.owned_values_params.OwnedValuesParams), 200)]
        [StorageKeyBuilder(typeof(Substrate.Zeitgeist.NET.NetApiExt.Generated.Storage.LiquidityMiningStorage), "OwnedValuesParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.NetApi.Model.Types.Primitive.U128, Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>))]
        public IActionResult GetOwnedValues(string key)
        {
            return this.Ok(_liquidityMiningStorage.GetOwnedValues(key));
        }
        
        /// <summary>
        /// >> PerBlockIncentive
        ///  Per block distribution. How much each block will distribute across bought shares.
        /// </summary>
        [HttpGet("PerBlockIncentive")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.Zeitgeist.NET.NetApiExt.Generated.Storage.LiquidityMiningStorage), "PerBlockIncentiveParams")]
        public IActionResult GetPerBlockIncentive()
        {
            return this.Ok(_liquidityMiningStorage.GetPerBlockIncentive());
        }
    }
}
