//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.Zeitgeist.NET.RestService.Generated.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Zeitgeist.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// RikiddoSigmoidFeeMarketEmaController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class RikiddoSigmoidFeeMarketEmaController : ControllerBase
    {
        
        private IRikiddoSigmoidFeeMarketEmaStorage _rikiddoSigmoidFeeMarketEmaStorage;
        
        /// <summary>
        /// RikiddoSigmoidFeeMarketEmaController constructor.
        /// </summary>
        public RikiddoSigmoidFeeMarketEmaController(IRikiddoSigmoidFeeMarketEmaStorage rikiddoSigmoidFeeMarketEmaStorage)
        {
            _rikiddoSigmoidFeeMarketEmaStorage = rikiddoSigmoidFeeMarketEmaStorage;
        }
        
        /// <summary>
        /// >> RikiddoPerPool
        ///  Storage that maps pool ids to Rikiddo instances.
        /// </summary>
        [HttpGet("RikiddoPerPool")]
        [ProducesResponseType(typeof(Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zrml_rikiddo.types.rikiddo_sigmoid_mv.RikiddoSigmoidMV), 200)]
        [StorageKeyBuilder(typeof(Substrate.Zeitgeist.NET.NetApiExt.Generated.Storage.RikiddoSigmoidFeeMarketEmaStorage), "RikiddoPerPoolParams", typeof(Substrate.NetApi.Model.Types.Primitive.U128))]
        public IActionResult GetRikiddoPerPool(string key)
        {
            return this.Ok(_rikiddoSigmoidFeeMarketEmaStorage.GetRikiddoPerPool(key));
        }
    }
}
