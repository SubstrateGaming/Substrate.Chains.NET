//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.Zeitgeist.NET.RestService.Generated.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Zeitgeist.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// StyxController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class StyxController : ControllerBase
    {
        
        private IStyxStorage _styxStorage;
        
        /// <summary>
        /// StyxController constructor.
        /// </summary>
        public StyxController(IStyxStorage styxStorage)
        {
            _styxStorage = styxStorage;
        }
        
        /// <summary>
        /// >> Crossings
        ///  Keep track of crossings. Accounts are only able to cross once.
        /// </summary>
        [HttpGet("Crossings")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseTuple), 200)]
        [StorageKeyBuilder(typeof(Substrate.Zeitgeist.NET.NetApiExt.Generated.Storage.StyxStorage), "CrossingsParams", typeof(Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32))]
        public IActionResult GetCrossings(string key)
        {
            return this.Ok(_styxStorage.GetCrossings(key));
        }
        
        /// <summary>
        /// >> BurnAmount
        ///  An extra layer of pseudo randomness.
        /// </summary>
        [HttpGet("BurnAmount")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.Zeitgeist.NET.NetApiExt.Generated.Storage.StyxStorage), "BurnAmountParams")]
        public IActionResult GetBurnAmount()
        {
            return this.Ok(_styxStorage.GetBurnAmount());
        }
    }
}
