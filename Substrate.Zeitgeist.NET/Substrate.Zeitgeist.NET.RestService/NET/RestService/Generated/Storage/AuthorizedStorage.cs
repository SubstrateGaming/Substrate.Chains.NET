//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Zeitgeist.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IAuthorizedStorage interface definition.
    /// </summary>
    public interface IAuthorizedStorage : IStorage
    {
        
        /// <summary>
        /// >> AuthorizedOutcomeReports
        ///  Maps the market id to the outcome reported by the authorized account.    
        /// </summary>
        Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.AuthorityReport GetAuthorizedOutcomeReports(string key);
    }
    
    /// <summary>
    /// AuthorizedStorage class definition.
    /// </summary>
    public sealed class AuthorizedStorage : IAuthorizedStorage
    {
        
        /// <summary>
        /// _authorizedOutcomeReportsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.AuthorityReport> _authorizedOutcomeReportsTypedStorage;
        
        /// <summary>
        /// AuthorizedStorage constructor.
        /// </summary>
        public AuthorizedStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.AuthorizedOutcomeReportsTypedStorage = new TypedMapStorage<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.AuthorityReport>("Authorized.AuthorizedOutcomeReports", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _authorizedOutcomeReportsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.AuthorityReport> AuthorizedOutcomeReportsTypedStorage
        {
            get
            {
                return _authorizedOutcomeReportsTypedStorage;
            }
            set
            {
                _authorizedOutcomeReportsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await AuthorizedOutcomeReportsTypedStorage.InitializeAsync("Authorized", "AuthorizedOutcomeReports");
        }
        
        /// <summary>
        /// Implements any storage change for Authorized.AuthorizedOutcomeReports
        /// </summary>
        [StorageChange("Authorized", "AuthorizedOutcomeReports")]
        public void OnUpdateAuthorizedOutcomeReports(string key, string data)
        {
            AuthorizedOutcomeReportsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> AuthorizedOutcomeReports
        ///  Maps the market id to the outcome reported by the authorized account.    
        /// </summary>
        public Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.AuthorityReport GetAuthorizedOutcomeReports(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AuthorizedOutcomeReportsTypedStorage.Dictionary.TryGetValue(key, out Substrate.Zeitgeist.NET.NetApiExt.Generated.Model.zeitgeist_primitives.market.AuthorityReport result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
