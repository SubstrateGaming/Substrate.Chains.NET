//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Astar.NET.NetApiExt.Generated.Storage
{
    
    
    public sealed class EthCallStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public EthCallStorage(SubstrateClientExt client)
        {
            this._client = client;
        }
    }
    
    public sealed class EthCallCalls
    {
        
        /// <summary>
        /// >> call
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method Call(Substrate.Astar.NET.NetApiExt.Generated.Model.astar_runtime.EnumRuntimeCall call, Substrate.Astar.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 signer, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8> signature, Substrate.NetApi.Model.Types.Base.BaseCom<Substrate.NetApi.Model.Types.Primitive.U32> nonce)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(call.Encode());
            byteArray.AddRange(signer.Encode());
            byteArray.AddRange(signature.Encode());
            byteArray.AddRange(nonce.Encode());
            return new Method(62, "EthCall", 0, "call", byteArray.ToArray());
        }
    }
    
    public sealed class EthCallConstants
    {
        
        /// <summary>
        /// >> CallFee
        ///  The call processing fee amount.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 CallFee()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U128();
            result.Create("0x00008A5D784563010000000000000000");
            return result;
        }
        
        /// <summary>
        /// >> CallMagicNumber
        ///  The call magic number.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U16 CallMagicNumber()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U16();
            result.Create("0x5002");
            return result;
        }
    }
    
    public enum EthCallErrors
    {
        
        /// <summary>
        /// >> DecodeFailure
        /// Signature decode fails.
        /// </summary>
        DecodeFailure,
        
        /// <summary>
        /// >> InvalidSignature
        /// Signature and account mismatched.
        /// </summary>
        InvalidSignature,
        
        /// <summary>
        /// >> BadNonce
        /// Bad nonce parameter.
        /// </summary>
        BadNonce,
    }
}
