//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.Astar.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.Astar.NET.NetApiExt.Generated.Model.ethereum.block;
   using Substrate.Astar.NET.NetApiExt.Generated.Model.ethereum.receipt;
   using Substrate.Astar.NET.NetApiExt.Generated.Model.fp_rpc;
   using Substrate.Astar.NET.NetApiExt.Generated.Model.primitive_types;
   using Substrate.Astar.NET.RestClient.Generated.Interfaces;
   
   public sealed class EthereumControllerClient : BaseClient, IEthereumControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public EthereumControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<BaseVec<BaseTuple<Substrate.Astar.NET.NetApiExt.Generated.Model.ethereum.transaction.EnumTransactionV2, TransactionStatus, EnumReceiptV3>>> GetPending()
      {
         return await SendRequestAsync<BaseVec<BaseTuple<Substrate.Astar.NET.NetApiExt.Generated.Model.ethereum.transaction.EnumTransactionV2, TransactionStatus, EnumReceiptV3>>>(_httpClient, "ethereum/pending");
      }
      public async Task<bool> SubscribePending()
      {
         return await _subscriptionClient.SubscribeAsync("Ethereum.Pending");
      }
      public async Task<Block> GetCurrentBlock()
      {
         return await SendRequestAsync<Block>(_httpClient, "ethereum/currentblock");
      }
      public async Task<bool> SubscribeCurrentBlock()
      {
         return await _subscriptionClient.SubscribeAsync("Ethereum.CurrentBlock");
      }
      public async Task<BaseVec<EnumReceiptV3>> GetCurrentReceipts()
      {
         return await SendRequestAsync<BaseVec<EnumReceiptV3>>(_httpClient, "ethereum/currentreceipts");
      }
      public async Task<bool> SubscribeCurrentReceipts()
      {
         return await _subscriptionClient.SubscribeAsync("Ethereum.CurrentReceipts");
      }
      public async Task<BaseVec<TransactionStatus>> GetCurrentTransactionStatuses()
      {
         return await SendRequestAsync<BaseVec<TransactionStatus>>(_httpClient, "ethereum/currenttransactionstatuses");
      }
      public async Task<bool> SubscribeCurrentTransactionStatuses()
      {
         return await _subscriptionClient.SubscribeAsync("Ethereum.CurrentTransactionStatuses");
      }
      public async Task<H256> GetBlockHash(U256 key)
      {
         return await SendRequestAsync<H256>(_httpClient, "ethereum/blockhash", Substrate.Astar.NET.NetApiExt.Generated.Storage.EthereumStorage.BlockHashParams(key));
      }
      public async Task<bool> SubscribeBlockHash(U256 key)
      {
         return await _subscriptionClient.SubscribeAsync("Ethereum.BlockHash", Substrate.Astar.NET.NetApiExt.Generated.Storage.EthereumStorage.BlockHashParams(key));
      }
   }
}
