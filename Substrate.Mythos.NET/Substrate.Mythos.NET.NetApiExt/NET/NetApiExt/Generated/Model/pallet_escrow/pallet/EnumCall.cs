//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Mythos.NET.NetApiExt.Generated.Model.pallet_escrow.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> deposit
        /// Deposits a specified amount of funds directly into the balance of a target account by transferring from the balance of the origin.
        /// The deposited amount is reserved in the target account. The reserved funds can later be released partially or in full
        /// by an authorized escrow agent. This function ensures that the deposit meets or exceeds the minimum required balance.
        /// 
        /// # Arguments
        /// * `origin` - The origin of the transaction, whose balance the funds are transferred from.
        /// * `address` - The target account that will receive and hold the reserved funds.
        /// * `value` - The amount to be deposited and reserved.
        /// * `authorised_agent` - The agent authorized to manage and release the reserved funds.
        /// 
        /// # Errors
        /// * `Error::<T>::DepositTooLow` if the deposit amount is below the minimum threshold.
        /// * `Error::<T>::BalanceTooLow` if the target account balance is below the existential deposit.
        /// </summary>
        deposit = 0,
        
        /// <summary>
        /// >> release
        /// Releases a specified amount from the reserved balance of an account to its available balance.
        /// This action can only be initiated by an authorized escrow agent and ensures that the release does not exceed
        /// the reserved amount. This method is used primarily to reduce or clear the reservations made previously by the deposit action.
        /// 
        /// # Arguments
        /// * `origin` - The origin of the transaction, should be an authorized escrow agent.
        /// * `address` - The account holder of the deposited funds.
        /// * `value` - The amount to be released from the reserved balance.
        /// 
        /// # Errors
        /// * `Error::<T>::InsufficientBalance` if the reserved balance in the account is less than the amount requested to be released.
        /// * `Error::<T>::NoSuchDeposit` if there is no deposit record for the given accounts, indicating that no such reserved amount exists.
        /// </summary>
        release = 1,
        
        /// <summary>
        /// >> revoke
        /// Revokes a reserved deposit, transferring the remaining reserved funds to a specified destination account for a specified reason.
        /// This function is typically used when a transaction or agreement fails to complete as planned, and the funds need to be returned or redirected.
        /// Only authorized agents can initiate a revocation to ensure control and security over the process.
        /// 
        /// # Arguments
        /// * `origin` - The origin of the transaction, should be an authorized escrow agent.
        /// * `address` - The account from which the reserved funds will be withdrawn.
        /// * `destination` - The account to which the funds will be transferred.
        /// * `reason` - A byte vector detailing the reason for the revocation, providing transparency and traceability.
        /// 
        /// # Errors
        /// * `Error::<T>::NoSuchDeposit` if there is no record of the reserved deposit for the given account and agent combination,
        ///    indicating that no funds are available to be revoked.
        /// </summary>
        revoke = 2,
        
        /// <summary>
        /// >> force_release
        /// Forcefully revokes a deposit under special conditions, overriding typical checks.
        /// This function is intended for emergency or administrative use where standard revocation processes are insufficient or inappropriate.
        /// It requires root privileges, underscoring its use in exceptional circumstances only.
        /// 
        /// # Arguments
        /// * `origin` - The origin of the transaction, which must be a root call to ensure administrative authority.
        /// * `address` - The account from which reserved funds will be moved.
        /// * `agent` - The agent initially authorized to manage the deposit, involved for traceability and records.
        /// * `destination` - The account to which the funds will be transferred, potentially different from the original depositor.
        /// * `reason` - A byte vector detailing the reason for the forced revocation, providing necessary context for this exceptional action.
        /// 
        /// # Errors
        /// * `Error::<T>::NoSuchDeposit` if there is no record of the reserved deposit for the given account, indicating that no funds are available to be forcibly revoked.
        /// </summary>
        force_release = 3,
    }
    
    /// <summary>
    /// >> 351 - Variant[pallet_escrow.pallet.Call]
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public sealed class EnumCall : BaseEnumRust<Call>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumCall()
        {
				AddTypeDecoder<BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.NetApi.Model.Types.Primitive.U128, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>>(Call.deposit);
				AddTypeDecoder<BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.NetApi.Model.Types.Primitive.U128>>(Call.release);
				AddTypeDecoder<BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>>(Call.revoke);
				AddTypeDecoder<BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.NetApi.Model.Types.Primitive.U128>>(Call.force_release);
        }
    }
}
