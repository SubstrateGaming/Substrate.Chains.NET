//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.Mythos.NET.NetApiExt.Generated.Model.pallet_myth_proxy.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> add_proxy
        /// Adds a new proxy.
        /// 
        /// This extrinsic allows a delegator to grant permission to a delegate account to act on their behalf
        /// for a specific subset of calls defined by `proxy_type`. Optionally, a sponsor can be specified who will
        /// reserve the deposit required for the proxy. The reserved deposit is returned when the proxy is removed.
        /// 
        /// Emits `ProxyCreated` event.
        /// 
        /// # Parameters
        /// - `origin`: The delegator's account.
        /// - `delegate`: The account that is granted the proxy permission.
        /// - `proxy_type`: The type of proxy, which defines the subset of calls that the delegate can make on behalf of the delegator.
        /// - `sponsor`: (Optional) The account that will reserve the deposit for the proxy. If not provided, the delegator's balance will be reserved.
        /// 
        /// # Errors
        /// - `SponsorshipUnauthorized`: If the sponsor did not approve the delegator to use their funds.
        /// </summary>
        add_proxy = 0,
        
        /// <summary>
        /// >> proxy
        /// Executes a call on behalf of the delegator.
        /// 
        /// This extrinsic allows a delegate account to execute a call on behalf of the delegator,
        /// provided the delegate has the appropriate proxy permission. The call must be within the
        /// subset of allowed calls defined by the proxy type.
        /// 
        /// Emits `ProxyExecuted` event on success. If the call fails, the error is returned.
        /// 
        /// # Parameters
        /// - `origin`: The delegate's account.
        /// - `address`: The delegator's account on whose behalf the call is made.
        /// - `call`: The call to be executed.
        /// 
        /// # Errors
        /// - `NotProxy`: If the delegate does not have proxy permission from the delegator.
        /// - `frame_system::Error::<T>::CallFiltered`: If the call is not within the allowed subset of calls for the proxy.
        /// </summary>
        proxy = 1,
        
        /// <summary>
        /// >> remove_proxy
        /// Removes an existing proxy.
        /// 
        /// This extrinsic allows a delegator to remove a proxy permission previously granted to a delegate.
        /// If a sponsor was specified during the proxy creation, the reserved deposit is returned to the sponsor.
        /// 
        /// Emits `ProxyRemoved` event.
        /// 
        /// # Parameters
        /// - `origin`: The delegator's account.
        /// - `delegate`: The account whose proxy permission is to be removed.
        /// 
        /// # Errors
        /// - `NoSuchProxy`: If the proxy does not exist.
        /// </summary>
        remove_proxy = 2,
        
        /// <summary>
        /// >> approve_proxy_funding
        /// Approves funding for a proxy.
        /// 
        /// This extrinsic allows a sponsor agent to approve the reservation of funds for a proxy on behalf
        /// of the sponsor. The approval must be given before the proxy can be created using the sponsor's funds.
        /// 
        /// Emits `ProxySponsorshipApproved` event.
        /// 
        /// # Parameters
        /// - `origin`: The sponsor agent's account.
        /// - `sponsor`: The sponsor's account that will reserve the funds.
        /// - `delegator`: The delegator's account that will use the sponsor's funds.
        /// 
        /// # Errors
        /// - `SponsorAgentUnauthorized`: If the caller is not an authorized agent of the sponsor.
        /// </summary>
        approve_proxy_funding = 3,
        
        /// <summary>
        /// >> register_sponsor_agent
        /// Registers a sponsor agent.
        /// 
        /// This extrinsic allows a sponsor to register an agent who is authorized to approve the reservation
        /// of funds for proxies on behalf of the sponsor. This helps in delegating the responsibility of
        /// managing proxy fund reservations while keeping the sponsor's credentials secure.
        /// 
        /// Emits `SponsorAgentRegistered` event.
        /// 
        /// # Parameters
        /// - `origin`: The sponsor's account.
        /// - `sponsor_agent`: The account to be registered as the sponsor's agent.
        /// </summary>
        register_sponsor_agent = 4,
        
        /// <summary>
        /// >> revoke_sponsor_agent
        /// Revokes a sponsor agent.
        /// 
        /// Revokes the authorization of a sponsor agent. Once revoked, the agent will no longer be able
        /// to approve the reservation of funds for proxies on behalf of the sponsor.
        /// All previously approved fund reservations by this agent that have not yet been used to create proxies will also be invalidated.
        /// Existing proxies created with the agent's approval will remain unaffected.
        /// 
        /// Emits `SponsorAgentRevoked` event.
        /// 
        /// # Parameters
        /// - `origin`: The sponsor's account.
        /// - `sponsor_agent`: The account to be revoked as the sponsor's agent.
        /// 
        /// # Errors
        /// - `SponsorAgentUnauthorized`: If the specified agent is not currently authorized by the sponsor.
        /// </summary>
        revoke_sponsor_agent = 5,
        
        /// <summary>
        /// >> remove_sponsored_proxy
        /// Removes a proxy sponsored by the caller.
        /// 
        /// This extrinsic allows a sponsor to remove a proxy that they have sponsored. The reserved deposit
        /// is returned to the sponsor upon removal of the proxy.
        /// 
        /// Emits `ProxyRemoved` event.
        /// 
        /// # Parameters
        /// - `origin`: The sponsor's account.
        /// - `delegator`: The account that delegated its authority.
        /// - `delegate`: The account that received the delegation.
        /// 
        /// # Errors
        /// - `NoSuchProxy`: If the proxy does not exist.
        /// - `Unauthorized`: If the caller is not the sponsor of the specified proxy.
        /// </summary>
        remove_sponsored_proxy = 6,
    }
    
    /// <summary>
    /// >> 352 - Variant[pallet_myth_proxy.pallet.Call]
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public sealed class EnumCall : BaseEnumRust<Call>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumCall()
        {
				AddTypeDecoder<BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.mainnet_runtime.EnumProxyType, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>>>(Call.add_proxy);
				AddTypeDecoder<BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.mainnet_runtime.EnumRuntimeCall>>(Call.proxy);
				AddTypeDecoder<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>(Call.remove_proxy);
				AddTypeDecoder<BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>>(Call.approve_proxy_funding);
				AddTypeDecoder<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>(Call.register_sponsor_agent);
				AddTypeDecoder<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>(Call.revoke_sponsor_agent);
				AddTypeDecoder<BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>>(Call.remove_sponsored_proxy);
        }
    }
}
