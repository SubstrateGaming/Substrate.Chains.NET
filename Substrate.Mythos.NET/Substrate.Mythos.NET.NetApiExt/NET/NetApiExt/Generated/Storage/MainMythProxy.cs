//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Mythos.NET.NetApiExt.Generated.Storage
{
    
    
    /// <summary>
    /// >> MythProxyStorage
    /// </summary>
    public sealed class MythProxyStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> MythProxyStorage Constructor
        /// </summary>
        public MythProxyStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("MythProxy", "Proxies"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>), typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.pallet_myth_proxy.ProxyDefinition)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("MythProxy", "SponsorAgents"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20), typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("MythProxy", "SponsorshipApprovals"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>), typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("MythProxy", "ApprovalsByAgent"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>>), typeof(Substrate.NetApi.Model.Types.Base.BaseTuple)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("MythProxy", "InvalidatedAgents"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20), typeof(Substrate.NetApi.Model.Types.Base.BaseTuple)));
        }
        
        /// <summary>
        /// >> ProxiesParams
        /// </summary>
        public static string ProxiesParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20> key)
        {
            return RequestGenerator.GetStorage("MythProxy", "Proxies", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> ProxiesDefault
        /// Default value as hex string
        /// </summary>
        public static string ProxiesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Proxies
        /// </summary>
        public async Task<Substrate.Mythos.NET.NetApiExt.Generated.Model.pallet_myth_proxy.ProxyDefinition> Proxies(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20> key, string blockhash, CancellationToken token)
        {
            string parameters = MythProxyStorage.ProxiesParams(key);
            var result = await _client.GetStorageAsync<Substrate.Mythos.NET.NetApiExt.Generated.Model.pallet_myth_proxy.ProxyDefinition>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> SponsorAgentsParams
        ///  A mapping from a sponsor agent to the sponsor.
        /// </summary>
        public static string SponsorAgentsParams(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20 key)
        {
            return RequestGenerator.GetStorage("MythProxy", "SponsorAgents", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> SponsorAgentsDefault
        /// Default value as hex string
        /// </summary>
        public static string SponsorAgentsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> SponsorAgents
        ///  A mapping from a sponsor agent to the sponsor.
        /// </summary>
        public async Task<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20> SponsorAgents(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20 key, string blockhash, CancellationToken token)
        {
            string parameters = MythProxyStorage.SponsorAgentsParams(key);
            var result = await _client.GetStorageAsync<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> SponsorshipApprovalsParams
        ///  A mapping from a delegator and a sponsor to the sponsor agent.
        /// </summary>
        public static string SponsorshipApprovalsParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20> key)
        {
            return RequestGenerator.GetStorage("MythProxy", "SponsorshipApprovals", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> SponsorshipApprovalsDefault
        /// Default value as hex string
        /// </summary>
        public static string SponsorshipApprovalsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> SponsorshipApprovals
        ///  A mapping from a delegator and a sponsor to the sponsor agent.
        /// </summary>
        public async Task<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20> SponsorshipApprovals(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20> key, string blockhash, CancellationToken token)
        {
            string parameters = MythProxyStorage.SponsorshipApprovalsParams(key);
            var result = await _client.GetStorageAsync<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> ApprovalsByAgentParams
        ///  A mapping from a sponsor agent to the approval.
        ///  This is used to clean up approvals after removing the agent.
        /// </summary>
        public static string ApprovalsByAgentParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>> key)
        {
            return RequestGenerator.GetStorage("MythProxy", "ApprovalsByAgent", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> ApprovalsByAgentDefault
        /// Default value as hex string
        /// </summary>
        public static string ApprovalsByAgentDefault()
        {
            return "0x";
        }
        
        /// <summary>
        /// >> ApprovalsByAgent
        ///  A mapping from a sponsor agent to the approval.
        ///  This is used to clean up approvals after removing the agent.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseTuple> ApprovalsByAgent(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>> key, string blockhash, CancellationToken token)
        {
            string parameters = MythProxyStorage.ApprovalsByAgentParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseTuple>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> InvalidatedAgentsParams
        ///  Storage of agents that have been invalidated.
        ///  This is used to clean up approvals that are no longer valid.
        /// </summary>
        public static string InvalidatedAgentsParams(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20 key)
        {
            return RequestGenerator.GetStorage("MythProxy", "InvalidatedAgents", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> InvalidatedAgentsDefault
        /// Default value as hex string
        /// </summary>
        public static string InvalidatedAgentsDefault()
        {
            return "0x";
        }
        
        /// <summary>
        /// >> InvalidatedAgents
        ///  Storage of agents that have been invalidated.
        ///  This is used to clean up approvals that are no longer valid.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseTuple> InvalidatedAgents(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20 key, string blockhash, CancellationToken token)
        {
            string parameters = MythProxyStorage.InvalidatedAgentsParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseTuple>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> MythProxyCalls
    /// </summary>
    public sealed class MythProxyCalls
    {
        
        /// <summary>
        /// >> add_proxy
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method AddProxy(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20 @delegate, Substrate.Mythos.NET.NetApiExt.Generated.Model.mainnet_runtime.EnumProxyType proxy_type, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20> sponsor)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(@delegate.Encode());
            byteArray.AddRange(proxy_type.Encode());
            byteArray.AddRange(sponsor.Encode());
            return new Method(51, "MythProxy", 0, "add_proxy", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> proxy
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Proxy(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20 address, Substrate.Mythos.NET.NetApiExt.Generated.Model.mainnet_runtime.EnumRuntimeCall call)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(address.Encode());
            byteArray.AddRange(call.Encode());
            return new Method(51, "MythProxy", 1, "proxy", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> remove_proxy
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RemoveProxy(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20 @delegate)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(@delegate.Encode());
            return new Method(51, "MythProxy", 2, "remove_proxy", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> approve_proxy_funding
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ApproveProxyFunding(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20 sponsor, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20 delegator)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(sponsor.Encode());
            byteArray.AddRange(delegator.Encode());
            return new Method(51, "MythProxy", 3, "approve_proxy_funding", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> register_sponsor_agent
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RegisterSponsorAgent(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20 sponsor_agent)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(sponsor_agent.Encode());
            return new Method(51, "MythProxy", 4, "register_sponsor_agent", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> revoke_sponsor_agent
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RevokeSponsorAgent(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20 sponsor_agent)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(sponsor_agent.Encode());
            return new Method(51, "MythProxy", 5, "revoke_sponsor_agent", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> remove_sponsored_proxy
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RemoveSponsoredProxy(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20 delegator, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20 @delegate)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(delegator.Encode());
            byteArray.AddRange(@delegate.Encode());
            return new Method(51, "MythProxy", 6, "remove_sponsored_proxy", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> MythProxyConstants
    /// </summary>
    public sealed class MythProxyConstants
    {
    }
    
    /// <summary>
    /// >> MythProxyErrors
    /// </summary>
    public enum MythProxyErrors
    {
        
        /// <summary>
        /// >> Unauthorized
        /// The caller does not have the necessary permissions.
        /// </summary>
        Unauthorized,
        
        /// <summary>
        /// >> NoSuchProxy
        /// The specified proxy does not exist.
        /// </summary>
        NoSuchProxy,
        
        /// <summary>
        /// >> SponsorshipUnauthorized
        /// The delegator is not authorized to use the sponsor's funds.
        /// </summary>
        SponsorshipUnauthorized,
        
        /// <summary>
        /// >> SponsorAgentUnauthorized
        /// The sponsor agent is not authorized to use the sponsor's funds.
        /// </summary>
        SponsorAgentUnauthorized,
        
        /// <summary>
        /// >> NotProxy
        /// The delegate doesn't have proxy permission from the delegator.
        /// </summary>
        NotProxy,
        
        /// <summary>
        /// >> SponsorAgentAlreadyRegistered
        /// The sponsor agent is already registered.
        /// </summary>
        SponsorAgentAlreadyRegistered,
    }
}
