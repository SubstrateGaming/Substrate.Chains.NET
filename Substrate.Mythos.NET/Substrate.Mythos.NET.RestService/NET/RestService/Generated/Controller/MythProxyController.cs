//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.Mythos.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Mythos.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// MythProxyController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class MythProxyController : ControllerBase
    {
        
        private IMythProxyStorage _mythProxyStorage;
        
        /// <summary>
        /// MythProxyController constructor.
        /// </summary>
        public MythProxyController(IMythProxyStorage mythProxyStorage)
        {
            _mythProxyStorage = mythProxyStorage;
        }
        
        /// <summary>
        /// >> Proxies
        /// </summary>
        [HttpGet("Proxies")]
        [ProducesResponseType(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.pallet_myth_proxy.ProxyDefinition), 200)]
        [StorageKeyBuilder(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Storage.MythProxyStorage), "ProxiesParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>))]
        public IActionResult GetProxies(string key)
        {
            return this.Ok(_mythProxyStorage.GetProxies(key));
        }
        
        /// <summary>
        /// >> SponsorAgents
        ///  A mapping from a sponsor agent to the sponsor.
        /// </summary>
        [HttpGet("SponsorAgents")]
        [ProducesResponseType(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20), 200)]
        [StorageKeyBuilder(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Storage.MythProxyStorage), "SponsorAgentsParams", typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20))]
        public IActionResult GetSponsorAgents(string key)
        {
            return this.Ok(_mythProxyStorage.GetSponsorAgents(key));
        }
        
        /// <summary>
        /// >> SponsorshipApprovals
        ///  A mapping from a delegator and a sponsor to the sponsor agent.
        /// </summary>
        [HttpGet("SponsorshipApprovals")]
        [ProducesResponseType(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20), 200)]
        [StorageKeyBuilder(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Storage.MythProxyStorage), "SponsorshipApprovalsParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>))]
        public IActionResult GetSponsorshipApprovals(string key)
        {
            return this.Ok(_mythProxyStorage.GetSponsorshipApprovals(key));
        }
        
        /// <summary>
        /// >> ApprovalsByAgent
        ///  A mapping from a sponsor agent to the approval.
        ///  This is used to clean up approvals after removing the agent.
        /// </summary>
        [HttpGet("ApprovalsByAgent")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseTuple), 200)]
        [StorageKeyBuilder(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Storage.MythProxyStorage), "ApprovalsByAgentParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20, Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20>>))]
        public IActionResult GetApprovalsByAgent(string key)
        {
            return this.Ok(_mythProxyStorage.GetApprovalsByAgent(key));
        }
        
        /// <summary>
        /// >> InvalidatedAgents
        ///  Storage of agents that have been invalidated.
        ///  This is used to clean up approvals that are no longer valid.
        /// </summary>
        [HttpGet("InvalidatedAgents")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseTuple), 200)]
        [StorageKeyBuilder(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Storage.MythProxyStorage), "InvalidatedAgentsParams", typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20))]
        public IActionResult GetInvalidatedAgents(string key)
        {
            return this.Ok(_mythProxyStorage.GetInvalidatedAgents(key));
        }
    }
}
