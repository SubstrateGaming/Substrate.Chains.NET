//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.Mythos.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Mythos.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// MarketplaceController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class MarketplaceController : ControllerBase
    {
        
        private IMarketplaceStorage _marketplaceStorage;
        
        /// <summary>
        /// MarketplaceController constructor.
        /// </summary>
        public MarketplaceController(IMarketplaceStorage marketplaceStorage)
        {
            _marketplaceStorage = marketplaceStorage;
        }
        
        /// <summary>
        /// >> Authority
        ///  The current authority account for the pallet.
        /// </summary>
        [HttpGet("Authority")]
        [ProducesResponseType(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20), 200)]
        [StorageKeyBuilder(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Storage.MarketplaceStorage), "AuthorityParams")]
        public IActionResult GetAuthority()
        {
            return this.Ok(_marketplaceStorage.GetAuthority());
        }
        
        /// <summary>
        /// >> FeeSigner
        ///  The account responsible for signing fee-related operations.
        /// 
        ///  This account is expected to provide valid signatures for operations
        ///  requiring authentication related to transaction fees.
        /// </summary>
        [HttpGet("FeeSigner")]
        [ProducesResponseType(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20), 200)]
        [StorageKeyBuilder(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Storage.MarketplaceStorage), "FeeSignerParams")]
        public IActionResult GetFeeSigner()
        {
            return this.Ok(_marketplaceStorage.GetFeeSigner());
        }
        
        /// <summary>
        /// >> Nonces
        ///  A mapping that stores the state of nonces used for preventing replay attacks.
        /// </summary>
        [HttpGet("Nonces")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.Bool), 200)]
        [StorageKeyBuilder(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Storage.MarketplaceStorage), "NoncesParams", typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT22))]
        public IActionResult GetNonces(string key)
        {
            return this.Ok(_marketplaceStorage.GetNonces(key));
        }
        
        /// <summary>
        /// >> PayoutAddress
        ///  The account where marketplace payouts will be sent.
        /// </summary>
        [HttpGet("PayoutAddress")]
        [ProducesResponseType(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.account.AccountId20), 200)]
        [StorageKeyBuilder(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Storage.MarketplaceStorage), "PayoutAddressParams")]
        public IActionResult GetPayoutAddress()
        {
            return this.Ok(_marketplaceStorage.GetPayoutAddress());
        }
        
        /// <summary>
        /// >> Asks
        ///  A mapping of active Ask orders in the marketplace.
        /// </summary>
        [HttpGet("Asks")]
        [ProducesResponseType(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.pallet_marketplace.types.Ask), 200)]
        [StorageKeyBuilder(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Storage.MarketplaceStorage), "AsksParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.runtime_common.IncrementableU256, Substrate.NetApi.Model.Types.Primitive.U128>))]
        public IActionResult GetAsks(string key)
        {
            return this.Ok(_marketplaceStorage.GetAsks(key));
        }
        
        /// <summary>
        /// >> Bids
        ///  A mapping that stores active Bid orders in the marketplace.
        /// </summary>
        [HttpGet("Bids")]
        [ProducesResponseType(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Model.pallet_marketplace.types.Bid), 200)]
        [StorageKeyBuilder(typeof(Substrate.Mythos.NET.NetApiExt.Generated.Storage.MarketplaceStorage), "BidsParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Mythos.NET.NetApiExt.Generated.Model.runtime_common.IncrementableU256, Substrate.NetApi.Model.Types.Primitive.U128, Substrate.NetApi.Model.Types.Primitive.U128>))]
        public IActionResult GetBids(string key)
        {
            return this.Ok(_marketplaceStorage.GetBids(key));
        }
    }
}
