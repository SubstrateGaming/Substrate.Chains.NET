//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.PolkadotBridgeHub.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.operating_mode;
   using Substrate.PolkadotBridgeHub.NET.RestClient.Generated.Interfaces;
   
   public sealed class EthereumInboundQueueControllerClient : BaseClient, IEthereumInboundQueueControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public EthereumInboundQueueControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<U64> GetNonce(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.ChannelId key)
      {
         return await SendRequestAsync<U64>(_httpClient, "ethereuminboundqueue/nonce", Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.EthereumInboundQueueStorage.NonceParams(key));
      }
      public async Task<bool> SubscribeNonce(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.ChannelId key)
      {
         return await _subscriptionClient.SubscribeAsync("EthereumInboundQueue.Nonce", Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.EthereumInboundQueueStorage.NonceParams(key));
      }
      public async Task<EnumBasicOperatingMode> GetOperatingMode()
      {
         return await SendRequestAsync<EnumBasicOperatingMode>(_httpClient, "ethereuminboundqueue/operatingmode");
      }
      public async Task<bool> SubscribeOperatingMode()
      {
         return await _subscriptionClient.SubscribeAsync("EthereumInboundQueue.OperatingMode");
      }
   }
}
