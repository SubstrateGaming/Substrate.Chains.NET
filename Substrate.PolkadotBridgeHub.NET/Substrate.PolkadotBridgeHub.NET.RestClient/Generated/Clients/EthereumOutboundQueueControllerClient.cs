//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.PolkadotBridgeHub.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_pallet_outbound_queue.types;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.operating_mode;
   using Substrate.PolkadotBridgeHub.NET.RestClient.Generated.Interfaces;
   
   public sealed class EthereumOutboundQueueControllerClient : BaseClient, IEthereumOutboundQueueControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public EthereumOutboundQueueControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<BaseVec<CommittedMessage>> GetMessages()
      {
         return await SendRequestAsync<BaseVec<CommittedMessage>>(_httpClient, "ethereumoutboundqueue/messages");
      }
      public async Task<bool> SubscribeMessages()
      {
         return await _subscriptionClient.SubscribeAsync("EthereumOutboundQueue.Messages");
      }
      public async Task<BaseVec<H256>> GetMessageLeaves()
      {
         return await SendRequestAsync<BaseVec<H256>>(_httpClient, "ethereumoutboundqueue/messageleaves");
      }
      public async Task<bool> SubscribeMessageLeaves()
      {
         return await _subscriptionClient.SubscribeAsync("EthereumOutboundQueue.MessageLeaves");
      }
      public async Task<U64> GetNonce(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.ChannelId key)
      {
         return await SendRequestAsync<U64>(_httpClient, "ethereumoutboundqueue/nonce", Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.EthereumOutboundQueueStorage.NonceParams(key));
      }
      public async Task<bool> SubscribeNonce(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.ChannelId key)
      {
         return await _subscriptionClient.SubscribeAsync("EthereumOutboundQueue.Nonce", Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.EthereumOutboundQueueStorage.NonceParams(key));
      }
      public async Task<EnumBasicOperatingMode> GetOperatingMode()
      {
         return await SendRequestAsync<EnumBasicOperatingMode>(_httpClient, "ethereumoutboundqueue/operatingmode");
      }
      public async Task<bool> SubscribeOperatingMode()
      {
         return await _subscriptionClient.SubscribeAsync("EthereumOutboundQueue.OperatingMode");
      }
   }
}
