//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.PolkadotBridgeHub.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_relayers.registration;
   using Substrate.PolkadotBridgeHub.NET.RestClient.Generated.Interfaces;
   
   public sealed class BridgeRelayersControllerClient : BaseClient, IBridgeRelayersControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public BridgeRelayersControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<U128> GetRelayerRewards(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_relayers.RewardsAccountParams> key)
      {
         return await SendRequestAsync<U128>(_httpClient, "bridgerelayers/relayerrewards", Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeRelayersStorage.RelayerRewardsParams(key));
      }
      public async Task<bool> SubscribeRelayerRewards(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_relayers.RewardsAccountParams> key)
      {
         return await _subscriptionClient.SubscribeAsync("BridgeRelayers.RelayerRewards", Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeRelayersStorage.RelayerRewardsParams(key));
      }
      public async Task<Registration> GetRegisteredRelayers(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await SendRequestAsync<Registration>(_httpClient, "bridgerelayers/registeredrelayers", Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeRelayersStorage.RegisteredRelayersParams(key));
      }
      public async Task<bool> SubscribeRegisteredRelayers(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
      {
         return await _subscriptionClient.SubscribeAsync("BridgeRelayers.RegisteredRelayers", Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeRelayersStorage.RegisteredRelayersParams(key));
      }
   }
}
