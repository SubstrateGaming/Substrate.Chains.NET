//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.PolkadotBridgeHub.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_beacon_primitives.types;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.operating_mode;
   using Substrate.PolkadotBridgeHub.NET.RestClient.Generated.Interfaces;
   
   public sealed class EthereumBeaconClientControllerClient : BaseClient, IEthereumBeaconClientControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public EthereumBeaconClientControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<H256> GetInitialCheckpointRoot()
      {
         return await SendRequestAsync<H256>(_httpClient, "ethereumbeaconclient/initialcheckpointroot");
      }
      public async Task<bool> SubscribeInitialCheckpointRoot()
      {
         return await _subscriptionClient.SubscribeAsync("EthereumBeaconClient.InitialCheckpointRoot");
      }
      public async Task<H256> GetLatestFinalizedBlockRoot()
      {
         return await SendRequestAsync<H256>(_httpClient, "ethereumbeaconclient/latestfinalizedblockroot");
      }
      public async Task<bool> SubscribeLatestFinalizedBlockRoot()
      {
         return await _subscriptionClient.SubscribeAsync("EthereumBeaconClient.LatestFinalizedBlockRoot");
      }
      public async Task<CompactBeaconState> GetFinalizedBeaconState(H256 key)
      {
         return await SendRequestAsync<CompactBeaconState>(_httpClient, "ethereumbeaconclient/finalizedbeaconstate", Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.EthereumBeaconClientStorage.FinalizedBeaconStateParams(key));
      }
      public async Task<bool> SubscribeFinalizedBeaconState(H256 key)
      {
         return await _subscriptionClient.SubscribeAsync("EthereumBeaconClient.FinalizedBeaconState", Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.EthereumBeaconClientStorage.FinalizedBeaconStateParams(key));
      }
      public async Task<U32> GetFinalizedBeaconStateIndex()
      {
         return await SendRequestAsync<U32>(_httpClient, "ethereumbeaconclient/finalizedbeaconstateindex");
      }
      public async Task<bool> SubscribeFinalizedBeaconStateIndex()
      {
         return await _subscriptionClient.SubscribeAsync("EthereumBeaconClient.FinalizedBeaconStateIndex");
      }
      public async Task<H256> GetFinalizedBeaconStateMapping(U32 key)
      {
         return await SendRequestAsync<H256>(_httpClient, "ethereumbeaconclient/finalizedbeaconstatemapping", Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.EthereumBeaconClientStorage.FinalizedBeaconStateMappingParams(key));
      }
      public async Task<bool> SubscribeFinalizedBeaconStateMapping(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("EthereumBeaconClient.FinalizedBeaconStateMapping", Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.EthereumBeaconClientStorage.FinalizedBeaconStateMappingParams(key));
      }
      public async Task<H256> GetValidatorsRoot()
      {
         return await SendRequestAsync<H256>(_httpClient, "ethereumbeaconclient/validatorsroot");
      }
      public async Task<bool> SubscribeValidatorsRoot()
      {
         return await _subscriptionClient.SubscribeAsync("EthereumBeaconClient.ValidatorsRoot");
      }
      public async Task<SyncCommitteePrepared> GetCurrentSyncCommittee()
      {
         return await SendRequestAsync<SyncCommitteePrepared>(_httpClient, "ethereumbeaconclient/currentsynccommittee");
      }
      public async Task<bool> SubscribeCurrentSyncCommittee()
      {
         return await _subscriptionClient.SubscribeAsync("EthereumBeaconClient.CurrentSyncCommittee");
      }
      public async Task<SyncCommitteePrepared> GetNextSyncCommittee()
      {
         return await SendRequestAsync<SyncCommitteePrepared>(_httpClient, "ethereumbeaconclient/nextsynccommittee");
      }
      public async Task<bool> SubscribeNextSyncCommittee()
      {
         return await _subscriptionClient.SubscribeAsync("EthereumBeaconClient.NextSyncCommittee");
      }
      public async Task<EnumBasicOperatingMode> GetOperatingMode()
      {
         return await SendRequestAsync<EnumBasicOperatingMode>(_httpClient, "ethereumbeaconclient/operatingmode");
      }
      public async Task<bool> SubscribeOperatingMode()
      {
         return await _subscriptionClient.SubscribeAsync("EthereumBeaconClient.OperatingMode");
      }
   }
}
