//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.NetApi.Model.Types.Base;
using Substrate.PolkadotBridgeHub.NET.RestService.Generated.Storage;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.PolkadotBridgeHub.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// BridgeKusamaGrandpaController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class BridgeKusamaGrandpaController : ControllerBase
    {
        
        private IBridgeKusamaGrandpaStorage _bridgeKusamaGrandpaStorage;
        
        /// <summary>
        /// BridgeKusamaGrandpaController constructor.
        /// </summary>
        public BridgeKusamaGrandpaController(IBridgeKusamaGrandpaStorage bridgeKusamaGrandpaStorage)
        {
            _bridgeKusamaGrandpaStorage = bridgeKusamaGrandpaStorage;
        }
        
        /// <summary>
        /// >> FreeMandatoryHeadersRemaining
        ///  Number mandatory headers that we may accept in the current block for free (returning
        ///  `Pays::No`).
        /// 
        ///  If the `FreeMandatoryHeadersRemaining` hits zero, all following mandatory headers in the
        ///  current block are accepted with fee (`Pays::Yes` is returned).
        /// 
        ///  The `FreeMandatoryHeadersRemaining` is an ephemeral value that is set to
        ///  `MaxFreeMandatoryHeadersPerBlock` at each block initialization and is killed on block
        ///  finalization. So it never ends up in the storage trie.
        /// </summary>
        [HttpGet("FreeMandatoryHeadersRemaining")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage), "FreeMandatoryHeadersRemainingParams")]
        public IActionResult GetFreeMandatoryHeadersRemaining()
        {
            return this.Ok(_bridgeKusamaGrandpaStorage.GetFreeMandatoryHeadersRemaining());
        }
        
        /// <summary>
        /// >> InitialHash
        ///  Hash of the header used to bootstrap the pallet.
        /// </summary>
        [HttpGet("InitialHash")]
        [ProducesResponseType(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage), "InitialHashParams")]
        public IActionResult GetInitialHash()
        {
            return this.Ok(_bridgeKusamaGrandpaStorage.GetInitialHash());
        }
        
        /// <summary>
        /// >> BestFinalized
        ///  Hash of the best finalized header.
        /// </summary>
        [HttpGet("BestFinalized")]
        [ProducesResponseType(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_runtime.HeaderId), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage), "BestFinalizedParams")]
        public IActionResult GetBestFinalized()
        {
            return this.Ok(_bridgeKusamaGrandpaStorage.GetBestFinalized());
        }
        
        /// <summary>
        /// >> ImportedHashes
        ///  A ring buffer of imported hashes. Ordered by the insertion time.
        /// </summary>
        [HttpGet("ImportedHashes")]
        [ProducesResponseType(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage), "ImportedHashesParams", typeof(Substrate.NetApi.Model.Types.Primitive.U32))]
        public IActionResult GetImportedHashes(string key)
        {
            return this.Ok(_bridgeKusamaGrandpaStorage.GetImportedHashes(key));
        }
        
        /// <summary>
        /// >> ImportedHashesPointer
        ///  Current ring buffer position.
        /// </summary>
        [HttpGet("ImportedHashesPointer")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage), "ImportedHashesPointerParams")]
        public IActionResult GetImportedHashesPointer()
        {
            return this.Ok(_bridgeKusamaGrandpaStorage.GetImportedHashesPointer());
        }
        
        /// <summary>
        /// >> ImportedHeaders
        ///  Relevant fields of imported headers.
        /// </summary>
        [HttpGet("ImportedHeaders")]
        [ProducesResponseType(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_header_chain.StoredHeaderData), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage), "ImportedHeadersParams", typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256))]
        public IActionResult GetImportedHeaders(string key)
        {
            return this.Ok(_bridgeKusamaGrandpaStorage.GetImportedHeaders(key));
        }
        
        /// <summary>
        /// >> CurrentAuthoritySet
        ///  The current GRANDPA Authority set.
        /// </summary>
        [HttpGet("CurrentAuthoritySet")]
        [ProducesResponseType(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.pallet_bridge_grandpa.storage_types.StoredAuthoritySet), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage), "CurrentAuthoritySetParams")]
        public IActionResult GetCurrentAuthoritySet()
        {
            return this.Ok(_bridgeKusamaGrandpaStorage.GetCurrentAuthoritySet());
        }
        
        /// <summary>
        /// >> PalletOwner
        ///  Optional pallet owner.
        /// 
        ///  Pallet owner has a right to halt all pallet operations and then resume it. If it is
        ///  `None`, then there are no direct ways to halt/resume pallet operations, but other
        ///  runtime methods may still be used to do that (i.e. democracy::referendum to update halt
        ///  flag directly or call the `halt_operations`).
        /// </summary>
        [HttpGet("PalletOwner")]
        [ProducesResponseType(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage), "PalletOwnerParams")]
        public IActionResult GetPalletOwner()
        {
            return this.Ok(_bridgeKusamaGrandpaStorage.GetPalletOwner());
        }
        
        /// <summary>
        /// >> PalletOperatingMode
        ///  The current operating mode of the pallet.
        /// 
        ///  Depending on the mode either all, or no transactions will be allowed.
        /// </summary>
        [HttpGet("PalletOperatingMode")]
        [ProducesResponseType(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_runtime.EnumBasicOperatingMode), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage), "PalletOperatingModeParams")]
        public IActionResult GetPalletOperatingMode()
        {
            return this.Ok(_bridgeKusamaGrandpaStorage.GetPalletOperatingMode());
        }
    }
}
