//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.NetApi.Model.Types.Base;
using Substrate.PolkadotBridgeHub.NET.RestService.Generated.Storage;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.PolkadotBridgeHub.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// BridgeKusamaParachainsController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class BridgeKusamaParachainsController : ControllerBase
    {
        
        private IBridgeKusamaParachainsStorage _bridgeKusamaParachainsStorage;
        
        /// <summary>
        /// BridgeKusamaParachainsController constructor.
        /// </summary>
        public BridgeKusamaParachainsController(IBridgeKusamaParachainsStorage bridgeKusamaParachainsStorage)
        {
            _bridgeKusamaParachainsStorage = bridgeKusamaParachainsStorage;
        }
        
        /// <summary>
        /// >> PalletOwner
        ///  Optional pallet owner.
        /// 
        ///  Pallet owner has a right to halt all pallet operations and then resume them. If it is
        ///  `None`, then there are no direct ways to halt/resume pallet operations, but other
        ///  runtime methods may still be used to do that (i.e. democracy::referendum to update halt
        ///  flag directly or call the `set_operating_mode`).
        /// </summary>
        [HttpGet("PalletOwner")]
        [ProducesResponseType(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaParachainsStorage), "PalletOwnerParams")]
        public IActionResult GetPalletOwner()
        {
            return this.Ok(_bridgeKusamaParachainsStorage.GetPalletOwner());
        }
        
        /// <summary>
        /// >> PalletOperatingMode
        ///  The current operating mode of the pallet.
        /// 
        ///  Depending on the mode either all, or no transactions will be allowed.
        /// </summary>
        [HttpGet("PalletOperatingMode")]
        [ProducesResponseType(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_runtime.EnumBasicOperatingMode), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaParachainsStorage), "PalletOperatingModeParams")]
        public IActionResult GetPalletOperatingMode()
        {
            return this.Ok(_bridgeKusamaParachainsStorage.GetPalletOperatingMode());
        }
        
        /// <summary>
        /// >> ParasInfo
        ///  Parachains info.
        /// 
        ///  Contains the following info:
        ///  - best parachain head hash
        ///  - the head of the `ImportedParaHashes` ring buffer
        /// </summary>
        [HttpGet("ParasInfo")]
        [ProducesResponseType(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaInfo), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaParachainsStorage), "ParasInfoParams", typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_polkadot_core.parachains.ParaId))]
        public IActionResult GetParasInfo(string key)
        {
            return this.Ok(_bridgeKusamaParachainsStorage.GetParasInfo(key));
        }
        
        /// <summary>
        /// >> ImportedParaHeads
        ///  State roots of parachain heads which have been imported into the pallet.
        /// </summary>
        [HttpGet("ImportedParaHeads")]
        [ProducesResponseType(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaStoredHeaderData), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaParachainsStorage), "ImportedParaHeadsParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_polkadot_core.parachains.ParaId, Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256>))]
        public IActionResult GetImportedParaHeads(string key)
        {
            return this.Ok(_bridgeKusamaParachainsStorage.GetImportedParaHeads(key));
        }
        
        /// <summary>
        /// >> ImportedParaHashes
        ///  A ring buffer of imported parachain head hashes. Ordered by the insertion time.
        /// </summary>
        [HttpGet("ImportedParaHashes")]
        [ProducesResponseType(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256), 200)]
        [StorageKeyBuilder(typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaParachainsStorage), "ImportedParaHashesParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_polkadot_core.parachains.ParaId, Substrate.NetApi.Model.Types.Primitive.U32>))]
        public IActionResult GetImportedParaHashes(string key)
        {
            return this.Ok(_bridgeKusamaParachainsStorage.GetImportedParaHashes(key));
        }
    }
}
