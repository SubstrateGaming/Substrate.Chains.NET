//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.PolkadotBridgeHub.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IBridgeKusamaParachainsStorage interface definition.
    /// </summary>
    public interface IBridgeKusamaParachainsStorage : IStorage
    {
        
        /// <summary>
        /// >> PalletOwner
        ///  Optional pallet owner.
        /// 
        ///  Pallet owner has a right to halt all pallet operations and then resume them. If it is
        ///  `None`, then there are no direct ways to halt/resume pallet operations, but other
        ///  runtime methods may still be used to do that (i.e. democracy::referendum to update halt
        ///  flag directly or call the `set_operating_mode`).
        /// </summary>
        Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetPalletOwner();
        
        /// <summary>
        /// >> PalletOperatingMode
        ///  The current operating mode of the pallet.
        /// 
        ///  Depending on the mode either all, or no transactions will be allowed.
        /// </summary>
        Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_runtime.EnumBasicOperatingMode GetPalletOperatingMode();
        
        /// <summary>
        /// >> ParasInfo
        ///  Parachains info.
        /// 
        ///  Contains the following info:
        ///  - best parachain head hash
        ///  - the head of the `ImportedParaHashes` ring buffer
        /// </summary>
        Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaInfo GetParasInfo(string key);
        
        /// <summary>
        /// >> ImportedParaHeads
        ///  State roots of parachain heads which have been imported into the pallet.
        /// </summary>
        Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaStoredHeaderData GetImportedParaHeads(string key);
        
        /// <summary>
        /// >> ImportedParaHashes
        ///  A ring buffer of imported parachain head hashes. Ordered by the insertion time.
        /// </summary>
        Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256 GetImportedParaHashes(string key);
    }
    
    /// <summary>
    /// BridgeKusamaParachainsStorage class definition.
    /// </summary>
    public sealed class BridgeKusamaParachainsStorage : IBridgeKusamaParachainsStorage
    {
        
        /// <summary>
        /// _palletOwnerTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> _palletOwnerTypedStorage;
        
        /// <summary>
        /// _palletOperatingModeTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_runtime.EnumBasicOperatingMode> _palletOperatingModeTypedStorage;
        
        /// <summary>
        /// _parasInfoTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaInfo> _parasInfoTypedStorage;
        
        /// <summary>
        /// _importedParaHeadsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaStoredHeaderData> _importedParaHeadsTypedStorage;
        
        /// <summary>
        /// _importedParaHashesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256> _importedParaHashesTypedStorage;
        
        /// <summary>
        /// BridgeKusamaParachainsStorage constructor.
        /// </summary>
        public BridgeKusamaParachainsStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.PalletOwnerTypedStorage = new TypedStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>("BridgeKusamaParachains.PalletOwner", storageDataProvider, storageChangeDelegates);
            this.PalletOperatingModeTypedStorage = new TypedStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_runtime.EnumBasicOperatingMode>("BridgeKusamaParachains.PalletOperatingMode", storageDataProvider, storageChangeDelegates);
            this.ParasInfoTypedStorage = new TypedMapStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaInfo>("BridgeKusamaParachains.ParasInfo", storageDataProvider, storageChangeDelegates);
            this.ImportedParaHeadsTypedStorage = new TypedMapStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaStoredHeaderData>("BridgeKusamaParachains.ImportedParaHeads", storageDataProvider, storageChangeDelegates);
            this.ImportedParaHashesTypedStorage = new TypedMapStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256>("BridgeKusamaParachains.ImportedParaHashes", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _palletOwnerTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> PalletOwnerTypedStorage
        {
            get
            {
                return _palletOwnerTypedStorage;
            }
            set
            {
                _palletOwnerTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _palletOperatingModeTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_runtime.EnumBasicOperatingMode> PalletOperatingModeTypedStorage
        {
            get
            {
                return _palletOperatingModeTypedStorage;
            }
            set
            {
                _palletOperatingModeTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _parasInfoTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaInfo> ParasInfoTypedStorage
        {
            get
            {
                return _parasInfoTypedStorage;
            }
            set
            {
                _parasInfoTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _importedParaHeadsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaStoredHeaderData> ImportedParaHeadsTypedStorage
        {
            get
            {
                return _importedParaHeadsTypedStorage;
            }
            set
            {
                _importedParaHeadsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _importedParaHashesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256> ImportedParaHashesTypedStorage
        {
            get
            {
                return _importedParaHashesTypedStorage;
            }
            set
            {
                _importedParaHashesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await PalletOwnerTypedStorage.InitializeAsync("BridgeKusamaParachains", "PalletOwner");
            await PalletOperatingModeTypedStorage.InitializeAsync("BridgeKusamaParachains", "PalletOperatingMode");
            await ParasInfoTypedStorage.InitializeAsync("BridgeKusamaParachains", "ParasInfo");
            await ImportedParaHeadsTypedStorage.InitializeAsync("BridgeKusamaParachains", "ImportedParaHeads");
            await ImportedParaHashesTypedStorage.InitializeAsync("BridgeKusamaParachains", "ImportedParaHashes");
        }
        
        /// <summary>
        /// Implements any storage change for BridgeKusamaParachains.PalletOwner
        /// </summary>
        [StorageChange("BridgeKusamaParachains", "PalletOwner")]
        public void OnUpdatePalletOwner(string data)
        {
            PalletOwnerTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> PalletOwner
        ///  Optional pallet owner.
        /// 
        ///  Pallet owner has a right to halt all pallet operations and then resume them. If it is
        ///  `None`, then there are no direct ways to halt/resume pallet operations, but other
        ///  runtime methods may still be used to do that (i.e. democracy::referendum to update halt
        ///  flag directly or call the `set_operating_mode`).
        /// </summary>
        public Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 GetPalletOwner()
        {
            return PalletOwnerTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for BridgeKusamaParachains.PalletOperatingMode
        /// </summary>
        [StorageChange("BridgeKusamaParachains", "PalletOperatingMode")]
        public void OnUpdatePalletOperatingMode(string data)
        {
            PalletOperatingModeTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> PalletOperatingMode
        ///  The current operating mode of the pallet.
        /// 
        ///  Depending on the mode either all, or no transactions will be allowed.
        /// </summary>
        public Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_runtime.EnumBasicOperatingMode GetPalletOperatingMode()
        {
            return PalletOperatingModeTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for BridgeKusamaParachains.ParasInfo
        /// </summary>
        [StorageChange("BridgeKusamaParachains", "ParasInfo")]
        public void OnUpdateParasInfo(string key, string data)
        {
            ParasInfoTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ParasInfo
        ///  Parachains info.
        /// 
        ///  Contains the following info:
        ///  - best parachain head hash
        ///  - the head of the `ImportedParaHashes` ring buffer
        /// </summary>
        public Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaInfo GetParasInfo(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ParasInfoTypedStorage.Dictionary.TryGetValue(key, out Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaInfo result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for BridgeKusamaParachains.ImportedParaHeads
        /// </summary>
        [StorageChange("BridgeKusamaParachains", "ImportedParaHeads")]
        public void OnUpdateImportedParaHeads(string key, string data)
        {
            ImportedParaHeadsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ImportedParaHeads
        ///  State roots of parachain heads which have been imported into the pallet.
        /// </summary>
        public Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaStoredHeaderData GetImportedParaHeads(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ImportedParaHeadsTypedStorage.Dictionary.TryGetValue(key, out Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains.ParaStoredHeaderData result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for BridgeKusamaParachains.ImportedParaHashes
        /// </summary>
        [StorageChange("BridgeKusamaParachains", "ImportedParaHashes")]
        public void OnUpdateImportedParaHashes(string key, string data)
        {
            ImportedParaHashesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ImportedParaHashes
        ///  A ring buffer of imported parachain head hashes. Ordered by the insertion time.
        /// </summary>
        public Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256 GetImportedParaHashes(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ImportedParaHashesTypedStorage.Dictionary.TryGetValue(key, out Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
