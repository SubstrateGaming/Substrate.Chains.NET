//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage
{
    
    
    /// <summary>
    /// >> EthereumSystemStorage
    /// </summary>
    public sealed class EthereumSystemStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> EthereumSystemStorage Constructor
        /// </summary>
        public EthereumSystemStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumSystem", "Agents"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256), typeof(Substrate.NetApi.Model.Types.Base.BaseTuple)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumSystem", "Channels"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.ChannelId), typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.Channel)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("EthereumSystem", "PricingParameters"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.pricing.PricingParameters)));
        }
        
        /// <summary>
        /// >> AgentsParams
        ///  The set of registered agents
        /// </summary>
        public static string AgentsParams(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256 key)
        {
            return RequestGenerator.GetStorage("EthereumSystem", "Agents", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> AgentsDefault
        /// Default value as hex string
        /// </summary>
        public static string AgentsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Agents
        ///  The set of registered agents
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Base.BaseTuple> Agents(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256 key, string blockhash, CancellationToken token)
        {
            string parameters = EthereumSystemStorage.AgentsParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Base.BaseTuple>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> ChannelsParams
        ///  The set of registered channels
        /// </summary>
        public static string ChannelsParams(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.ChannelId key)
        {
            return RequestGenerator.GetStorage("EthereumSystem", "Channels", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> ChannelsDefault
        /// Default value as hex string
        /// </summary>
        public static string ChannelsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Channels
        ///  The set of registered channels
        /// </summary>
        public async Task<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.Channel> Channels(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.ChannelId key, string blockhash, CancellationToken token)
        {
            string parameters = EthereumSystemStorage.ChannelsParams(key);
            var result = await _client.GetStorageAsync<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.Channel>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> PricingParametersParams
        /// </summary>
        public static string PricingParametersParams()
        {
            return RequestGenerator.GetStorage("EthereumSystem", "PricingParameters", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> PricingParametersDefault
        /// Default value as hex string
        /// </summary>
        public static string PricingParametersDefault()
        {
            return "0x000064A7B3B6E00D000000000000000001000000000000000000000000000000010000000000000" +
                "00000000000000000000000000000000000000000000000000100000000000000000000000000000" +
                "000000000000000000000000000000000000064A7B3B6E00D0000000000000000";
        }
        
        /// <summary>
        /// >> PricingParameters
        /// </summary>
        public async Task<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.pricing.PricingParameters> PricingParameters(string blockhash, CancellationToken token)
        {
            string parameters = EthereumSystemStorage.PricingParametersParams();
            var result = await _client.GetStorageAsync<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.pricing.PricingParameters>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> EthereumSystemCalls
    /// </summary>
    public sealed class EthereumSystemCalls
    {
        
        /// <summary>
        /// >> upgrade
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Upgrade(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H160 impl_address, Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256 impl_code_hash, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.outbound.v1.Initializer> initializer)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(impl_address.Encode());
            byteArray.AddRange(impl_code_hash.Encode());
            byteArray.AddRange(initializer.Encode());
            return new Method(83, "EthereumSystem", 0, "upgrade", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_operating_mode
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SetOperatingMode(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.outbound.v1.EnumOperatingMode mode)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(mode.Encode());
            return new Method(83, "EthereumSystem", 1, "set_operating_mode", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_pricing_parameters
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SetPricingParameters(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.pricing.PricingParameters @params)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(@params.Encode());
            return new Method(83, "EthereumSystem", 2, "set_pricing_parameters", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> create_agent
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method CreateAgent()
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            return new Method(83, "EthereumSystem", 3, "create_agent", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> create_channel
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method CreateChannel(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.outbound.v1.EnumOperatingMode mode)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(mode.Encode());
            return new Method(83, "EthereumSystem", 4, "create_channel", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> update_channel
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method UpdateChannel(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.outbound.v1.EnumOperatingMode mode)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(mode.Encode());
            return new Method(83, "EthereumSystem", 5, "update_channel", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> force_update_channel
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ForceUpdateChannel(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.ChannelId channel_id, Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.outbound.v1.EnumOperatingMode mode)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(channel_id.Encode());
            byteArray.AddRange(mode.Encode());
            return new Method(83, "EthereumSystem", 6, "force_update_channel", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> transfer_native_from_agent
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method TransferNativeFromAgent(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H160 recipient, Substrate.NetApi.Model.Types.Primitive.U128 amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(recipient.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(83, "EthereumSystem", 7, "transfer_native_from_agent", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> force_transfer_native_from_agent
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method ForceTransferNativeFromAgent(Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.xcm.EnumVersionedLocation location, Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H160 recipient, Substrate.NetApi.Model.Types.Primitive.U128 amount)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(location.Encode());
            byteArray.AddRange(recipient.Encode());
            byteArray.AddRange(amount.Encode());
            return new Method(83, "EthereumSystem", 8, "force_transfer_native_from_agent", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_token_transfer_fees
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SetTokenTransferFees(Substrate.NetApi.Model.Types.Primitive.U128 create_asset_xcm, Substrate.NetApi.Model.Types.Primitive.U128 transfer_asset_xcm, Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.U256 register_token)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(create_asset_xcm.Encode());
            byteArray.AddRange(transfer_asset_xcm.Encode());
            byteArray.AddRange(register_token.Encode());
            return new Method(83, "EthereumSystem", 9, "set_token_transfer_fees", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> EthereumSystemConstants
    /// </summary>
    public sealed class EthereumSystemConstants
    {
        
        /// <summary>
        /// >> TreasuryAccount
        ///  TreasuryAccount to collect fees
        /// </summary>
        public Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 TreasuryAccount()
        {
            var result = new Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32();
            result.Create("0xAF3E7DA28608E13E4399CC7D14A57BDB154DDE5F3D546F5F293994EF36EF7F11");
            return result;
        }
        
        /// <summary>
        /// >> InboundDeliveryCost
        ///  Cost of delivering a message from Ethereum
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 InboundDeliveryCost()
        {
            var result = new Substrate.NetApi.Model.Types.Primitive.U128();
            result.Create("0x90C8B014000000000000000000000000");
            return result;
        }
    }
    
    /// <summary>
    /// >> EthereumSystemErrors
    /// </summary>
    public enum EthereumSystemErrors
    {
        
        /// <summary>
        /// >> LocationConversionFailed
        /// </summary>
        LocationConversionFailed,
        
        /// <summary>
        /// >> AgentAlreadyCreated
        /// </summary>
        AgentAlreadyCreated,
        
        /// <summary>
        /// >> NoAgent
        /// </summary>
        NoAgent,
        
        /// <summary>
        /// >> ChannelAlreadyCreated
        /// </summary>
        ChannelAlreadyCreated,
        
        /// <summary>
        /// >> NoChannel
        /// </summary>
        NoChannel,
        
        /// <summary>
        /// >> UnsupportedLocationVersion
        /// </summary>
        UnsupportedLocationVersion,
        
        /// <summary>
        /// >> InvalidLocation
        /// </summary>
        InvalidLocation,
        
        /// <summary>
        /// >> Send
        /// </summary>
        Send,
        
        /// <summary>
        /// >> InvalidTokenTransferFees
        /// </summary>
        InvalidTokenTransferFees,
        
        /// <summary>
        /// >> InvalidPricingParameters
        /// </summary>
        InvalidPricingParameters,
        
        /// <summary>
        /// >> InvalidUpgradeParameters
        /// </summary>
        InvalidUpgradeParameters,
    }
}
