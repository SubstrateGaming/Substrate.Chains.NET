//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.pricing
{
    
    
    /// <summary>
    /// >> 164 - Composite[snowbridge_core.pricing.PricingParameters]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class PricingParameters : BaseType
    {
        
        /// <summary>
        /// >> exchange_rate
        /// </summary>
        public Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_arithmetic.fixed_point.FixedU128 ExchangeRate { get; set; }
        /// <summary>
        /// >> rewards
        /// </summary>
        public Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.pricing.Rewards Rewards { get; set; }
        /// <summary>
        /// >> fee_per_gas
        /// </summary>
        public Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.U256 FeePerGas { get; set; }
        /// <summary>
        /// >> multiplier
        /// </summary>
        public Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_arithmetic.fixed_point.FixedU128 Multiplier { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "PricingParameters";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(ExchangeRate.Encode());
            result.AddRange(Rewards.Encode());
            result.AddRange(FeePerGas.Encode());
            result.AddRange(Multiplier.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            ExchangeRate = new Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_arithmetic.fixed_point.FixedU128();
            ExchangeRate.Decode(byteArray, ref p);
            Rewards = new Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.pricing.Rewards();
            Rewards.Decode(byteArray, ref p);
            FeePerGas = new Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.U256();
            FeePerGas.Decode(byteArray, ref p);
            Multiplier = new Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_arithmetic.fixed_point.FixedU128();
            Multiplier.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
