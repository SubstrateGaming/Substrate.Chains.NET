//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;


namespace Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_pallet_system.pallet
{
    
    
    /// <summary>
    /// >> Call
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public enum Call
    {
        
        /// <summary>
        /// >> upgrade
        /// Sends command to the Gateway contract to upgrade itself with a new implementation
        /// contract
        /// 
        /// Fee required: No
        /// 
        /// - `origin`: Must be `Root`.
        /// - `impl_address`: The address of the implementation contract.
        /// - `impl_code_hash`: The codehash of the implementation contract.
        /// - `initializer`: Optionally call an initializer on the implementation contract.
        /// </summary>
        upgrade = 0,
        
        /// <summary>
        /// >> set_operating_mode
        /// Sends a message to the Gateway contract to change its operating mode
        /// 
        /// Fee required: No
        /// 
        /// - `origin`: Must be `Location`
        /// </summary>
        set_operating_mode = 1,
        
        /// <summary>
        /// >> set_pricing_parameters
        /// Set pricing parameters on both sides of the bridge
        /// 
        /// Fee required: No
        /// 
        /// - `origin`: Must be root
        /// </summary>
        set_pricing_parameters = 2,
        
        /// <summary>
        /// >> create_agent
        /// Sends a command to the Gateway contract to instantiate a new agent contract representing
        /// `origin`.
        /// 
        /// Fee required: Yes
        /// 
        /// - `origin`: Must be `Location` of a sibling parachain
        /// </summary>
        create_agent = 3,
        
        /// <summary>
        /// >> create_channel
        /// Sends a message to the Gateway contract to create a new channel representing `origin`
        /// 
        /// Fee required: Yes
        /// 
        /// This extrinsic is permissionless, so a fee is charged to prevent spamming and pay
        /// for execution costs on the remote side.
        /// 
        /// The message is sent over the bridge on BridgeHub's own channel to the Gateway.
        /// 
        /// - `origin`: Must be `Location`
        /// - `mode`: Initial operating mode of the channel
        /// </summary>
        create_channel = 4,
        
        /// <summary>
        /// >> update_channel
        /// Sends a message to the Gateway contract to update a channel configuration
        /// 
        /// The origin must already have a channel initialized, as this message is sent over it.
        /// 
        /// A partial fee will be charged for local processing only.
        /// 
        /// - `origin`: Must be `Location`
        /// - `mode`: Initial operating mode of the channel
        /// </summary>
        update_channel = 5,
        
        /// <summary>
        /// >> force_update_channel
        /// Sends a message to the Gateway contract to update an arbitrary channel
        /// 
        /// Fee required: No
        /// 
        /// - `origin`: Must be root
        /// - `channel_id`: ID of channel
        /// - `mode`: Initial operating mode of the channel
        /// - `outbound_fee`: Fee charged to users for sending outbound messages to Polkadot
        /// </summary>
        force_update_channel = 6,
        
        /// <summary>
        /// >> transfer_native_from_agent
        /// Sends a message to the Gateway contract to transfer ether from an agent to `recipient`.
        /// 
        /// A partial fee will be charged for local processing only.
        /// 
        /// - `origin`: Must be `Location`
        /// </summary>
        transfer_native_from_agent = 7,
        
        /// <summary>
        /// >> force_transfer_native_from_agent
        /// Sends a message to the Gateway contract to transfer ether from an agent to `recipient`.
        /// 
        /// Privileged. Can only be called by root.
        /// 
        /// Fee required: No
        /// 
        /// - `origin`: Must be root
        /// - `location`: Location used to resolve the agent
        /// - `recipient`: Recipient of funds
        /// - `amount`: Amount to transfer
        /// </summary>
        force_transfer_native_from_agent = 8,
        
        /// <summary>
        /// >> set_token_transfer_fees
        /// Sends a message to the Gateway contract to update fee related parameters for
        /// token transfers.
        /// 
        /// Privileged. Can only be called by root.
        /// 
        /// Fee required: No
        /// 
        /// - `origin`: Must be root
        /// - `create_asset_xcm`: The XCM execution cost for creating a new asset class on AssetHub,
        ///   in DOT
        /// - `transfer_asset_xcm`: The XCM execution cost for performing a reserve transfer on
        ///   AssetHub, in DOT
        /// - `register_token`: The Ether fee for registering a new token, to discourage spamming
        /// </summary>
        set_token_transfer_fees = 9,
    }
    
    /// <summary>
    /// >> 395 - Variant[snowbridge_pallet_system.pallet.Call]
    /// Contains a variant per dispatchable extrinsic that this pallet has.
    /// </summary>
    public sealed class EnumCall : BaseEnumRust<Call>
    {
        
        /// <summary>
        /// Initializes a new instance of the class.
        /// </summary>
        public EnumCall()
        {
				AddTypeDecoder<BaseTuple<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H160, Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H256, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.outbound.v1.Initializer>>>(Call.upgrade);
				AddTypeDecoder<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.outbound.v1.EnumOperatingMode>(Call.set_operating_mode);
				AddTypeDecoder<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.pricing.PricingParameters>(Call.set_pricing_parameters);
				AddTypeDecoder<BaseVoid>(Call.create_agent);
				AddTypeDecoder<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.outbound.v1.EnumOperatingMode>(Call.create_channel);
				AddTypeDecoder<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.outbound.v1.EnumOperatingMode>(Call.update_channel);
				AddTypeDecoder<BaseTuple<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.ChannelId, Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.snowbridge_core.outbound.v1.EnumOperatingMode>>(Call.force_update_channel);
				AddTypeDecoder<BaseTuple<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H160, Substrate.NetApi.Model.Types.Primitive.U128>>(Call.transfer_native_from_agent);
				AddTypeDecoder<BaseTuple<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.xcm.EnumVersionedLocation, Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.H160, Substrate.NetApi.Model.Types.Primitive.U128>>(Call.force_transfer_native_from_agent);
				AddTypeDecoder<BaseTuple<Substrate.NetApi.Model.Types.Primitive.U128, Substrate.NetApi.Model.Types.Primitive.U128, Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types.U256>>(Call.set_token_transfer_fees);
        }
    }
}
