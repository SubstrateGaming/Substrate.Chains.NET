//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.PolkadotBridgeHub.NET.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_runtime;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_header_chain;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.pallet_bridge_grandpa.storage_types;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto;
   using Substrate.PolkadotBridgeHub.NET.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class BridgeKusamaGrandpaControllerMockupClient : MockupBaseClient, IBridgeKusamaGrandpaControllerMockupClient
   {
      private HttpClient _httpClient;
      public BridgeKusamaGrandpaControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetFreeMandatoryHeadersRemaining(U32 value)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaGrandpa/FreeMandatoryHeadersRemaining", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage.FreeMandatoryHeadersRemainingParams());
      }
      public async Task<bool> SetInitialHash(H256 value)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaGrandpa/InitialHash", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage.InitialHashParams());
      }
      public async Task<bool> SetBestFinalized(HeaderId value)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaGrandpa/BestFinalized", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage.BestFinalizedParams());
      }
      public async Task<bool> SetImportedHashes(H256 value, U32 key)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaGrandpa/ImportedHashes", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage.ImportedHashesParams(key));
      }
      public async Task<bool> SetImportedHashesPointer(U32 value)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaGrandpa/ImportedHashesPointer", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage.ImportedHashesPointerParams());
      }
      public async Task<bool> SetImportedHeaders(StoredHeaderData value, H256 key)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaGrandpa/ImportedHeaders", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage.ImportedHeadersParams(key));
      }
      public async Task<bool> SetCurrentAuthoritySet(StoredAuthoritySet value)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaGrandpa/CurrentAuthoritySet", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage.CurrentAuthoritySetParams());
      }
      public async Task<bool> SetPalletOwner(AccountId32 value)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaGrandpa/PalletOwner", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage.PalletOwnerParams());
      }
      public async Task<bool> SetPalletOperatingMode(EnumBasicOperatingMode value)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaGrandpa/PalletOperatingMode", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaGrandpaStorage.PalletOperatingModeParams());
      }
   }
}
