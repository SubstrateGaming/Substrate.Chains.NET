//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.PolkadotBridgeHub.NET.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.sp_core.crypto;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_runtime;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_parachains;
   using Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.primitive_types;
   using Substrate.PolkadotBridgeHub.NET.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class BridgeKusamaParachainsControllerMockupClient : MockupBaseClient, IBridgeKusamaParachainsControllerMockupClient
   {
      private HttpClient _httpClient;
      public BridgeKusamaParachainsControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetPalletOwner(AccountId32 value)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaParachains/PalletOwner", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaParachainsStorage.PalletOwnerParams());
      }
      public async Task<bool> SetPalletOperatingMode(EnumBasicOperatingMode value)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaParachains/PalletOperatingMode", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaParachainsStorage.PalletOperatingModeParams());
      }
      public async Task<bool> SetParasInfo(ParaInfo value, Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_polkadot_core.parachains.ParaId key)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaParachains/ParasInfo", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaParachainsStorage.ParasInfoParams(key));
      }
      public async Task<bool> SetImportedParaHeads(ParaStoredHeaderData value, Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_polkadot_core.parachains.ParaId, H256> key)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaParachains/ImportedParaHeads", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaParachainsStorage.ImportedParaHeadsParams(key));
      }
      public async Task<bool> SetImportedParaHashes(H256 value, Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Model.bp_polkadot_core.parachains.ParaId, Substrate.NetApi.Model.Types.Primitive.U32> key)
      {
         return await SendMockupRequestAsync(_httpClient, "BridgeKusamaParachains/ImportedParaHashes", value.Encode(), Substrate.PolkadotBridgeHub.NET.NetApiExt.Generated.Storage.BridgeKusamaParachainsStorage.ImportedParaHashesParams(key));
      }
   }
}
