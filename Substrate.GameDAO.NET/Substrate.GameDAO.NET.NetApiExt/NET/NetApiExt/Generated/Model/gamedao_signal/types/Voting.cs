//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_signal.types
{
    
    
    /// <summary>
    /// >> 595 - Composite[gamedao_signal.types.Voting]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class Voting : BaseType
    {
        
        /// <summary>
        /// >> index
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Index { get; set; }
        /// <summary>
        /// >> unit
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_signal.types.EnumUnit Unit { get; set; }
        /// <summary>
        /// >> ayes
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39 Ayes { get; set; }
        /// <summary>
        /// >> nays
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39 Nays { get; set; }
        /// <summary>
        /// >> scale
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_signal.types.EnumScale Scale { get; set; }
        /// <summary>
        /// >> eligible
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 Eligible { get; set; }
        /// <summary>
        /// >> participating
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 Participating { get; set; }
        /// <summary>
        /// >> yes
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 Yes { get; set; }
        /// <summary>
        /// >> no
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 No { get; set; }
        /// <summary>
        /// >> quorum
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.GameDAO.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Permill> Quorum { get; set; }
        /// <summary>
        /// >> majority
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_signal.types.EnumMajority Majority { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "Voting";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Index.Encode());
            result.AddRange(Unit.Encode());
            result.AddRange(Ayes.Encode());
            result.AddRange(Nays.Encode());
            result.AddRange(Scale.Encode());
            result.AddRange(Eligible.Encode());
            result.AddRange(Participating.Encode());
            result.AddRange(Yes.Encode());
            result.AddRange(No.Encode());
            result.AddRange(Quorum.Encode());
            result.AddRange(Majority.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Index = new Substrate.NetApi.Model.Types.Primitive.U32();
            Index.Decode(byteArray, ref p);
            Unit = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_signal.types.EnumUnit();
            Unit.Decode(byteArray, ref p);
            Ayes = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39();
            Ayes.Decode(byteArray, ref p);
            Nays = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT39();
            Nays.Decode(byteArray, ref p);
            Scale = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_signal.types.EnumScale();
            Scale.Decode(byteArray, ref p);
            Eligible = new Substrate.NetApi.Model.Types.Primitive.U128();
            Eligible.Decode(byteArray, ref p);
            Participating = new Substrate.NetApi.Model.Types.Primitive.U128();
            Participating.Decode(byteArray, ref p);
            Yes = new Substrate.NetApi.Model.Types.Primitive.U128();
            Yes.Decode(byteArray, ref p);
            No = new Substrate.NetApi.Model.Types.Primitive.U128();
            No.Decode(byteArray, ref p);
            Quorum = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.GameDAO.NET.NetApiExt.Generated.Model.sp_arithmetic.per_things.Permill>();
            Quorum.Decode(byteArray, ref p);
            Majority = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_signal.types.EnumMajority();
            Majority.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
