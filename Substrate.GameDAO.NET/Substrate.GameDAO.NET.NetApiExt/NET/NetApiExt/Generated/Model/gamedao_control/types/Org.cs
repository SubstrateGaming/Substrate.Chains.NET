//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_control.types
{
    
    
    /// <summary>
    /// >> 585 - Composite[gamedao_control.types.Org]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class Org : BaseType
    {
        
        /// <summary>
        /// >> index
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Index { get; set; }
        /// <summary>
        /// >> creator
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 Creator { get; set; }
        /// <summary>
        /// >> prime
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 Prime { get; set; }
        /// <summary>
        /// >> name
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT1 Name { get; set; }
        /// <summary>
        /// >> cid
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT1 Cid { get; set; }
        /// <summary>
        /// >> org_type
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_control.types.EnumOrgType OrgType { get; set; }
        /// <summary>
        /// >> fee_model
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_control.types.EnumFeeModel FeeModel { get; set; }
        /// <summary>
        /// >> membership_fee
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128> MembershipFee { get; set; }
        /// <summary>
        /// >> gov_currency
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.zero_primitives.currency.EnumCurrencyId GovCurrency { get; set; }
        /// <summary>
        /// >> pay_currency
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.zero_primitives.currency.EnumCurrencyId PayCurrency { get; set; }
        /// <summary>
        /// >> access_model
        /// </summary>
        public Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_control.types.EnumAccessModel AccessModel { get; set; }
        /// <summary>
        /// >> member_limit
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MemberLimit { get; set; }
        /// <summary>
        /// >> created
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Created { get; set; }
        /// <summary>
        /// >> mutated
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 Mutated { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "Org";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Index.Encode());
            result.AddRange(Creator.Encode());
            result.AddRange(Prime.Encode());
            result.AddRange(Name.Encode());
            result.AddRange(Cid.Encode());
            result.AddRange(OrgType.Encode());
            result.AddRange(FeeModel.Encode());
            result.AddRange(MembershipFee.Encode());
            result.AddRange(GovCurrency.Encode());
            result.AddRange(PayCurrency.Encode());
            result.AddRange(AccessModel.Encode());
            result.AddRange(MemberLimit.Encode());
            result.AddRange(Created.Encode());
            result.AddRange(Mutated.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Index = new Substrate.NetApi.Model.Types.Primitive.U32();
            Index.Decode(byteArray, ref p);
            Creator = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32();
            Creator.Decode(byteArray, ref p);
            Prime = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32();
            Prime.Decode(byteArray, ref p);
            Name = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT1();
            Name.Decode(byteArray, ref p);
            Cid = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT1();
            Cid.Decode(byteArray, ref p);
            OrgType = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_control.types.EnumOrgType();
            OrgType.Decode(byteArray, ref p);
            FeeModel = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_control.types.EnumFeeModel();
            FeeModel.Decode(byteArray, ref p);
            MembershipFee = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U128>();
            MembershipFee.Decode(byteArray, ref p);
            GovCurrency = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.zero_primitives.currency.EnumCurrencyId();
            GovCurrency.Decode(byteArray, ref p);
            PayCurrency = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.zero_primitives.currency.EnumCurrencyId();
            PayCurrency.Decode(byteArray, ref p);
            AccessModel = new Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_control.types.EnumAccessModel();
            AccessModel.Decode(byteArray, ref p);
            MemberLimit = new Substrate.NetApi.Model.Types.Primitive.U32();
            MemberLimit.Decode(byteArray, ref p);
            Created = new Substrate.NetApi.Model.Types.Primitive.U32();
            Created.Decode(byteArray, ref p);
            Mutated = new Substrate.NetApi.Model.Types.Primitive.U32();
            Mutated.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
