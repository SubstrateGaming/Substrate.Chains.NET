//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.GameDAO.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.GameDAO.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// UnknownTokensController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class UnknownTokensController : ControllerBase
    {
        
        private IUnknownTokensStorage _unknownTokensStorage;
        
        /// <summary>
        /// UnknownTokensController constructor.
        /// </summary>
        public UnknownTokensController(IUnknownTokensStorage unknownTokensStorage)
        {
            _unknownTokensStorage = unknownTokensStorage;
        }
        
        /// <summary>
        /// >> ConcreteFungibleBalances
        ///  Concrete fungible balances under a given location and a concrete
        ///  fungible id.
        /// 
        ///  double_map: who, asset_id => u128
        /// </summary>
        [HttpGet("ConcreteFungibleBalances")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.UnknownTokensStorage), "ConcreteFungibleBalancesParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.GameDAO.NET.NetApiExt.Generated.Model.xcm.v3.multilocation.MultiLocation, Substrate.GameDAO.NET.NetApiExt.Generated.Model.xcm.v3.multilocation.MultiLocation>))]
        public IActionResult GetConcreteFungibleBalances(string key)
        {
            return this.Ok(_unknownTokensStorage.GetConcreteFungibleBalances(key));
        }
        
        /// <summary>
        /// >> AbstractFungibleBalances
        ///  Abstract fungible balances under a given location and a abstract
        ///  fungible id.
        /// 
        ///  double_map: who, asset_id => u128
        /// </summary>
        [HttpGet("AbstractFungibleBalances")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.UnknownTokensStorage), "AbstractFungibleBalancesParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.GameDAO.NET.NetApiExt.Generated.Model.xcm.v3.multilocation.MultiLocation, Substrate.NetApi.Model.Types.Base.BaseVec<Substrate.NetApi.Model.Types.Primitive.U8>>))]
        public IActionResult GetAbstractFungibleBalances(string key)
        {
            return this.Ok(_unknownTokensStorage.GetAbstractFungibleBalances(key));
        }
    }
}
