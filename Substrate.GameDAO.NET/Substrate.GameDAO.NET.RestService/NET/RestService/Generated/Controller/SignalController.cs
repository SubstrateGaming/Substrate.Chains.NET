//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.GameDAO.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.GameDAO.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// SignalController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class SignalController : ControllerBase
    {
        
        private ISignalStorage _signalStorage;
        
        /// <summary>
        /// SignalController constructor.
        /// </summary>
        public SignalController(ISignalStorage signalStorage)
        {
            _signalStorage = signalStorage;
        }
        
        /// <summary>
        /// >> ProposalOf
        ///  Proposal by its hash (id).
        /// 
        ///  Proposals: map Hash => Proposal
        /// </summary>
        [HttpGet("ProposalOf")]
        [ProducesResponseType(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_signal.types.Proposal), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.SignalStorage), "ProposalOfParams", typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.primitive_types.H256))]
        public IActionResult GetProposalOf(string key)
        {
            return this.Ok(_signalStorage.GetProposalOf(key));
        }
        
        /// <summary>
        /// >> ProposalStates
        ///  Proposal's state: Created | Activated | Accepted | Rejected | Expired | Aborted | Finalized
        /// 
        ///  ProposalStates: map Hash => ProposalState
        /// </summary>
        [HttpGet("ProposalStates")]
        [ProducesResponseType(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_signal.types.EnumProposalState), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.SignalStorage), "ProposalStatesParams", typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.primitive_types.H256))]
        public IActionResult GetProposalStates(string key)
        {
            return this.Ok(_signalStorage.GetProposalStates(key));
        }
        
        /// <summary>
        /// >> ProposalsByBlock
        ///  Proposals ending in a block.
        /// 
        ///  ProposalsByBlock: map BlockNumber => BoundedVec<Hash, MaxProposalsPerBlock>
        /// </summary>
        [HttpGet("ProposalsByBlock")]
        [ProducesResponseType(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT38), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.SignalStorage), "ProposalsByBlockParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_signal.types.EnumBlockType, Substrate.NetApi.Model.Types.Primitive.U32>))]
        public IActionResult GetProposalsByBlock(string key)
        {
            return this.Ok(_signalStorage.GetProposalsByBlock(key));
        }
        
        /// <summary>
        /// >> ProposalCount
        /// </summary>
        [HttpGet("ProposalCount")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.SignalStorage), "ProposalCountParams")]
        public IActionResult GetProposalCount()
        {
            return this.Ok(_signalStorage.GetProposalCount());
        }
        
        /// <summary>
        /// >> ProposalVoting
        /// </summary>
        [HttpGet("ProposalVoting")]
        [ProducesResponseType(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_signal.types.Voting), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.SignalStorage), "ProposalVotingParams", typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.primitive_types.H256))]
        public IActionResult GetProposalVoting(string key)
        {
            return this.Ok(_signalStorage.GetProposalVoting(key));
        }
        
        /// <summary>
        /// >> CampaignBalanceUsed
        ///  The amount of currency that a project has used.
        /// 
        ///  CampaignBalanceUsed: map Hash => Balance
        /// </summary>
        [HttpGet("CampaignBalanceUsed")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.SignalStorage), "CampaignBalanceUsedParams", typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.primitive_types.H256))]
        public IActionResult GetCampaignBalanceUsed(string key)
        {
            return this.Ok(_signalStorage.GetCampaignBalanceUsed(key));
        }
    }
}
