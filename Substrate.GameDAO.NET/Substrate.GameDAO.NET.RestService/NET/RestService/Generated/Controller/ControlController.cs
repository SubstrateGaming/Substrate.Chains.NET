//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.GameDAO.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.GameDAO.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// ControlController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class ControlController : ControllerBase
    {
        
        private IControlStorage _controlStorage;
        
        /// <summary>
        /// ControlController constructor.
        /// </summary>
        public ControlController(IControlStorage controlStorage)
        {
            _controlStorage = controlStorage;
        }
        
        /// <summary>
        /// >> Orgs
        ///  Org by its id.
        /// 
        ///  Org: map Hash => Org
        /// </summary>
        [HttpGet("Orgs")]
        [ProducesResponseType(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_control.types.Org), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.ControlStorage), "OrgsParams", typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.primitive_types.H256))]
        public IActionResult GetOrgs(string key)
        {
            return this.Ok(_controlStorage.GetOrgs(key));
        }
        
        /// <summary>
        /// >> OrgStates
        ///  Org state (Inactive | Active | Locked) by org id.
        /// 
        ///  OrgStates: map Hash => OrgState
        /// </summary>
        [HttpGet("OrgStates")]
        [ProducesResponseType(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_control.types.EnumOrgState), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.ControlStorage), "OrgStatesParams", typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.primitive_types.H256))]
        public IActionResult GetOrgStates(string key)
        {
            return this.Ok(_controlStorage.GetOrgStates(key));
        }
        
        /// <summary>
        /// >> Members
        ///  Org members list by org id.
        /// 
        ///  Members: map Hash => Vec<AccountId>
        /// </summary>
        [HttpGet("Members")]
        [ProducesResponseType(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT37), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.ControlStorage), "MembersParams", typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.primitive_types.H256))]
        public IActionResult GetMembers(string key)
        {
            return this.Ok(_controlStorage.GetMembers(key));
        }
        
        /// <summary>
        /// >> OrgMemberCount
        ///  Org members count by org id.
        /// 
        ///  OrgMemberCount: map Hash => MemberLimit
        /// </summary>
        [HttpGet("OrgMemberCount")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.ControlStorage), "OrgMemberCountParams", typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.primitive_types.H256))]
        public IActionResult GetOrgMemberCount(string key)
        {
            return this.Ok(_controlStorage.GetOrgMemberCount(key));
        }
        
        /// <summary>
        /// >> MemberStates
        ///  Member state (Inactive | Active ...) by org Hash and member account.
        /// 
        ///  MemberStates: map Hash, AccountId => MemberState
        /// </summary>
        [HttpGet("MemberStates")]
        [ProducesResponseType(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.gamedao_control.types.EnumMemberState), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.ControlStorage), "MemberStatesParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.GameDAO.NET.NetApiExt.Generated.Model.primitive_types.H256, Substrate.GameDAO.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>))]
        public IActionResult GetMemberStates(string key)
        {
            return this.Ok(_controlStorage.GetMemberStates(key));
        }
        
        /// <summary>
        /// >> OrgTreasury
        ///  Treasury account of an Org.
        /// 
        ///  OrgTreasury: map Hash => AccountId
        /// </summary>
        [HttpGet("OrgTreasury")]
        [ProducesResponseType(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.ControlStorage), "OrgTreasuryParams", typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Model.primitive_types.H256))]
        public IActionResult GetOrgTreasury(string key)
        {
            return this.Ok(_controlStorage.GetOrgTreasury(key));
        }
        
        /// <summary>
        /// >> OrgCount
        /// </summary>
        [HttpGet("OrgCount")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.GameDAO.NET.NetApiExt.Generated.Storage.ControlStorage), "OrgCountParams")]
        public IActionResult GetOrgCount()
        {
            return this.Ok(_controlStorage.GetOrgCount());
        }
    }
}
