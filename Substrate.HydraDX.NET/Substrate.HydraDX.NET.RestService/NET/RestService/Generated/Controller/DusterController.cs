//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.HydraDX.NET.RestService.Generated.Storage;
using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.HydraDX.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// DusterController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class DusterController : ControllerBase
    {
        
        private IDusterStorage _dusterStorage;
        
        /// <summary>
        /// DusterController constructor.
        /// </summary>
        public DusterController(IDusterStorage dusterStorage)
        {
            _dusterStorage = dusterStorage;
        }
        
        /// <summary>
        /// >> AccountBlacklist
        ///  Accounts excluded from dusting.
        /// </summary>
        [HttpGet("AccountBlacklist")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Base.BaseTuple), 200)]
        [StorageKeyBuilder(typeof(Substrate.HydraDX.NET.NetApiExt.Generated.Storage.DusterStorage), "AccountBlacklistParams", typeof(Substrate.HydraDX.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32))]
        public IActionResult GetAccountBlacklist(string key)
        {
            return this.Ok(_dusterStorage.GetAccountBlacklist(key));
        }
        
        /// <summary>
        /// >> RewardAccount
        ///  Account to take reward from.
        /// </summary>
        [HttpGet("RewardAccount")]
        [ProducesResponseType(typeof(Substrate.HydraDX.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32), 200)]
        [StorageKeyBuilder(typeof(Substrate.HydraDX.NET.NetApiExt.Generated.Storage.DusterStorage), "RewardAccountParams")]
        public IActionResult GetRewardAccount()
        {
            return this.Ok(_dusterStorage.GetRewardAccount());
        }
        
        /// <summary>
        /// >> DustAccount
        ///  Account to send dust to.
        /// </summary>
        [HttpGet("DustAccount")]
        [ProducesResponseType(typeof(Substrate.HydraDX.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32), 200)]
        [StorageKeyBuilder(typeof(Substrate.HydraDX.NET.NetApiExt.Generated.Storage.DusterStorage), "DustAccountParams")]
        public IActionResult GetDustAccount()
        {
            return this.Ok(_dusterStorage.GetDustAccount());
        }
    }
}
