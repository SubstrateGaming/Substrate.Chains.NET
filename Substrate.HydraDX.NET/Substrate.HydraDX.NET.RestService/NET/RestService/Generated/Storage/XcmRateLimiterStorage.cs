//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.HydraDX.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IXcmRateLimiterStorage interface definition.
    /// </summary>
    public interface IXcmRateLimiterStorage : IStorage
    {
        
        /// <summary>
        /// >> AccumulatedAmounts
        ///  Accumulated amounts for each asset
        /// </summary>
        Substrate.HydraDX.NET.NetApiExt.Generated.Model.pallet_xcm_rate_limiter.AccumulatedAmount GetAccumulatedAmounts(string key);
    }
    
    /// <summary>
    /// XcmRateLimiterStorage class definition.
    /// </summary>
    public sealed class XcmRateLimiterStorage : IXcmRateLimiterStorage
    {
        
        /// <summary>
        /// _accumulatedAmountsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.HydraDX.NET.NetApiExt.Generated.Model.pallet_xcm_rate_limiter.AccumulatedAmount> _accumulatedAmountsTypedStorage;
        
        /// <summary>
        /// XcmRateLimiterStorage constructor.
        /// </summary>
        public XcmRateLimiterStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.AccumulatedAmountsTypedStorage = new TypedMapStorage<Substrate.HydraDX.NET.NetApiExt.Generated.Model.pallet_xcm_rate_limiter.AccumulatedAmount>("XcmRateLimiter.AccumulatedAmounts", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _accumulatedAmountsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.HydraDX.NET.NetApiExt.Generated.Model.pallet_xcm_rate_limiter.AccumulatedAmount> AccumulatedAmountsTypedStorage
        {
            get
            {
                return _accumulatedAmountsTypedStorage;
            }
            set
            {
                _accumulatedAmountsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await AccumulatedAmountsTypedStorage.InitializeAsync("XcmRateLimiter", "AccumulatedAmounts");
        }
        
        /// <summary>
        /// Implements any storage change for XcmRateLimiter.AccumulatedAmounts
        /// </summary>
        [StorageChange("XcmRateLimiter", "AccumulatedAmounts")]
        public void OnUpdateAccumulatedAmounts(string key, string data)
        {
            AccumulatedAmountsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> AccumulatedAmounts
        ///  Accumulated amounts for each asset
        /// </summary>
        public Substrate.HydraDX.NET.NetApiExt.Generated.Model.pallet_xcm_rate_limiter.AccumulatedAmount GetAccumulatedAmounts(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AccumulatedAmountsTypedStorage.Dictionary.TryGetValue(key, out Substrate.HydraDX.NET.NetApiExt.Generated.Model.pallet_xcm_rate_limiter.AccumulatedAmount result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
