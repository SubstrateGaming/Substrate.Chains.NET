//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Vara.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IGearStorage interface definition.
    /// </summary>
    public interface IGearStorage : IStorage
    {
        
        /// <summary>
        /// >> ExecuteInherent
        ///  A flag indicating whether the message queue should be processed at the end of a block
        /// 
        ///  If not set, the inherent extrinsic that processes the queue will keep throwing an error
        ///  thereby making the block builder exclude it from the block.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.Bool GetExecuteInherent();
        
        /// <summary>
        /// >> BlockNumber
        ///  The current block number being processed.
        /// 
        ///  It shows block number in which queue is processed.
        ///  May be less than system pallet block number if panic occurred previously.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetBlockNumber();
        
        /// <summary>
        /// >> GearRunInBlock
        ///  A guard to prohibit all but the first execution of `pallet_gear::run()` call in a block.
        /// 
        ///  Set to `Some(())` if the extrinsic is executed for the first time in a block.
        ///  All subsequent attempts would fail with `Error::<T>::GearRunAlreadyInBlock` error.
        ///  Set back to `None` in the `on_finalize()` hook at the end of the block.
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseTuple GetGearRunInBlock();
    }
    
    /// <summary>
    /// GearStorage class definition.
    /// </summary>
    public sealed class GearStorage : IGearStorage
    {
        
        /// <summary>
        /// _executeInherentTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.Bool> _executeInherentTypedStorage;
        
        /// <summary>
        /// _blockNumberTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _blockNumberTypedStorage;
        
        /// <summary>
        /// _gearRunInBlockTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Base.BaseTuple> _gearRunInBlockTypedStorage;
        
        /// <summary>
        /// GearStorage constructor.
        /// </summary>
        public GearStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.ExecuteInherentTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.Bool>("Gear.ExecuteInherent", storageDataProvider, storageChangeDelegates);
            this.BlockNumberTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Gear.BlockNumber", storageDataProvider, storageChangeDelegates);
            this.GearRunInBlockTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Base.BaseTuple>("Gear.GearRunInBlock", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _executeInherentTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.Bool> ExecuteInherentTypedStorage
        {
            get
            {
                return _executeInherentTypedStorage;
            }
            set
            {
                _executeInherentTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _blockNumberTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> BlockNumberTypedStorage
        {
            get
            {
                return _blockNumberTypedStorage;
            }
            set
            {
                _blockNumberTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _gearRunInBlockTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Base.BaseTuple> GearRunInBlockTypedStorage
        {
            get
            {
                return _gearRunInBlockTypedStorage;
            }
            set
            {
                _gearRunInBlockTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await ExecuteInherentTypedStorage.InitializeAsync("Gear", "ExecuteInherent");
            await BlockNumberTypedStorage.InitializeAsync("Gear", "BlockNumber");
            await GearRunInBlockTypedStorage.InitializeAsync("Gear", "GearRunInBlock");
        }
        
        /// <summary>
        /// Implements any storage change for Gear.ExecuteInherent
        /// </summary>
        [StorageChange("Gear", "ExecuteInherent")]
        public void OnUpdateExecuteInherent(string data)
        {
            ExecuteInherentTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> ExecuteInherent
        ///  A flag indicating whether the message queue should be processed at the end of a block
        /// 
        ///  If not set, the inherent extrinsic that processes the queue will keep throwing an error
        ///  thereby making the block builder exclude it from the block.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.Bool GetExecuteInherent()
        {
            return ExecuteInherentTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Gear.BlockNumber
        /// </summary>
        [StorageChange("Gear", "BlockNumber")]
        public void OnUpdateBlockNumber(string data)
        {
            BlockNumberTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> BlockNumber
        ///  The current block number being processed.
        /// 
        ///  It shows block number in which queue is processed.
        ///  May be less than system pallet block number if panic occurred previously.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetBlockNumber()
        {
            return BlockNumberTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Gear.GearRunInBlock
        /// </summary>
        [StorageChange("Gear", "GearRunInBlock")]
        public void OnUpdateGearRunInBlock(string data)
        {
            GearRunInBlockTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> GearRunInBlock
        ///  A guard to prohibit all but the first execution of `pallet_gear::run()` call in a block.
        /// 
        ///  Set to `Some(())` if the extrinsic is executed for the first time in a block.
        ///  All subsequent attempts would fail with `Error::<T>::GearRunAlreadyInBlock` error.
        ///  Set back to `None` in the `on_finalize()` hook at the end of the block.
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseTuple GetGearRunInBlock()
        {
            return GearRunInBlockTypedStorage.Get();
        }
    }
}
