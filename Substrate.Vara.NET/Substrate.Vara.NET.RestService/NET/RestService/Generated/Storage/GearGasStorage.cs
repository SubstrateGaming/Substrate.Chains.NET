//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Vara.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IGearGasStorage interface definition.
    /// </summary>
    public interface IGearGasStorage : IStorage
    {
        
        /// <summary>
        /// >> TotalIssuance
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U64 GetTotalIssuance();
        
        /// <summary>
        /// >> GasNodes
        /// </summary>
        Substrate.Vara.NET.NetApiExt.Generated.Model.gear_common.gas_provider.node.EnumGasNode GetGasNodes(string key);
        
        /// <summary>
        /// >> Allowance
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U64 GetAllowance();
    }
    
    /// <summary>
    /// GearGasStorage class definition.
    /// </summary>
    public sealed class GearGasStorage : IGearGasStorage
    {
        
        /// <summary>
        /// _totalIssuanceTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> _totalIssuanceTypedStorage;
        
        /// <summary>
        /// _gasNodesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Vara.NET.NetApiExt.Generated.Model.gear_common.gas_provider.node.EnumGasNode> _gasNodesTypedStorage;
        
        /// <summary>
        /// _allowanceTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> _allowanceTypedStorage;
        
        /// <summary>
        /// GearGasStorage constructor.
        /// </summary>
        public GearGasStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.TotalIssuanceTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64>("GearGas.TotalIssuance", storageDataProvider, storageChangeDelegates);
            this.GasNodesTypedStorage = new TypedMapStorage<Substrate.Vara.NET.NetApiExt.Generated.Model.gear_common.gas_provider.node.EnumGasNode>("GearGas.GasNodes", storageDataProvider, storageChangeDelegates);
            this.AllowanceTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64>("GearGas.Allowance", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _totalIssuanceTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> TotalIssuanceTypedStorage
        {
            get
            {
                return _totalIssuanceTypedStorage;
            }
            set
            {
                _totalIssuanceTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _gasNodesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Vara.NET.NetApiExt.Generated.Model.gear_common.gas_provider.node.EnumGasNode> GasNodesTypedStorage
        {
            get
            {
                return _gasNodesTypedStorage;
            }
            set
            {
                _gasNodesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _allowanceTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U64> AllowanceTypedStorage
        {
            get
            {
                return _allowanceTypedStorage;
            }
            set
            {
                _allowanceTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await TotalIssuanceTypedStorage.InitializeAsync("GearGas", "TotalIssuance");
            await GasNodesTypedStorage.InitializeAsync("GearGas", "GasNodes");
            await AllowanceTypedStorage.InitializeAsync("GearGas", "Allowance");
        }
        
        /// <summary>
        /// Implements any storage change for GearGas.TotalIssuance
        /// </summary>
        [StorageChange("GearGas", "TotalIssuance")]
        public void OnUpdateTotalIssuance(string data)
        {
            TotalIssuanceTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> TotalIssuance
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 GetTotalIssuance()
        {
            return TotalIssuanceTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for GearGas.GasNodes
        /// </summary>
        [StorageChange("GearGas", "GasNodes")]
        public void OnUpdateGasNodes(string key, string data)
        {
            GasNodesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> GasNodes
        /// </summary>
        public Substrate.Vara.NET.NetApiExt.Generated.Model.gear_common.gas_provider.node.EnumGasNode GetGasNodes(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (GasNodesTypedStorage.Dictionary.TryGetValue(key, out Substrate.Vara.NET.NetApiExt.Generated.Model.gear_common.gas_provider.node.EnumGasNode result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for GearGas.Allowance
        /// </summary>
        [StorageChange("GearGas", "Allowance")]
        public void OnUpdateAllowance(string data)
        {
            AllowanceTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> Allowance
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U64 GetAllowance()
        {
            return AllowanceTypedStorage.Get();
        }
    }
}
