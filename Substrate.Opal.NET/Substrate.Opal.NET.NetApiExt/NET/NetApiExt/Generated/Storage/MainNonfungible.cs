//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Opal.NET.NetApiExt.Generated.Storage
{
    
    
    /// <summary>
    /// >> NonfungibleStorage
    /// </summary>
    public sealed class NonfungibleStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> NonfungibleStorage Constructor
        /// </summary>
        public NonfungibleStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Nonfungible", "TokensMinted"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Nonfungible", "TokensBurnt"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Nonfungible", "TokenData"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId>), typeof(Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_nonfungible.ItemData)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Nonfungible", "TokenProperties"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId>), typeof(Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.PropertiesT2)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Nonfungible", "TokenAuxProperties"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.EnumPropertyScope, Substrate.Opal.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT12>), typeof(Substrate.Opal.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT41)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Nonfungible", "Owned"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId>), typeof(Substrate.NetApi.Model.Types.Primitive.Bool)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Nonfungible", "TokenChildren"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId, Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId>>), typeof(Substrate.NetApi.Model.Types.Primitive.Bool)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Nonfungible", "AccountBalance"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr>), typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Nonfungible", "Allowance"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId>), typeof(Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Nonfungible", "CollectionAllowance"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr>), typeof(Substrate.NetApi.Model.Types.Primitive.Bool)));
        }
        
        /// <summary>
        /// >> TokensMintedParams
        ///  Total amount of minted tokens in a collection.
        /// </summary>
        public static string TokensMintedParams(Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId key)
        {
            return RequestGenerator.GetStorage("Nonfungible", "TokensMinted", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> TokensMintedDefault
        /// Default value as hex string
        /// </summary>
        public static string TokensMintedDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> TokensMinted
        ///  Total amount of minted tokens in a collection.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> TokensMinted(Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId key, string blockhash, CancellationToken token)
        {
            string parameters = NonfungibleStorage.TokensMintedParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> TokensBurntParams
        ///  Amount of burnt tokens in a collection.
        /// </summary>
        public static string TokensBurntParams(Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId key)
        {
            return RequestGenerator.GetStorage("Nonfungible", "TokensBurnt", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> TokensBurntDefault
        /// Default value as hex string
        /// </summary>
        public static string TokensBurntDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> TokensBurnt
        ///  Amount of burnt tokens in a collection.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> TokensBurnt(Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId key, string blockhash, CancellationToken token)
        {
            string parameters = NonfungibleStorage.TokensBurntParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> TokenDataParams
        ///  Token data, used to partially describe a token.
        /// </summary>
        public static string TokenDataParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId> key)
        {
            return RequestGenerator.GetStorage("Nonfungible", "TokenData", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, key.Value);
        }
        
        /// <summary>
        /// >> TokenDataDefault
        /// Default value as hex string
        /// </summary>
        public static string TokenDataDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> TokenData
        ///  Token data, used to partially describe a token.
        /// </summary>
        public async Task<Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_nonfungible.ItemData> TokenData(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId> key, string blockhash, CancellationToken token)
        {
            string parameters = NonfungibleStorage.TokenDataParams(key);
            var result = await _client.GetStorageAsync<Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_nonfungible.ItemData>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> TokenPropertiesParams
        ///  Map of key-value pairs, describing the metadata of a token.
        /// </summary>
        public static string TokenPropertiesParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId> key)
        {
            return RequestGenerator.GetStorage("Nonfungible", "TokenProperties", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, key.Value);
        }
        
        /// <summary>
        /// >> TokenPropertiesDefault
        /// Default value as hex string
        /// </summary>
        public static string TokenPropertiesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> TokenProperties
        ///  Map of key-value pairs, describing the metadata of a token.
        /// </summary>
        public async Task<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.PropertiesT2> TokenProperties(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId> key, string blockhash, CancellationToken token)
        {
            string parameters = NonfungibleStorage.TokenPropertiesParams(key);
            var result = await _client.GetStorageAsync<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.PropertiesT2>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> TokenAuxPropertiesParams
        ///  Custom data of a token that is serialized to bytes,
        ///  primarily reserved for on-chain operations,
        ///  normally obscured from the external users.
        /// 
        ///  Auxiliary properties are slightly different from
        ///  usual [`TokenProperties`] due to an unlimited number
        ///  and separately stored and written-to key-value pairs.
        /// 
        ///  Currently unused.
        /// </summary>
        public static string TokenAuxPropertiesParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.EnumPropertyScope, Substrate.Opal.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT12> key)
        {
            return RequestGenerator.GetStorage("Nonfungible", "TokenAuxProperties", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, key.Value);
        }
        
        /// <summary>
        /// >> TokenAuxPropertiesDefault
        /// Default value as hex string
        /// </summary>
        public static string TokenAuxPropertiesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> TokenAuxProperties
        ///  Custom data of a token that is serialized to bytes,
        ///  primarily reserved for on-chain operations,
        ///  normally obscured from the external users.
        /// 
        ///  Auxiliary properties are slightly different from
        ///  usual [`TokenProperties`] due to an unlimited number
        ///  and separately stored and written-to key-value pairs.
        /// 
        ///  Currently unused.
        /// </summary>
        public async Task<Substrate.Opal.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT41> TokenAuxProperties(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.EnumPropertyScope, Substrate.Opal.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT12> key, string blockhash, CancellationToken token)
        {
            string parameters = NonfungibleStorage.TokenAuxPropertiesParams(key);
            var result = await _client.GetStorageAsync<Substrate.Opal.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT41>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> OwnedParams
        ///  Used to enumerate tokens owned by account.
        /// </summary>
        public static string OwnedParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId> key)
        {
            return RequestGenerator.GetStorage("Nonfungible", "Owned", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, key.Value);
        }
        
        /// <summary>
        /// >> OwnedDefault
        /// Default value as hex string
        /// </summary>
        public static string OwnedDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Owned
        ///  Used to enumerate tokens owned by account.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.Bool> Owned(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId> key, string blockhash, CancellationToken token)
        {
            string parameters = NonfungibleStorage.OwnedParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.Bool>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> TokenChildrenParams
        ///  Used to enumerate token's children.
        /// </summary>
        public static string TokenChildrenParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId, Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId>> key)
        {
            return RequestGenerator.GetStorage("Nonfungible", "TokenChildren", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, key.Value);
        }
        
        /// <summary>
        /// >> TokenChildrenDefault
        /// Default value as hex string
        /// </summary>
        public static string TokenChildrenDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> TokenChildren
        ///  Used to enumerate token's children.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.Bool> TokenChildren(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId, Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId>> key, string blockhash, CancellationToken token)
        {
            string parameters = NonfungibleStorage.TokenChildrenParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.Bool>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> AccountBalanceParams
        ///  Amount of tokens owned by an account in a collection.
        /// </summary>
        public static string AccountBalanceParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr> key)
        {
            return RequestGenerator.GetStorage("Nonfungible", "AccountBalance", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> AccountBalanceDefault
        /// Default value as hex string
        /// </summary>
        public static string AccountBalanceDefault()
        {
            return "0x00000000";
        }
        
        /// <summary>
        /// >> AccountBalance
        ///  Amount of tokens owned by an account in a collection.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> AccountBalance(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr> key, string blockhash, CancellationToken token)
        {
            string parameters = NonfungibleStorage.AccountBalanceParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> AllowanceParams
        ///  Allowance set by a token owner for another user to perform one of certain transactions on a token.
        /// </summary>
        public static string AllowanceParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId> key)
        {
            return RequestGenerator.GetStorage("Nonfungible", "Allowance", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat}, key.Value);
        }
        
        /// <summary>
        /// >> AllowanceDefault
        /// Default value as hex string
        /// </summary>
        public static string AllowanceDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Allowance
        ///  Allowance set by a token owner for another user to perform one of certain transactions on a token.
        /// </summary>
        public async Task<Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr> Allowance(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId> key, string blockhash, CancellationToken token)
        {
            string parameters = NonfungibleStorage.AllowanceParams(key);
            var result = await _client.GetStorageAsync<Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> CollectionAllowanceParams
        ///  Operator set by a wallet owner that could perform certain transactions on all tokens in the wallet.
        /// </summary>
        public static string CollectionAllowanceParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr> key)
        {
            return RequestGenerator.GetStorage("Nonfungible", "CollectionAllowance", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Twox64Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, key.Value);
        }
        
        /// <summary>
        /// >> CollectionAllowanceDefault
        /// Default value as hex string
        /// </summary>
        public static string CollectionAllowanceDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> CollectionAllowance
        ///  Operator set by a wallet owner that could perform certain transactions on all tokens in the wallet.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.Bool> CollectionAllowance(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr> key, string blockhash, CancellationToken token)
        {
            string parameters = NonfungibleStorage.CollectionAllowanceParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.Bool>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> NonfungibleCalls
    /// </summary>
    public sealed class NonfungibleCalls
    {
    }
    
    /// <summary>
    /// >> NonfungibleConstants
    /// </summary>
    public sealed class NonfungibleConstants
    {
    }
    
    /// <summary>
    /// >> NonfungibleErrors
    /// </summary>
    public enum NonfungibleErrors
    {
        
        /// <summary>
        /// >> NotNonfungibleDataUsedToMintFungibleCollectionToken
        /// Not Nonfungible item data used to mint in Nonfungible collection.
        /// </summary>
        NotNonfungibleDataUsedToMintFungibleCollectionToken,
        
        /// <summary>
        /// >> NonfungibleItemsHaveNoAmount
        /// Used amount > 1 with NFT
        /// </summary>
        NonfungibleItemsHaveNoAmount,
        
        /// <summary>
        /// >> CantBurnNftWithChildren
        /// Unable to burn NFT with children
        /// </summary>
        CantBurnNftWithChildren,
    }
}
