//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Substrate.NetApi.Model.Types.Base;
using Substrate.Opal.NET.RestService.Generated.Storage;
using Substrate.ServiceLayer.Attributes;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Opal.NET.RestService.Generated.Controller
{
    
    
    /// <summary>
    /// RefungibleController controller to access storages.
    /// </summary>
    [ApiController()]
    [Route("[controller]")]
    public sealed class RefungibleController : ControllerBase
    {
        
        private IRefungibleStorage _refungibleStorage;
        
        /// <summary>
        /// RefungibleController constructor.
        /// </summary>
        public RefungibleController(IRefungibleStorage refungibleStorage)
        {
            _refungibleStorage = refungibleStorage;
        }
        
        /// <summary>
        /// >> TokensMinted
        ///  Total amount of minted tokens in a collection.
        /// </summary>
        [HttpGet("TokensMinted")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.Opal.NET.NetApiExt.Generated.Storage.RefungibleStorage), "TokensMintedParams", typeof(Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId))]
        public IActionResult GetTokensMinted(string key)
        {
            return this.Ok(_refungibleStorage.GetTokensMinted(key));
        }
        
        /// <summary>
        /// >> TokensBurnt
        ///  Amount of tokens burnt in a collection.
        /// </summary>
        [HttpGet("TokensBurnt")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.Opal.NET.NetApiExt.Generated.Storage.RefungibleStorage), "TokensBurntParams", typeof(Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId))]
        public IActionResult GetTokensBurnt(string key)
        {
            return this.Ok(_refungibleStorage.GetTokensBurnt(key));
        }
        
        /// <summary>
        /// >> TokenProperties
        ///  Amount of pieces a refungible token is split into.
        /// </summary>
        [HttpGet("TokenProperties")]
        [ProducesResponseType(typeof(Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.PropertiesT2), 200)]
        [StorageKeyBuilder(typeof(Substrate.Opal.NET.NetApiExt.Generated.Storage.RefungibleStorage), "TokenPropertiesParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId>))]
        public IActionResult GetTokenProperties(string key)
        {
            return this.Ok(_refungibleStorage.GetTokenProperties(key));
        }
        
        /// <summary>
        /// >> TotalSupply
        ///  Total amount of pieces for token
        /// </summary>
        [HttpGet("TotalSupply")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.Opal.NET.NetApiExt.Generated.Storage.RefungibleStorage), "TotalSupplyParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId>))]
        public IActionResult GetTotalSupply(string key)
        {
            return this.Ok(_refungibleStorage.GetTotalSupply(key));
        }
        
        /// <summary>
        /// >> Owned
        ///  Used to enumerate tokens owned by account.
        /// </summary>
        [HttpGet("Owned")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.Bool), 200)]
        [StorageKeyBuilder(typeof(Substrate.Opal.NET.NetApiExt.Generated.Storage.RefungibleStorage), "OwnedParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId>))]
        public IActionResult GetOwned(string key)
        {
            return this.Ok(_refungibleStorage.GetOwned(key));
        }
        
        /// <summary>
        /// >> AccountBalance
        ///  Amount of tokens (not pieces) partially owned by an account within a collection.
        /// </summary>
        [HttpGet("AccountBalance")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U32), 200)]
        [StorageKeyBuilder(typeof(Substrate.Opal.NET.NetApiExt.Generated.Storage.RefungibleStorage), "AccountBalanceParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr>))]
        public IActionResult GetAccountBalance(string key)
        {
            return this.Ok(_refungibleStorage.GetAccountBalance(key));
        }
        
        /// <summary>
        /// >> Balance
        ///  Amount of token pieces owned by account.
        /// </summary>
        [HttpGet("Balance")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.Opal.NET.NetApiExt.Generated.Storage.RefungibleStorage), "BalanceParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr>))]
        public IActionResult GetBalance(string key)
        {
            return this.Ok(_refungibleStorage.GetBalance(key));
        }
        
        /// <summary>
        /// >> Allowance
        ///  Allowance set by a token owner for another user to perform one of certain transactions on a number of pieces of a token.
        /// </summary>
        [HttpGet("Allowance")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.U128), 200)]
        [StorageKeyBuilder(typeof(Substrate.Opal.NET.NetApiExt.Generated.Storage.RefungibleStorage), "AllowanceParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr>))]
        public IActionResult GetAllowance(string key)
        {
            return this.Ok(_refungibleStorage.GetAllowance(key));
        }
        
        /// <summary>
        /// >> CollectionAllowance
        ///  Spender set by a wallet owner that could perform certain transactions on all tokens in the wallet.
        /// </summary>
        [HttpGet("CollectionAllowance")]
        [ProducesResponseType(typeof(Substrate.NetApi.Model.Types.Primitive.Bool), 200)]
        [StorageKeyBuilder(typeof(Substrate.Opal.NET.NetApiExt.Generated.Storage.RefungibleStorage), "CollectionAllowanceParams", typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr, Substrate.Opal.NET.NetApiExt.Generated.Model.pallet_evm.account.EnumBasicCrossAccountIdRepr>))]
        public IActionResult GetCollectionAllowance(string key)
        {
            return this.Ok(_refungibleStorage.GetCollectionAllowance(key));
        }
    }
}
