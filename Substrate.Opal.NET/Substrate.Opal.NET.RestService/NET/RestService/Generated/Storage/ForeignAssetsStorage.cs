//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Opal.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IForeignAssetsStorage interface definition.
    /// </summary>
    public interface IForeignAssetsStorage : IStorage
    {
        
        /// <summary>
        /// >> ForeignAssetToCollection
        ///  The corresponding collections of foreign assets.
        /// </summary>
        Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId GetForeignAssetToCollection(string key);
        
        /// <summary>
        /// >> CollectionToForeignAsset
        ///  The corresponding foreign assets of collections.
        /// </summary>
        Substrate.Opal.NET.NetApiExt.Generated.Model.xcm.v3.multiasset.EnumAssetId GetCollectionToForeignAsset(string key);
        
        /// <summary>
        /// >> ForeignReserveAssetInstanceToTokenId
        ///  The correponding NFT token id of reserve NFTs
        /// </summary>
        Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId GetForeignReserveAssetInstanceToTokenId(string key);
        
        /// <summary>
        /// >> TokenIdToForeignReserveAssetInstance
        ///  The correponding reserve NFT of a token ID
        /// </summary>
        Substrate.Opal.NET.NetApiExt.Generated.Model.xcm.v3.multiasset.EnumAssetInstance GetTokenIdToForeignReserveAssetInstance(string key);
    }
    
    /// <summary>
    /// ForeignAssetsStorage class definition.
    /// </summary>
    public sealed class ForeignAssetsStorage : IForeignAssetsStorage
    {
        
        /// <summary>
        /// _foreignAssetToCollectionTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId> _foreignAssetToCollectionTypedStorage;
        
        /// <summary>
        /// _collectionToForeignAssetTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Opal.NET.NetApiExt.Generated.Model.xcm.v3.multiasset.EnumAssetId> _collectionToForeignAssetTypedStorage;
        
        /// <summary>
        /// _foreignReserveAssetInstanceToTokenIdTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId> _foreignReserveAssetInstanceToTokenIdTypedStorage;
        
        /// <summary>
        /// _tokenIdToForeignReserveAssetInstanceTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.Opal.NET.NetApiExt.Generated.Model.xcm.v3.multiasset.EnumAssetInstance> _tokenIdToForeignReserveAssetInstanceTypedStorage;
        
        /// <summary>
        /// ForeignAssetsStorage constructor.
        /// </summary>
        public ForeignAssetsStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.ForeignAssetToCollectionTypedStorage = new TypedMapStorage<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId>("ForeignAssets.ForeignAssetToCollection", storageDataProvider, storageChangeDelegates);
            this.CollectionToForeignAssetTypedStorage = new TypedMapStorage<Substrate.Opal.NET.NetApiExt.Generated.Model.xcm.v3.multiasset.EnumAssetId>("ForeignAssets.CollectionToForeignAsset", storageDataProvider, storageChangeDelegates);
            this.ForeignReserveAssetInstanceToTokenIdTypedStorage = new TypedMapStorage<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId>("ForeignAssets.ForeignReserveAssetInstanceToTokenId", storageDataProvider, storageChangeDelegates);
            this.TokenIdToForeignReserveAssetInstanceTypedStorage = new TypedMapStorage<Substrate.Opal.NET.NetApiExt.Generated.Model.xcm.v3.multiasset.EnumAssetInstance>("ForeignAssets.TokenIdToForeignReserveAssetInstance", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _foreignAssetToCollectionTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId> ForeignAssetToCollectionTypedStorage
        {
            get
            {
                return _foreignAssetToCollectionTypedStorage;
            }
            set
            {
                _foreignAssetToCollectionTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _collectionToForeignAssetTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Opal.NET.NetApiExt.Generated.Model.xcm.v3.multiasset.EnumAssetId> CollectionToForeignAssetTypedStorage
        {
            get
            {
                return _collectionToForeignAssetTypedStorage;
            }
            set
            {
                _collectionToForeignAssetTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _foreignReserveAssetInstanceToTokenIdTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId> ForeignReserveAssetInstanceToTokenIdTypedStorage
        {
            get
            {
                return _foreignReserveAssetInstanceToTokenIdTypedStorage;
            }
            set
            {
                _foreignReserveAssetInstanceToTokenIdTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _tokenIdToForeignReserveAssetInstanceTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.Opal.NET.NetApiExt.Generated.Model.xcm.v3.multiasset.EnumAssetInstance> TokenIdToForeignReserveAssetInstanceTypedStorage
        {
            get
            {
                return _tokenIdToForeignReserveAssetInstanceTypedStorage;
            }
            set
            {
                _tokenIdToForeignReserveAssetInstanceTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await ForeignAssetToCollectionTypedStorage.InitializeAsync("ForeignAssets", "ForeignAssetToCollection");
            await CollectionToForeignAssetTypedStorage.InitializeAsync("ForeignAssets", "CollectionToForeignAsset");
            await ForeignReserveAssetInstanceToTokenIdTypedStorage.InitializeAsync("ForeignAssets", "ForeignReserveAssetInstanceToTokenId");
            await TokenIdToForeignReserveAssetInstanceTypedStorage.InitializeAsync("ForeignAssets", "TokenIdToForeignReserveAssetInstance");
        }
        
        /// <summary>
        /// Implements any storage change for ForeignAssets.ForeignAssetToCollection
        /// </summary>
        [StorageChange("ForeignAssets", "ForeignAssetToCollection")]
        public void OnUpdateForeignAssetToCollection(string key, string data)
        {
            ForeignAssetToCollectionTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ForeignAssetToCollection
        ///  The corresponding collections of foreign assets.
        /// </summary>
        public Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId GetForeignAssetToCollection(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ForeignAssetToCollectionTypedStorage.Dictionary.TryGetValue(key, out Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.CollectionId result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ForeignAssets.CollectionToForeignAsset
        /// </summary>
        [StorageChange("ForeignAssets", "CollectionToForeignAsset")]
        public void OnUpdateCollectionToForeignAsset(string key, string data)
        {
            CollectionToForeignAssetTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> CollectionToForeignAsset
        ///  The corresponding foreign assets of collections.
        /// </summary>
        public Substrate.Opal.NET.NetApiExt.Generated.Model.xcm.v3.multiasset.EnumAssetId GetCollectionToForeignAsset(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (CollectionToForeignAssetTypedStorage.Dictionary.TryGetValue(key, out Substrate.Opal.NET.NetApiExt.Generated.Model.xcm.v3.multiasset.EnumAssetId result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ForeignAssets.ForeignReserveAssetInstanceToTokenId
        /// </summary>
        [StorageChange("ForeignAssets", "ForeignReserveAssetInstanceToTokenId")]
        public void OnUpdateForeignReserveAssetInstanceToTokenId(string key, string data)
        {
            ForeignReserveAssetInstanceToTokenIdTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> ForeignReserveAssetInstanceToTokenId
        ///  The correponding NFT token id of reserve NFTs
        /// </summary>
        public Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId GetForeignReserveAssetInstanceToTokenId(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (ForeignReserveAssetInstanceToTokenIdTypedStorage.Dictionary.TryGetValue(key, out Substrate.Opal.NET.NetApiExt.Generated.Model.up_data_structs.TokenId result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for ForeignAssets.TokenIdToForeignReserveAssetInstance
        /// </summary>
        [StorageChange("ForeignAssets", "TokenIdToForeignReserveAssetInstance")]
        public void OnUpdateTokenIdToForeignReserveAssetInstance(string key, string data)
        {
            TokenIdToForeignReserveAssetInstanceTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> TokenIdToForeignReserveAssetInstance
        ///  The correponding reserve NFT of a token ID
        /// </summary>
        public Substrate.Opal.NET.NetApiExt.Generated.Model.xcm.v3.multiasset.EnumAssetInstance GetTokenIdToForeignReserveAssetInstance(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (TokenIdToForeignReserveAssetInstanceTypedStorage.Dictionary.TryGetValue(key, out Substrate.Opal.NET.NetApiExt.Generated.Model.xcm.v3.multiasset.EnumAssetInstance result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}
