//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.Opal.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// IInflationStorage interface definition.
    /// </summary>
    public interface IInflationStorage : IStorage
    {
        
        /// <summary>
        /// >> StartingYearTotalIssuance
        ///  starting year total issuance
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U128 GetStartingYearTotalIssuance();
        
        /// <summary>
        /// >> BlockInflation
        ///  Current inflation for `InflationBlockInterval` number of blocks
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U128 GetBlockInflation();
        
        /// <summary>
        /// >> NextInflationBlock
        ///  Next target (relay) block when inflation will be applied
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetNextInflationBlock();
        
        /// <summary>
        /// >> NextRecalculationBlock
        ///  Next target (relay) block when inflation is recalculated
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetNextRecalculationBlock();
        
        /// <summary>
        /// >> StartBlock
        ///  Relay block when inflation has started
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetStartBlock();
    }
    
    /// <summary>
    /// InflationStorage class definition.
    /// </summary>
    public sealed class InflationStorage : IInflationStorage
    {
        
        /// <summary>
        /// _startingYearTotalIssuanceTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128> _startingYearTotalIssuanceTypedStorage;
        
        /// <summary>
        /// _blockInflationTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128> _blockInflationTypedStorage;
        
        /// <summary>
        /// _nextInflationBlockTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _nextInflationBlockTypedStorage;
        
        /// <summary>
        /// _nextRecalculationBlockTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _nextRecalculationBlockTypedStorage;
        
        /// <summary>
        /// _startBlockTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _startBlockTypedStorage;
        
        /// <summary>
        /// InflationStorage constructor.
        /// </summary>
        public InflationStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.StartingYearTotalIssuanceTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128>("Inflation.StartingYearTotalIssuance", storageDataProvider, storageChangeDelegates);
            this.BlockInflationTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128>("Inflation.BlockInflation", storageDataProvider, storageChangeDelegates);
            this.NextInflationBlockTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Inflation.NextInflationBlock", storageDataProvider, storageChangeDelegates);
            this.NextRecalculationBlockTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Inflation.NextRecalculationBlock", storageDataProvider, storageChangeDelegates);
            this.StartBlockTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("Inflation.StartBlock", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _startingYearTotalIssuanceTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128> StartingYearTotalIssuanceTypedStorage
        {
            get
            {
                return _startingYearTotalIssuanceTypedStorage;
            }
            set
            {
                _startingYearTotalIssuanceTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _blockInflationTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U128> BlockInflationTypedStorage
        {
            get
            {
                return _blockInflationTypedStorage;
            }
            set
            {
                _blockInflationTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _nextInflationBlockTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> NextInflationBlockTypedStorage
        {
            get
            {
                return _nextInflationBlockTypedStorage;
            }
            set
            {
                _nextInflationBlockTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _nextRecalculationBlockTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> NextRecalculationBlockTypedStorage
        {
            get
            {
                return _nextRecalculationBlockTypedStorage;
            }
            set
            {
                _nextRecalculationBlockTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _startBlockTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> StartBlockTypedStorage
        {
            get
            {
                return _startBlockTypedStorage;
            }
            set
            {
                _startBlockTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await StartingYearTotalIssuanceTypedStorage.InitializeAsync("Inflation", "StartingYearTotalIssuance");
            await BlockInflationTypedStorage.InitializeAsync("Inflation", "BlockInflation");
            await NextInflationBlockTypedStorage.InitializeAsync("Inflation", "NextInflationBlock");
            await NextRecalculationBlockTypedStorage.InitializeAsync("Inflation", "NextRecalculationBlock");
            await StartBlockTypedStorage.InitializeAsync("Inflation", "StartBlock");
        }
        
        /// <summary>
        /// Implements any storage change for Inflation.StartingYearTotalIssuance
        /// </summary>
        [StorageChange("Inflation", "StartingYearTotalIssuance")]
        public void OnUpdateStartingYearTotalIssuance(string data)
        {
            StartingYearTotalIssuanceTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> StartingYearTotalIssuance
        ///  starting year total issuance
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 GetStartingYearTotalIssuance()
        {
            return StartingYearTotalIssuanceTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Inflation.BlockInflation
        /// </summary>
        [StorageChange("Inflation", "BlockInflation")]
        public void OnUpdateBlockInflation(string data)
        {
            BlockInflationTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> BlockInflation
        ///  Current inflation for `InflationBlockInterval` number of blocks
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 GetBlockInflation()
        {
            return BlockInflationTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Inflation.NextInflationBlock
        /// </summary>
        [StorageChange("Inflation", "NextInflationBlock")]
        public void OnUpdateNextInflationBlock(string data)
        {
            NextInflationBlockTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> NextInflationBlock
        ///  Next target (relay) block when inflation will be applied
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetNextInflationBlock()
        {
            return NextInflationBlockTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Inflation.NextRecalculationBlock
        /// </summary>
        [StorageChange("Inflation", "NextRecalculationBlock")]
        public void OnUpdateNextRecalculationBlock(string data)
        {
            NextRecalculationBlockTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> NextRecalculationBlock
        ///  Next target (relay) block when inflation is recalculated
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetNextRecalculationBlock()
        {
            return NextRecalculationBlockTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for Inflation.StartBlock
        /// </summary>
        [StorageChange("Inflation", "StartBlock")]
        public void OnUpdateStartBlock(string data)
        {
            StartBlockTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> StartBlock
        ///  Relay block when inflation has started
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetStartBlock()
        {
            return StartBlockTypedStorage.Get();
        }
    }
}
